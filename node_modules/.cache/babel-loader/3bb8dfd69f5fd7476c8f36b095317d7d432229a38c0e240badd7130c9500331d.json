{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/staticData/WordCloudPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchStaticCountWordsFromAPI } from '../../api/StaticData';\nimport WordCloud from '../charts/WordCloud';\nimport DonutChart from '../charts/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordCloudPage = () => {\n  _s();\n  const [wordCloudData, setWordCloudData] = useState([]);\n  useEffect(() => {\n    const fetchWordCloudData = async () => {\n      try {\n        const fetchedData = await fetchStaticCountWordsFromAPI();\n        setWordCloudData(fetchedData);\n      } catch (error) {\n        console.error('Error fetching word cloud data:', error);\n      }\n    };\n    fetchWordCloudData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DonutChart, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(WordCloudPage, \"CQ/4xIwL+TNjGA1muUQGlmyY0NY=\");\n_c = WordCloudPage;\nexport default WordCloudPage;\nvar _c;\n$RefreshReg$(_c, \"WordCloudPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchStaticCountWordsFromAPI","WordCloud","DonutChart","jsxDEV","_jsxDEV","WordCloudPage","_s","wordCloudData","setWordCloudData","fetchWordCloudData","fetchedData","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/staticData/WordCloudPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { fetchStaticCountWordsFromAPI } from '../../api/StaticData'\nimport WordCloud from '../charts/WordCloud'\nimport DonutChart from '../charts/PieChart'\n\nconst WordCloudPage = () => {\n  const [wordCloudData, setWordCloudData] = useState([])\n\n  useEffect(() => {\n    const fetchWordCloudData = async () => {\n      try {\n        const fetchedData = await fetchStaticCountWordsFromAPI()\n        setWordCloudData(fetchedData)\n      } catch (error) {\n        console.error('Error fetching word cloud data:', error)\n      }\n    }\n\n    fetchWordCloudData()\n  }, [])\n\n  return <DonutChart />\n}\n\nexport default WordCloudPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,4BAA4B,QAAQ,sBAAsB;AACnE,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMV,4BAA4B,CAAC,CAAC;QACxDQ,gBAAgB,CAACE,WAAW,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDF,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA,CAACF,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvB,CAAC;AAAAV,EAAA,CAjBKD,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAmBnB,eAAeA,aAAa;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}