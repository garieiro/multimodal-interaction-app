{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/staticData/charts/PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data || !data.errors || !data.semantic) return;\n    const {\n      errors,\n      semantic\n    } = data;\n\n    // Transformando os dados em um formato compatível com o D3\n    const dataset = Object.entries(semantic).map(([semanticKey, semanticValue]) => ({\n      semantic: semanticKey,\n      errors: errors[semanticKey] || 0 // Se não houver erros para esta semântica, definir como 0\n    }));\n\n    // Largura e altura do SVG\n    const width = 460;\n    const height = 300;\n\n    // Configurações do gráfico de pizza\n    const radius = Math.min(width, height) / 2;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // Configuração do layout de pizza\n    const pie = d3.pie().sort(null).value(d => d.errors);\n\n    // Configuração do arco\n    const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n    // Selecionando o SVG\n    const svg = d3.select(svgRef.current);\n\n    // Limpando o SVG antes de desenhar\n    svg.selectAll('*').remove();\n\n    // Criando grupos para cada fatia da pizza\n    const g = svg.append('g').attr('transform', `translate(${width / 2},${height / 2})`);\n\n    // Criando as fatias da pizza\n    const path = g.selectAll('path').data(pie(dataset)).enter().append('path').attr('fill', (d, i) => color(i)).attr('d', arc);\n\n    // Adicionando texto em cada fatia da pizza\n    path.append('text').attr('transform', d => `translate(${arc.centroid(d)})`).attr('dy', '0.35em').text(d => d.data.semantic);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: 460,\n    height: 300\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(PieChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","PieChart","data","_s","svgRef","errors","semantic","dataset","Object","entries","map","semanticKey","semanticValue","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","pie","sort","value","d","arc","innerRadius","outerRadius","svg","select","current","selectAll","remove","g","append","attr","path","enter","i","centroid","text","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/staticData/charts/PieChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst PieChart = ({ data }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    if (!data || !data.errors || !data.semantic) return\n\n    const { errors, semantic } = data\n\n    // Transformando os dados em um formato compatível com o D3\n    const dataset = Object.entries(semantic).map(\n      ([semanticKey, semanticValue]) => ({\n        semantic: semanticKey,\n        errors: errors[semanticKey] || 0, // Se não houver erros para esta semântica, definir como 0\n      })\n    )\n\n    // Largura e altura do SVG\n    const width = 460\n    const height = 300\n\n    // Configurações do gráfico de pizza\n    const radius = Math.min(width, height) / 2\n    const color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    // Configuração do layout de pizza\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.errors)\n\n    // Configuração do arco\n    const arc = d3.arc().innerRadius(0).outerRadius(radius)\n\n    // Selecionando o SVG\n    const svg = d3.select(svgRef.current)\n\n    // Limpando o SVG antes de desenhar\n    svg.selectAll('*').remove()\n\n    // Criando grupos para cada fatia da pizza\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${width / 2},${height / 2})`)\n\n    // Criando as fatias da pizza\n    const path = g\n      .selectAll('path')\n      .data(pie(dataset))\n      .enter()\n      .append('path')\n      .attr('fill', (d, i) => color(i))\n      .attr('d', arc)\n\n    // Adicionando texto em cada fatia da pizza\n    path\n      .append('text')\n      .attr('transform', (d) => `translate(${arc.centroid(d)})`)\n      .attr('dy', '0.35em')\n      .text((d) => d.data.semantic)\n  }, [data])\n\n  return <svg ref={svgRef} width={460} height={300}></svg>\n}\n\nexport default PieChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}