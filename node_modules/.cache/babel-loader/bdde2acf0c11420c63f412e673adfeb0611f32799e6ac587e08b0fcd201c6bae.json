{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromFunctionExpression;\n/**\n * Extractor function for a FunctionExpression type value node.\n * Statically, we can't execute the given function, so just return a function\n * to indicate that the value is present.\n *\n * @param - value - AST Value object with type `FunctionExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromFunctionExpression(value) {\n  return function () {\n    return value;\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromFunctionExpression"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/node_modules/jsx-ast-utils/lib/values/expressions/FunctionExpression.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromFunctionExpression;\n/**\n * Extractor function for a FunctionExpression type value node.\n * Statically, we can't execute the given function, so just return a function\n * to indicate that the value is present.\n *\n * @param - value - AST Value object with type `FunctionExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromFunctionExpression(value) {\n  return function () {\n    return value;\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,kCAAkC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kCAAkCA,CAACF,KAAK,EAAE;EACjD,OAAO,YAAY;IACjB,OAAOA,KAAK;EACd,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}