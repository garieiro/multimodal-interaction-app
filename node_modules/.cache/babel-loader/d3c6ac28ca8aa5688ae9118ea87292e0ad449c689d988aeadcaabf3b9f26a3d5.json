{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/charts/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data) return;\n\n    // Ordenar os dados pelo eixo x em ordem crescente\n    const sortedData = data.slice().sort((a, b) => new Date(a.x) - new Date(b.x));\n\n    // Configuração do SVG e margens\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 40,\n      left: 40\n    };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n    // Escalas com margens\n    const xScale = d3.scaleTime().domain(d3.extent(sortedData, d => new Date(d.x))).range([margin.left, innerWidth + margin.left]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(sortedData, d => d.y)]).range([innerHeight + margin.top, margin.top]);\n\n    // Criar a linha\n    const line = d3.line().x(d => xScale(new Date(d.x))).y(d => yScale(d.y));\n\n    // Desenhar a linha\n    svg.append(\"path\").datum(sortedData).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // Adição dos eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append('g').attr('transform', `translate(0, ${innerHeight + margin.top})`).call(xAxis).selectAll('text').style('text-anchor', 'end').attr('transform', 'rotate(-45)');\n    svg.append('g').attr('transform', `translate(${margin.left}, 0)`).call(yAxis);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","LineChart","data","_s","svgRef","sortedData","slice","sort","a","b","Date","x","margin","top","right","bottom","left","width","height","innerWidth","innerHeight","svg","select","current","attr","xScale","scaleTime","domain","extent","d","range","yScale","scaleLinear","max","y","line","append","datum","xAxis","axisBottom","yAxis","axisLeft","ticks","call","selectAll","style","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/charts/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst LineChart = ({ data }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data) return;\n\n    // Ordenar os dados pelo eixo x em ordem crescente\n    const sortedData = data.slice().sort((a, b) => new Date(a.x) - new Date(b.x));\n\n    // Configuração do SVG e margens\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    // Escalas com margens\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(sortedData, d => new Date(d.x)))\n      .range([margin.left, innerWidth + margin.left]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(sortedData, (d) => d.y)])\n      .range([innerHeight + margin.top, margin.top]);\n\n    // Criar a linha\n    const line = d3.line()\n      .x((d) => xScale(new Date(d.x)))\n      .y((d) => yScale(d.y));\n\n    // Desenhar a linha\n    svg.append(\"path\")\n      .datum(sortedData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n\n    // Adição dos eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n\n    svg\n      .append('g')\n      .attr('transform', `translate(0, ${innerHeight + margin.top})`)\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('transform', 'rotate(-45)');\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(yAxis);\n  }, [data]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}