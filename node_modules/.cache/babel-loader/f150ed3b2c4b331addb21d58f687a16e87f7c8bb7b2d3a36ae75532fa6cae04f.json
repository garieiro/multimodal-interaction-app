{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/RealTimeData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport RealTimeBarChart from './charts/RealTimeBarChart';\nimport KafkaDataReceiver from '../../api/OnlineData';\nimport CountRealTimeEvents from './CountRealTimeEvents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeData = () => {\n  _s();\n  const [realTimeData, setRealTimeData] = useState([]);\n  const [eventCounts, setEventCounts] = useState({});\n  useEffect(() => {\n    const onDataReceived = receivedData => {\n      // Atualiza o estado dos contadores de eventos com base nos dados recebidos\n      const newEventCounts = CountRealTimeEvents(receivedData, {\n        ...eventCounts\n      });\n      setEventCounts(newEventCounts);\n\n      // Atualiza os dados do gr치fico com base nos contadores de eventos atualizados\n      const newData = Object.entries(newEventCounts).map(([eventType, count]) => ({\n        name: eventType,\n        value: count\n      }));\n\n      // Adiciona os novos dados aos dados existentes do gr치fico\n      setRealTimeData(prevCounts => CountRealTimeEvents(receivedData, prevCounts));\n      console.log('Event counts:', newEventCounts);\n    };\n    KafkaDataReceiver(onDataReceived);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real-Time Bar Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RealTimeBarChart, {\n        data: realTimeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeData, \"33r/OkJ9kiKRKhs8t2OXRON/cD0=\");\n_c = RealTimeData;\nexport default RealTimeData;\nvar _c;\n$RefreshReg$(_c, \"RealTimeData\");","map":{"version":3,"names":["React","useEffect","useState","RealTimeBarChart","KafkaDataReceiver","CountRealTimeEvents","jsxDEV","_jsxDEV","RealTimeData","_s","realTimeData","setRealTimeData","eventCounts","setEventCounts","onDataReceived","receivedData","newEventCounts","newData","Object","entries","map","eventType","count","name","value","prevCounts","console","log","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/RealTimeData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RealTimeBarChart from './charts/RealTimeBarChart';\nimport KafkaDataReceiver from '../../api/OnlineData';\nimport CountRealTimeEvents from './CountRealTimeEvents';\n\nconst RealTimeData = () => {\n  const [realTimeData, setRealTimeData] = useState([]);\n  const [eventCounts, setEventCounts] = useState({});\n\n  useEffect(() => {\n    const onDataReceived = (receivedData) => {\n      // Atualiza o estado dos contadores de eventos com base nos dados recebidos\n      const newEventCounts = CountRealTimeEvents(receivedData, { ...eventCounts });\n      setEventCounts(newEventCounts);\n\n      // Atualiza os dados do gr치fico com base nos contadores de eventos atualizados\n      const newData = Object.entries(newEventCounts).map(([eventType, count]) => ({\n        name: eventType,\n        value: count,\n      }));\n\n      // Adiciona os novos dados aos dados existentes do gr치fico\n      setRealTimeData(prevCounts => CountRealTimeEvents(receivedData, prevCounts));\n      console.log('Event counts:', newEventCounts);\n    };\n\n    KafkaDataReceiver(onDataReceived);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div>\n        <h1>Real-Time Bar Chart</h1>\n        <RealTimeBarChart data={realTimeData} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default RealTimeData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAIC,YAAY,IAAK;MACvC;MACA,MAAMC,cAAc,GAAGX,mBAAmB,CAACU,YAAY,EAAE;QAAE,GAAGH;MAAY,CAAC,CAAC;MAC5EC,cAAc,CAACG,cAAc,CAAC;;MAE9B;MACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,OAAO,CAACH,cAAc,CAAC,CAACI,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,KAAK,CAAC,MAAM;QAC1EC,IAAI,EAAEF,SAAS;QACfG,KAAK,EAAEF;MACT,CAAC,CAAC,CAAC;;MAEH;MACAX,eAAe,CAACc,UAAU,IAAIpB,mBAAmB,CAACU,YAAY,EAAEU,UAAU,CAAC,CAAC;MAC5EC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,cAAc,CAAC;IAC9C,CAAC;IAEDZ,iBAAiB,CAACU,cAAc,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACP,KAAK,CAAC4B,QAAQ;IAAAC,QAAA,eACbtB,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B1B,OAAA,CAACJ,gBAAgB;QAAC+B,IAAI,EAAExB;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACxB,EAAA,CAhCID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}