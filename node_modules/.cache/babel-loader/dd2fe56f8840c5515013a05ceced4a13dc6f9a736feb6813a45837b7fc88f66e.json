{"ast":null,"code":"const convertToMilliseconds = timeString => {\n  return new Date(timeString).getTime();\n};\nconst transformDataToTimeLine = data => {\n  const transformedData = [];\n  Object.entries(data).forEach(([expId, eventList]) => {\n    const ordinalLabel = getOrdinalLabel(expId) + ' exp';\n\n    // Extraindo os tempos de cada evento e convertendo para milissegundos\n    const times = eventList.map(event => ({\n      starting_time: convertToMilliseconds(event.Start),\n      ending_time: convertToMilliseconds(event.End)\n    }));\n\n    // Adicionando o label e os tempos à estrutura final\n    transformedData.push({\n      label: ordinalLabel,\n      times: times\n    });\n  });\n  return transformedData;\n};\n\n// Função auxiliar para gerar o label ordinal (1st, 2nd, 3rd, etc.)\nconst getOrdinalLabel = num => {\n  const suffixes = ['th', 'st', 'nd', 'rd'];\n  const v = num % 100;\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\n};\nexport default transformDataToTimeLine;","map":{"version":3,"names":["convertToMilliseconds","timeString","Date","getTime","transformDataToTimeLine","data","transformedData","Object","entries","forEach","expId","eventList","ordinalLabel","getOrdinalLabel","times","map","event","starting_time","Start","ending_time","End","push","label","num","suffixes","v"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToTimeLine.js"],"sourcesContent":["const convertToMilliseconds = (timeString) => {\n  return new Date(timeString).getTime()\n}\n\nconst transformDataToTimeLine = (data) => {\n  const transformedData = []\n\n  Object.entries(data).forEach(([expId, eventList]) => {\n    const ordinalLabel = getOrdinalLabel(expId) + ' exp'\n\n    // Extraindo os tempos de cada evento e convertendo para milissegundos\n    const times = eventList.map((event) => ({\n      starting_time: convertToMilliseconds(event.Start),\n      ending_time: convertToMilliseconds(event.End),\n    }))\n\n    // Adicionando o label e os tempos à estrutura final\n    transformedData.push({\n      label: ordinalLabel,\n      times: times,\n    })\n  })\n\n  return transformedData\n}\n\n// Função auxiliar para gerar o label ordinal (1st, 2nd, 3rd, etc.)\nconst getOrdinalLabel = (num) => {\n  const suffixes = ['th', 'st', 'nd', 'rd']\n  const v = num % 100\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0])\n}\n\nexport default transformDataToTimeLine\n"],"mappings":"AAAA,MAAMA,qBAAqB,GAAIC,UAAU,IAAK;EAC5C,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,OAAO,CAAC,CAAC;AACvC,CAAC;AAED,MAAMC,uBAAuB,GAAIC,IAAI,IAAK;EACxC,MAAMC,eAAe,GAAG,EAAE;EAE1BC,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,KAAK,EAAEC,SAAS,CAAC,KAAK;IACnD,MAAMC,YAAY,GAAGC,eAAe,CAACH,KAAK,CAAC,GAAG,MAAM;;IAEpD;IACA,MAAMI,KAAK,GAAGH,SAAS,CAACI,GAAG,CAAEC,KAAK,KAAM;MACtCC,aAAa,EAAEjB,qBAAqB,CAACgB,KAAK,CAACE,KAAK,CAAC;MACjDC,WAAW,EAAEnB,qBAAqB,CAACgB,KAAK,CAACI,GAAG;IAC9C,CAAC,CAAC,CAAC;;IAEH;IACAd,eAAe,CAACe,IAAI,CAAC;MACnBC,KAAK,EAAEV,YAAY;MACnBE,KAAK,EAAEA;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOR,eAAe;AACxB,CAAC;;AAED;AACA,MAAMO,eAAe,GAAIU,GAAG,IAAK;EAC/B,MAAMC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACzC,MAAMC,CAAC,GAAGF,GAAG,GAAG,GAAG;EACnB,OAAOA,GAAG,IAAIC,QAAQ,CAAC,CAACC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAAC,IAAID,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC;AAED,eAAepB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}