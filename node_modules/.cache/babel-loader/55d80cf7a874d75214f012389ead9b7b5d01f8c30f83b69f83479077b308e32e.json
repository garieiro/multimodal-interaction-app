{"ast":null,"code":"const CountRealTimeEvents = (receivedData, currentEventCounts) => {\n  // Cria uma cópia do objeto de contagem de eventos atual\n  const newEventCounts = {\n    ...currentEventCounts\n  };\n\n  // Verifica se os dados recebidos são um objeto\n  if (typeof receivedData === 'object' && receivedData.data) {\n    const event = JSON.parse(receivedData.data); // Converte a string JSON para objeto JavaScript\n    const eventType = event.EventType;\n\n    // Verifica se o tipo de evento já existe no contador atual\n    if (eventType in newEventCounts) {\n      // Incrementa o contador do tipo de evento\n      newEventCounts[eventType]++;\n    } else {\n      // Se o tipo de evento ainda não existir no contador, inicializa-o com 1\n      newEventCounts[eventType] = 1;\n    }\n  }\n  console.log(\"Evento:\", newEventCounts);\n  return newEventCounts;\n};\n_c = CountRealTimeEvents;\nexport default CountRealTimeEvents;\nvar _c;\n$RefreshReg$(_c, \"CountRealTimeEvents\");","map":{"version":3,"names":["CountRealTimeEvents","receivedData","currentEventCounts","newEventCounts","data","event","JSON","parse","eventType","EventType","console","log","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/CountRealTimeEvents.js"],"sourcesContent":["const CountRealTimeEvents = (receivedData, currentEventCounts) => {\n  // Cria uma cópia do objeto de contagem de eventos atual\n  const newEventCounts = { ...currentEventCounts };\n\n  // Verifica se os dados recebidos são um objeto\n  if (typeof receivedData === 'object' && receivedData.data) {\n    const event = JSON.parse(receivedData.data); // Converte a string JSON para objeto JavaScript\n    const eventType = event.EventType;\n\n    // Verifica se o tipo de evento já existe no contador atual\n    if (eventType in newEventCounts) {\n      // Incrementa o contador do tipo de evento\n      newEventCounts[eventType]++;\n    } else {\n      // Se o tipo de evento ainda não existir no contador, inicializa-o com 1\n      newEventCounts[eventType] = 1;\n    }\n  }\n\n  console.log(\"Evento:\", newEventCounts);\n  return newEventCounts;\n};\n\nexport default CountRealTimeEvents;\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGA,CAACC,YAAY,EAAEC,kBAAkB,KAAK;EAChE;EACA,MAAMC,cAAc,GAAG;IAAE,GAAGD;EAAmB,CAAC;;EAEhD;EACA,IAAI,OAAOD,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACG,IAAI,EAAE;IACzD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACG,IAAI,CAAC,CAAC,CAAC;IAC7C,MAAMI,SAAS,GAAGH,KAAK,CAACI,SAAS;;IAEjC;IACA,IAAID,SAAS,IAAIL,cAAc,EAAE;MAC/B;MACAA,cAAc,CAACK,SAAS,CAAC,EAAE;IAC7B,CAAC,MAAM;MACL;MACAL,cAAc,CAACK,SAAS,CAAC,GAAG,CAAC;IAC/B;EACF;EAEAE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAER,cAAc,CAAC;EACtC,OAAOA,cAAc;AACvB,CAAC;AAACS,EAAA,GArBIZ,mBAAmB;AAuBzB,eAAeA,mBAAmB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}