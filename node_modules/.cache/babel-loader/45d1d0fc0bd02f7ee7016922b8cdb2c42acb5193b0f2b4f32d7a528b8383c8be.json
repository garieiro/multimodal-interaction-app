{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/buildCharts/stackedBarChart/StaticStackedBar.js\",\n  _s = $RefreshSig$();\nimport TimelineChart from '../../charts/TimeLineChart';\nimport React, { useEffect, useState } from 'react';\nimport { fetchStaticAllTypesFromAPI } from '../../../api/StaticData';\nimport StackedBarChart from '../../charts/StackedBarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticStackedBar = ({\n  onDataReceived,\n  onWordDataReceived\n}) => {\n  _s();\n  const [stackedBar, setStackedBar] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    const fetchStackedBar = async () => {\n      try {\n        const fetchStackedBarData = await fetchStaticAllTypesFromAPI();\n        setStackedBar(fetchStackedBarData);\n        setDataLoaded(true);\n      } catch (error) {\n        console.error('Error fetching types data:', error);\n      }\n    };\n    fetchStackedBar().catch(error => console.error(error));\n  }, []);\n  return dataLoaded && /*#__PURE__*/_jsxDEV(StackedBarChart, {\n    data: stackedBar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 24\n  }, this);\n};\n_s(StaticStackedBar, \"rmWfK2JZXnbp8gwPkzJUkzDg6Go=\");\n_c = StaticStackedBar;\nexport default StaticStackedBar;\nvar _c;\n$RefreshReg$(_c, \"StaticStackedBar\");","map":{"version":3,"names":["TimelineChart","React","useEffect","useState","fetchStaticAllTypesFromAPI","StackedBarChart","jsxDEV","_jsxDEV","StaticStackedBar","onDataReceived","onWordDataReceived","_s","stackedBar","setStackedBar","dataLoaded","setDataLoaded","fetchStackedBar","fetchStackedBarData","error","console","catch","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/buildCharts/stackedBarChart/StaticStackedBar.js"],"sourcesContent":["import TimelineChart from '../../charts/TimeLineChart'\nimport React, { useEffect, useState } from 'react'\nimport { fetchStaticAllTypesFromAPI } from '../../../api/StaticData'\nimport StackedBarChart from '../../charts/StackedBarChart'\n\nconst StaticStackedBar = ({ onDataReceived, onWordDataReceived }) => {\n  const [stackedBar, setStackedBar] = useState([])\n  const [dataLoaded, setDataLoaded] = useState(false)\n\n  useEffect(() => {\n    const fetchStackedBar = async () => {\n      try {\n        const fetchStackedBarData = await fetchStaticAllTypesFromAPI()\n        setStackedBar(fetchStackedBarData)\n        setDataLoaded(true)\n      } catch (error) {\n        console.error('Error fetching types data:', error)\n      }\n    }\n\n    fetchStackedBar().catch((error) => console.error(error))\n  }, [])\n\n  return dataLoaded && <StackedBarChart data={stackedBar} />\n}\n\nexport default StaticStackedBar\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,0BAA0B,QAAQ,yBAAyB;AACpE,OAAOC,eAAe,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,mBAAmB,GAAG,MAAMb,0BAA0B,CAAC,CAAC;QAC9DS,aAAa,CAACI,mBAAmB,CAAC;QAClCF,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDF,eAAe,CAAC,CAAC,CAACI,KAAK,CAAEF,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,UAAU,iBAAIP,OAAA,CAACF,eAAe;IAACgB,IAAI,EAAET;EAAW;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAAAd,EAAA,CAnBKH,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAqBtB,eAAeA,gBAAgB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}