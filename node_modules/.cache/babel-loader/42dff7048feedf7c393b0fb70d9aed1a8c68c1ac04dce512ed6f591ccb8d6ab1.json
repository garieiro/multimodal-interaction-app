{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/buildCharts/sunBurstChart/StaticSunBurst.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SunBurst from '../../charts/SunBurst';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transformDataToHierarchy = data => {\n  const hierarchy = {\n    name: 'Users',\n    children: []\n  };\n  Object.entries(data).forEach(([user, events]) => {\n    const userNode = {\n      name: `User ${user}`,\n      children: []\n    };\n    const eventTypes = {};\n    events.forEach(event => {\n      const {\n        type,\n        EventType,\n        Duration\n      } = event;\n      if (!type) {\n        console.error('Event type is undefined or null:', event);\n        return;\n      }\n      if (!eventTypes[type]) {\n        eventTypes[type] = {};\n      }\n      if (eventTypes[type][EventType]) {\n        eventTypes[type][EventType] += Duration;\n      } else {\n        eventTypes[type][EventType] = Duration;\n      }\n    });\n    Object.entries(eventTypes).forEach(([type, typeEvents]) => {\n      const typeNode = {\n        name: type,\n        children: []\n      };\n      Object.entries(typeEvents).forEach(([eventType, duration]) => {\n        typeNode.children.push({\n          name: eventType,\n          value: duration\n        });\n      });\n      userNode.children.push(typeNode);\n    });\n    hierarchy.children.push(userNode);\n  });\n  return hierarchy;\n};\nconst StaticSunBurst = ({\n  data\n}) => {\n  _s();\n  const transformedData = React.useMemo(() => transformDataToHierarchy(data), [data]);\n  console.log('SunburstData:', transformedData);\n  return /*#__PURE__*/_jsxDEV(SunBurst, {\n    data: transformedData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(StaticSunBurst, \"EagV1gTkkCWkis1OSM0zCzXCCD4=\");\n_c = StaticSunBurst;\nexport default StaticSunBurst;\nvar _c;\n$RefreshReg$(_c, \"StaticSunBurst\");","map":{"version":3,"names":["React","SunBurst","jsxDEV","_jsxDEV","transformDataToHierarchy","data","hierarchy","name","children","Object","entries","forEach","user","events","userNode","eventTypes","event","type","EventType","Duration","console","error","typeEvents","typeNode","eventType","duration","push","value","StaticSunBurst","_s","transformedData","useMemo","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/buildCharts/sunBurstChart/StaticSunBurst.js"],"sourcesContent":["import React from 'react'\nimport SunBurst from '../../charts/SunBurst'\n\nconst transformDataToHierarchy = (data) => {\n  const hierarchy = {\n    name: 'Users',\n    children: [],\n  }\n\n  Object.entries(data).forEach(([user, events]) => {\n    const userNode = {\n      name: `User ${user}`,\n      children: [],\n    }\n\n    const eventTypes = {}\n\n    events.forEach((event) => {\n      const { type, EventType, Duration } = event\n      if (!type) {\n        console.error('Event type is undefined or null:', event)\n        return\n      }\n      if (!eventTypes[type]) {\n        eventTypes[type] = {}\n      }\n      if (eventTypes[type][EventType]) {\n        eventTypes[type][EventType] += Duration\n      } else {\n        eventTypes[type][EventType] = Duration\n      }\n    })\n\n    Object.entries(eventTypes).forEach(([type, typeEvents]) => {\n      const typeNode = {\n        name: type,\n        children: [],\n      }\n\n      Object.entries(typeEvents).forEach(([eventType, duration]) => {\n        typeNode.children.push({ name: eventType, value: duration })\n      })\n\n      userNode.children.push(typeNode)\n    })\n\n    hierarchy.children.push(userNode)\n  })\n\n  return hierarchy\n}\n\nconst StaticSunBurst = ({ data }) => {\n  const transformedData = React.useMemo(\n    () => transformDataToHierarchy(data),\n    [data]\n  )\n  console.log('SunburstData:', transformedData)\n  return <SunBurst data={transformedData} />\n}\n\nexport default StaticSunBurst\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,wBAAwB,GAAIC,IAAI,IAAK;EACzC,MAAMC,SAAS,GAAG;IAChBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE;EACZ,CAAC;EAEDC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,IAAI,EAAEC,MAAM,CAAC,KAAK;IAC/C,MAAMC,QAAQ,GAAG;MACfP,IAAI,EAAE,QAAQK,IAAI,EAAE;MACpBJ,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMO,UAAU,GAAG,CAAC,CAAC;IAErBF,MAAM,CAACF,OAAO,CAAEK,KAAK,IAAK;MACxB,MAAM;QAAEC,IAAI;QAAEC,SAAS;QAAEC;MAAS,CAAC,GAAGH,KAAK;MAC3C,IAAI,CAACC,IAAI,EAAE;QACTG,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEL,KAAK,CAAC;QACxD;MACF;MACA,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,EAAE;QACrBF,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;MACvB;MACA,IAAIF,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,EAAE;QAC/BH,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,IAAIC,QAAQ;MACzC,CAAC,MAAM;QACLJ,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,GAAGC,QAAQ;MACxC;IACF,CAAC,CAAC;IAEFV,MAAM,CAACC,OAAO,CAACK,UAAU,CAAC,CAACJ,OAAO,CAAC,CAAC,CAACM,IAAI,EAAEK,UAAU,CAAC,KAAK;MACzD,MAAMC,QAAQ,GAAG;QACfhB,IAAI,EAAEU,IAAI;QACVT,QAAQ,EAAE;MACZ,CAAC;MAEDC,MAAM,CAACC,OAAO,CAACY,UAAU,CAAC,CAACX,OAAO,CAAC,CAAC,CAACa,SAAS,EAAEC,QAAQ,CAAC,KAAK;QAC5DF,QAAQ,CAACf,QAAQ,CAACkB,IAAI,CAAC;UAAEnB,IAAI,EAAEiB,SAAS;UAAEG,KAAK,EAAEF;QAAS,CAAC,CAAC;MAC9D,CAAC,CAAC;MAEFX,QAAQ,CAACN,QAAQ,CAACkB,IAAI,CAACH,QAAQ,CAAC;IAClC,CAAC,CAAC;IAEFjB,SAAS,CAACE,QAAQ,CAACkB,IAAI,CAACZ,QAAQ,CAAC;EACnC,CAAC,CAAC;EAEF,OAAOR,SAAS;AAClB,CAAC;AAED,MAAMsB,cAAc,GAAGA,CAAC;EAAEvB;AAAK,CAAC,KAAK;EAAAwB,EAAA;EACnC,MAAMC,eAAe,GAAG9B,KAAK,CAAC+B,OAAO,CACnC,MAAM3B,wBAAwB,CAACC,IAAI,CAAC,EACpC,CAACA,IAAI,CACP,CAAC;EACDe,OAAO,CAACY,GAAG,CAAC,eAAe,EAAEF,eAAe,CAAC;EAC7C,oBAAO3B,OAAA,CAACF,QAAQ;IAACI,IAAI,EAAEyB;EAAgB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C,CAAC;AAAAP,EAAA,CAPKD,cAAc;AAAAS,EAAA,GAAdT,cAAc;AASpB,eAAeA,cAAc;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}