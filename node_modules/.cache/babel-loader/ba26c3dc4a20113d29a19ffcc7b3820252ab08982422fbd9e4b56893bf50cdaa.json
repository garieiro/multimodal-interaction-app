{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert, Button, Container, ListGroup, ListGroupItem, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [dataset, setDataset] = useState([]);\n  const [selectedDataset, setSelectedDataset] = useState(null); // Estado para armazenar o dataset selecionado\n\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI();\n        setDataset(fetchedDataset);\n      } catch (error) {\n        console.error('Error fetching Dataset:', error);\n      }\n    };\n    fetchDataset().catch(error => console.error('Error fetching Dataset:', error));\n  }, []);\n  const formatDatasetName = filename => {\n    const nameWithoutExtension = filename.replace('.json', '');\n    return nameWithoutExtension.replace(/^dataset/i, 'Dataset').replace(/(\\d+)/, ' $1');\n  };\n  const handleDatasetClick = dataset => {\n    setSelectedDataset(dataset);\n  };\n  const datasetFile = file => [{\n    label: 'Name',\n    value: file.dataset ? file.dataset : 'No dataset Name'\n  }, {\n    label: 'Number of Users',\n    value: file.users ? file.users : '0'\n  }, {\n    label: 'Dataset Time',\n    value: file.total_duration ? `${file.total_duration} s` : '0 s'\n  }, {\n    label: 'Number of Types',\n    value: file.type_counts ? JSON.stringify(file.type_counts) : 'No data'\n  }, {\n    label: 'Number of Event Types',\n    value: file.event_type_counts ? JSON.stringify(file.event_type_counts) : 'No data'\n  }];\n  const sortedDataset = dataset.sort((first, second) => first.dataset.localeCompare(second.dataset));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-text\",\n        children: [\"Visualization and Analysis \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this), \" of \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 48\n        }, this), \" Multimodal Interaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: sortedDataset.map((file, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              action: true,\n              tag: \"button\",\n              onClick: () => handleDatasetClick(file),\n              className: \"dataset-list-item\",\n              children: [formatDatasetName(file.dataset), \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: selectedDataset ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dataset-info\",\n            children: datasetFile(selectedDataset).map((info, index) => /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h5\",\n                  className: \"text-primary\",\n                  children: info.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardText, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: info.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), selectedDataset && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Content for section 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"UK5flWDJ6Cdn+DqorSSUQtEsgw4=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Alert","Button","Container","ListGroup","ListGroupItem","Card","CardBody","CardTitle","CardText","fetchStaticAllFilesFromAPI","jsxDEV","_jsxDEV","MainPage","_s","navigate","dataset","setDataset","selectedDataset","setSelectedDataset","fetchDataset","fetchedDataset","error","console","catch","formatDatasetName","filename","nameWithoutExtension","replace","handleDatasetClick","datasetFile","file","label","value","users","total_duration","type_counts","JSON","stringify","event_type_counts","sortedDataset","sort","first","second","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","action","tag","onClick","info","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  Alert,\n  Button,\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n} from 'reactstrap'\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData'\n\nconst MainPage = () => {\n  const navigate = useNavigate()\n  const [dataset, setDataset] = useState([])\n  const [selectedDataset, setSelectedDataset] = useState(null) // Estado para armazenar o dataset selecionado\n\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI()\n        setDataset(fetchedDataset)\n      } catch (error) {\n        console.error('Error fetching Dataset:', error)\n      }\n    }\n\n    fetchDataset().catch((error) =>\n      console.error('Error fetching Dataset:', error)\n    )\n  }, [])\n\n  const formatDatasetName = (filename) => {\n    const nameWithoutExtension = filename.replace('.json', '')\n    return nameWithoutExtension\n      .replace(/^dataset/i, 'Dataset')\n      .replace(/(\\d+)/, ' $1')\n  }\n\n  const handleDatasetClick = (dataset) => {\n    setSelectedDataset(dataset)\n  }\n\n  const datasetFile = (file) => [\n    {\n      label: 'Name',\n      value: file.dataset ? file.dataset : 'No dataset Name',\n    },\n    {\n      label: 'Number of Users',\n      value: file.users ? file.users : '0',\n    },\n    {\n      label: 'Dataset Time',\n      value: file.total_duration ? `${file.total_duration} s` : '0 s',\n    },\n    {\n      label: 'Number of Types',\n      value: file.type_counts ? JSON.stringify(file.type_counts) : 'No data',\n    },\n    {\n      label: 'Number of Event Types',\n      value: file.event_type_counts\n        ? JSON.stringify(file.event_type_counts)\n        : 'No data',\n    },\n  ]\n\n  const sortedDataset = dataset.sort((first, second) =>\n    first.dataset.localeCompare(second.dataset)\n  )\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"title\">\n        <h1 className=\"title-text\">\n          Visualization and Analysis <br /> of <br /> Multimodal Interaction\n        </h1>\n      </div>\n\n      <div className=\"grid-container\">\n        <div className=\"grid-item\">\n          <Container>\n            <ListGroup>\n              {sortedDataset.map((file, index) => (\n                <ListGroupItem\n                  key={index}\n                  action\n                  tag=\"button\"\n                  onClick={() => handleDatasetClick(file)}\n                  className=\"dataset-list-item\"\n                >\n                  {formatDatasetName(file.dataset)} {/* Nome do dataset */}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Container>\n        </div>\n\n        <div className=\"grid-item\">\n          {selectedDataset ? (\n            <Container>\n              <div className=\"dataset-info\">\n                {datasetFile(selectedDataset).map((info, index) => (\n                  <Card key={index} className=\"mb-3\">\n                    <CardBody>\n                      <CardTitle tag=\"h5\" className=\"text-primary\">\n                        {info.label}\n                      </CardTitle>\n                      <CardText>\n                        <span className=\"text-muted\">{info.value}</span>\n                      </CardText>\n                    </CardBody>\n                  </Card>\n                ))}\n              </div>\n            </Container>\n          ) : (\n            ''\n          )}\n        </div>\n\n        {selectedDataset && (\n          <div className=\"grid-item\">\n            <p>Content for section 3</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MainPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,KAAK,EACLC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,IAAI,EACJC,QAAQ,EACRC,SAAS,EACTC,QAAQ,QACH,YAAY;AACnB,SAASC,0BAA0B,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,cAAc,GAAG,MAAMX,0BAA0B,CAAC,CAAC;QACzDO,UAAU,CAACI,cAAc,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDF,YAAY,CAAC,CAAC,CAACI,KAAK,CAAEF,KAAK,IACzBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAIC,QAAQ,IAAK;IACtC,MAAMC,oBAAoB,GAAGD,QAAQ,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAC1D,OAAOD,oBAAoB,CACxBC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAC/BA,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAIb,OAAO,IAAK;IACtCG,kBAAkB,CAACH,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMc,WAAW,GAAIC,IAAI,IAAK,CAC5B;IACEC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAEF,IAAI,CAACf,OAAO,GAAGe,IAAI,CAACf,OAAO,GAAG;EACvC,CAAC,EACD;IACEgB,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAEF,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACG,KAAK,GAAG;EACnC,CAAC,EACD;IACEF,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAEF,IAAI,CAACI,cAAc,GAAG,GAAGJ,IAAI,CAACI,cAAc,IAAI,GAAG;EAC5D,CAAC,EACD;IACEH,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAEF,IAAI,CAACK,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAACK,WAAW,CAAC,GAAG;EAC/D,CAAC,EACD;IACEJ,KAAK,EAAE,uBAAuB;IAC9BC,KAAK,EAAEF,IAAI,CAACQ,iBAAiB,GACzBF,IAAI,CAACC,SAAS,CAACP,IAAI,CAACQ,iBAAiB,CAAC,GACtC;EACN,CAAC,CACF;EAED,MAAMC,aAAa,GAAGxB,OAAO,CAACyB,IAAI,CAAC,CAACC,KAAK,EAAEC,MAAM,KAC/CD,KAAK,CAAC1B,OAAO,CAAC4B,aAAa,CAACD,MAAM,CAAC3B,OAAO,CAC5C,CAAC;EAED,oBACEJ,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAKiC,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBlC,OAAA;QAAIiC,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,6BACE,eAAAlC,OAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,QAAI,eAAAtC,OAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,2BAC7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENtC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBlC,OAAA,CAACT,SAAS;UAAA2C,QAAA,eACRlC,OAAA,CAACR,SAAS;YAAA0C,QAAA,EACPN,aAAa,CAACW,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK,kBAC7BxC,OAAA,CAACP,aAAa;cAEZgD,MAAM;cACNC,GAAG,EAAC,QAAQ;cACZC,OAAO,EAAEA,CAAA,KAAM1B,kBAAkB,CAACE,IAAI,CAAE;cACxCc,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAE5BrB,iBAAiB,CAACM,IAAI,CAACf,OAAO,CAAC,EAAC,GAAC;YAAA,GAN7BoC,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOG,CAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAENtC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvB5B,eAAe,gBACdN,OAAA,CAACT,SAAS;UAAA2C,QAAA,eACRlC,OAAA;YAAKiC,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BhB,WAAW,CAACZ,eAAe,CAAC,CAACiC,GAAG,CAAC,CAACK,IAAI,EAAEJ,KAAK,kBAC5CxC,OAAA,CAACN,IAAI;cAAauC,SAAS,EAAC,MAAM;cAAAC,QAAA,eAChClC,OAAA,CAACL,QAAQ;gBAAAuC,QAAA,gBACPlC,OAAA,CAACJ,SAAS;kBAAC8C,GAAG,EAAC,IAAI;kBAACT,SAAS,EAAC,cAAc;kBAAAC,QAAA,EACzCU,IAAI,CAACxB;gBAAK;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACZtC,OAAA,CAACH,QAAQ;kBAAAqC,QAAA,eACPlC,OAAA;oBAAMiC,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAEU,IAAI,CAACvB;kBAAK;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GARFE,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,GAEZ;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELhC,eAAe,iBACdN,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBlC,OAAA;UAAAkC,QAAA,EAAG;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAApC,EAAA,CAtHKD,QAAQ;EAAA,QACKb,WAAW;AAAA;AAAAyD,EAAA,GADxB5C,QAAQ;AAwHd,eAAeA,QAAQ;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}