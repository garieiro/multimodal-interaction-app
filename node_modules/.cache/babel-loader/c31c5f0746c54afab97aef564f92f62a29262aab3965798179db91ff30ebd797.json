{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/BoxPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxPlot = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    d3.select(svgRef.current).selectAll('*').remove();\n    if (!data || data.length === 0) {\n      return;\n    }\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n    const width = 928;\n    const height = 600;\n    const boxWidth = 70;\n    const minBoxSpacing = 30;\n    const totalWidth = (boxWidth + minBoxSpacing) * data.length;\n\n    // Obter valores mínimos e máximos de cada dataset\n    const minValues = data.map(dataset => d3.min(dataset.values));\n    const maxValues = data.map(dataset => d3.max(dataset.values));\n    const minAll = Math.max(0, d3.min(minValues)); // Limitar o mínimo a zero\n    const maxAll = d3.max(maxValues); // Ajustar para não ter +2, pois isso pode criar um range excessivo\n\n    // Escala do eixo Y\n    const y = d3.scaleLinear().domain([minAll, maxAll]).range([height - margin.bottom, margin.top]); // Invertendo a escala\n\n    const svg = d3.select(svgRef.current).attr('width', '100%').attr('height', '100%').attr('viewBox', `0 0 ${totalWidth + margin.left + margin.right} ${height + margin.top + margin.bottom}`).style('font', '10px sans-serif');\n    const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const datasetWidth = totalWidth / data.length;\n    data.forEach((dataset, index) => {\n      const data_sorted = dataset.values.sort(d3.ascending);\n      const q1 = d3.quantile(data_sorted, 0.25);\n      const median = d3.quantile(data_sorted, 0.5);\n      const q3 = d3.quantile(data_sorted, 0.75);\n      const interQuantileRange = q3 - q1;\n      const min = Math.max(0, q1 - interQuantileRange * 1.5); // Limitar o mínimo a zero\n      const max = q3 + interQuantileRange * 1.5; // Não precisa de Math.min porque estamos lidando com IQR\n\n      const x = index * datasetWidth + datasetWidth / 2;\n\n      // Linha do range\n      svg.append('line').attr('x1', x).attr('x2', x).attr('y1', y(max)).attr('y2', y(min)).attr('stroke', 'black');\n\n      // Caixa\n      svg.append('rect').attr('x', x - boxWidth / 2).attr('y', y(q3)).attr('height', y(q1) - y(q3)).attr('width', boxWidth).attr('stroke', 'black').style('fill', '#69b3a2');\n\n      // Linhas da mediana e quartis\n      svg.append('line').attr('x1', x - boxWidth / 2).attr('x2', x + boxWidth / 2).attr('y1', y(median)).attr('y2', y(median)).attr('stroke', 'black');\n      svg.selectAll('line.quartiles').data([q1, q3]).enter().append('line').attr('x1', x - boxWidth / 2).attr('x2', x + boxWidth / 2).attr('y1', d => y(d)).attr('y2', d => y(d)).attr('stroke', 'black');\n\n      // Rótulo\n      svg.append('text').attr('x', x).attr('y', height - margin.bottom / 2).attr('text-anchor', 'middle').text(dataset.label).style('font-size', '12px').attr('fill', 'black');\n    });\n\n    // Eixo Y\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(y).ticks(null, 's')).call(g => g.select('.domain').remove());\n\n    // Eixo X\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(d3.scaleLinear().domain([0, data.length]).range([marginLeft, totalWidth - marginRight])));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};\n_s(BoxPlot, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = BoxPlot;\nexport default BoxPlot;\nvar _c;\n$RefreshReg$(_c, \"BoxPlot\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","BoxPlot","data","_s","svgRef","select","current","selectAll","remove","length","margin","top","right","bottom","left","width","height","boxWidth","minBoxSpacing","totalWidth","minValues","map","dataset","min","values","maxValues","max","minAll","Math","maxAll","y","scaleLinear","domain","range","svg","attr","style","g","append","datasetWidth","forEach","index","data_sorted","sort","ascending","q1","quantile","median","q3","interQuantileRange","x","enter","d","text","label","call","axisLeft","ticks","axisBottom","marginLeft","marginRight","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/BoxPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst BoxPlot = ({ data }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    d3.select(svgRef.current).selectAll('*').remove()\n\n    if (!data || data.length === 0) {\n      return\n    }\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 }\n    const width = 928\n    const height = 600\n\n    const boxWidth = 70\n    const minBoxSpacing = 30\n    const totalWidth = (boxWidth + minBoxSpacing) * data.length\n\n    // Obter valores mínimos e máximos de cada dataset\n    const minValues = data.map((dataset) => d3.min(dataset.values))\n    const maxValues = data.map((dataset) => d3.max(dataset.values))\n\n    const minAll = Math.max(0, d3.min(minValues)) // Limitar o mínimo a zero\n    const maxAll = d3.max(maxValues) // Ajustar para não ter +2, pois isso pode criar um range excessivo\n\n    // Escala do eixo Y\n    const y = d3\n      .scaleLinear()\n      .domain([minAll, maxAll])\n      .range([height - margin.bottom, margin.top]) // Invertendo a escala\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .attr(\n        'viewBox',\n        `0 0 ${totalWidth + margin.left + margin.right} ${height + margin.top + margin.bottom}`\n      )\n      .style('font', '10px sans-serif')\n\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n\n    const datasetWidth = totalWidth / data.length\n\n    data.forEach((dataset, index) => {\n      const data_sorted = dataset.values.sort(d3.ascending)\n      const q1 = d3.quantile(data_sorted, 0.25)\n      const median = d3.quantile(data_sorted, 0.5)\n      const q3 = d3.quantile(data_sorted, 0.75)\n      const interQuantileRange = q3 - q1\n\n      const min = Math.max(0, q1 - interQuantileRange * 1.5) // Limitar o mínimo a zero\n      const max = q3 + interQuantileRange * 1.5 // Não precisa de Math.min porque estamos lidando com IQR\n\n      const x = index * datasetWidth + datasetWidth / 2\n\n      // Linha do range\n      svg\n        .append('line')\n        .attr('x1', x)\n        .attr('x2', x)\n        .attr('y1', y(max))\n        .attr('y2', y(min))\n        .attr('stroke', 'black')\n\n      // Caixa\n      svg\n        .append('rect')\n        .attr('x', x - boxWidth / 2)\n        .attr('y', y(q3))\n        .attr('height', y(q1) - y(q3))\n        .attr('width', boxWidth)\n        .attr('stroke', 'black')\n        .style('fill', '#69b3a2')\n\n      // Linhas da mediana e quartis\n      svg\n        .append('line')\n        .attr('x1', x - boxWidth / 2)\n        .attr('x2', x + boxWidth / 2)\n        .attr('y1', y(median))\n        .attr('y2', y(median))\n        .attr('stroke', 'black')\n\n      svg\n        .selectAll('line.quartiles')\n        .data([q1, q3])\n        .enter()\n        .append('line')\n        .attr('x1', x - boxWidth / 2)\n        .attr('x2', x + boxWidth / 2)\n        .attr('y1', (d) => y(d))\n        .attr('y2', (d) => y(d))\n        .attr('stroke', 'black')\n\n      // Rótulo\n      svg\n        .append('text')\n        .attr('x', x)\n        .attr('y', height - margin.bottom / 2)\n        .attr('text-anchor', 'middle')\n        .text(dataset.label)\n        .style('font-size', '12px')\n        .attr('fill', 'black')\n    })\n\n    // Eixo Y\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y).ticks(null, 's'))\n      .call((g) => g.select('.domain').remove())\n\n    // Eixo X\n    svg\n      .append('g')\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3.axisBottom(\n          d3\n            .scaleLinear()\n            .domain([0, data.length])\n            .range([marginLeft, totalWidth - marginRight])\n        )\n      )\n  }, [data])\n\n  return <svg ref={svgRef} style={{ width: '100%', height: '100%' }} />\n}\n\nexport default BoxPlot\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACdE,EAAE,CAACO,MAAM,CAACD,MAAM,CAACE,OAAO,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAEjD,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE;MAC9B;IACF;IAEA,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC3D,MAAMC,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAElB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,aAAa,GAAG,EAAE;IACxB,MAAMC,UAAU,GAAG,CAACF,QAAQ,GAAGC,aAAa,IAAIhB,IAAI,CAACO,MAAM;;IAE3D;IACA,MAAMW,SAAS,GAAGlB,IAAI,CAACmB,GAAG,CAAEC,OAAO,IAAKxB,EAAE,CAACyB,GAAG,CAACD,OAAO,CAACE,MAAM,CAAC,CAAC;IAC/D,MAAMC,SAAS,GAAGvB,IAAI,CAACmB,GAAG,CAAEC,OAAO,IAAKxB,EAAE,CAAC4B,GAAG,CAACJ,OAAO,CAACE,MAAM,CAAC,CAAC;IAE/D,MAAMG,MAAM,GAAGC,IAAI,CAACF,GAAG,CAAC,CAAC,EAAE5B,EAAE,CAACyB,GAAG,CAACH,SAAS,CAAC,CAAC,EAAC;IAC9C,MAAMS,MAAM,GAAG/B,EAAE,CAAC4B,GAAG,CAACD,SAAS,CAAC,EAAC;;IAEjC;IACA,MAAMK,CAAC,GAAGhC,EAAE,CACTiC,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAACL,MAAM,EAAEE,MAAM,CAAC,CAAC,CACxBI,KAAK,CAAC,CAACjB,MAAM,GAAGN,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACC,GAAG,CAAC,CAAC,EAAC;;IAE/C,MAAMuB,GAAG,GAAGpC,EAAE,CACXO,MAAM,CAACD,MAAM,CAACE,OAAO,CAAC,CACtB6B,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CACH,SAAS,EACT,OAAOhB,UAAU,GAAGT,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK,IAAII,MAAM,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM,EACvF,CAAC,CACAuB,KAAK,CAAC,MAAM,EAAE,iBAAiB,CAAC;IAEnC,MAAMC,CAAC,GAAGH,GAAG,CACVI,MAAM,CAAC,GAAG,CAAC,CACXH,IAAI,CAAC,WAAW,EAAE,aAAazB,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;IAE/D,MAAM4B,YAAY,GAAGpB,UAAU,GAAGjB,IAAI,CAACO,MAAM;IAE7CP,IAAI,CAACsC,OAAO,CAAC,CAAClB,OAAO,EAAEmB,KAAK,KAAK;MAC/B,MAAMC,WAAW,GAAGpB,OAAO,CAACE,MAAM,CAACmB,IAAI,CAAC7C,EAAE,CAAC8C,SAAS,CAAC;MACrD,MAAMC,EAAE,GAAG/C,EAAE,CAACgD,QAAQ,CAACJ,WAAW,EAAE,IAAI,CAAC;MACzC,MAAMK,MAAM,GAAGjD,EAAE,CAACgD,QAAQ,CAACJ,WAAW,EAAE,GAAG,CAAC;MAC5C,MAAMM,EAAE,GAAGlD,EAAE,CAACgD,QAAQ,CAACJ,WAAW,EAAE,IAAI,CAAC;MACzC,MAAMO,kBAAkB,GAAGD,EAAE,GAAGH,EAAE;MAElC,MAAMtB,GAAG,GAAGK,IAAI,CAACF,GAAG,CAAC,CAAC,EAAEmB,EAAE,GAAGI,kBAAkB,GAAG,GAAG,CAAC,EAAC;MACvD,MAAMvB,GAAG,GAAGsB,EAAE,GAAGC,kBAAkB,GAAG,GAAG,EAAC;;MAE1C,MAAMC,CAAC,GAAGT,KAAK,GAAGF,YAAY,GAAGA,YAAY,GAAG,CAAC;;MAEjD;MACAL,GAAG,CACAI,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,IAAI,EAAEe,CAAC,CAAC,CACbf,IAAI,CAAC,IAAI,EAAEe,CAAC,CAAC,CACbf,IAAI,CAAC,IAAI,EAAEL,CAAC,CAACJ,GAAG,CAAC,CAAC,CAClBS,IAAI,CAAC,IAAI,EAAEL,CAAC,CAACP,GAAG,CAAC,CAAC,CAClBY,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;;MAE1B;MACAD,GAAG,CACAI,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,GAAG,EAAEe,CAAC,GAAGjC,QAAQ,GAAG,CAAC,CAAC,CAC3BkB,IAAI,CAAC,GAAG,EAAEL,CAAC,CAACkB,EAAE,CAAC,CAAC,CAChBb,IAAI,CAAC,QAAQ,EAAEL,CAAC,CAACe,EAAE,CAAC,GAAGf,CAAC,CAACkB,EAAE,CAAC,CAAC,CAC7Bb,IAAI,CAAC,OAAO,EAAElB,QAAQ,CAAC,CACvBkB,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;;MAE3B;MACAF,GAAG,CACAI,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,IAAI,EAAEe,CAAC,GAAGjC,QAAQ,GAAG,CAAC,CAAC,CAC5BkB,IAAI,CAAC,IAAI,EAAEe,CAAC,GAAGjC,QAAQ,GAAG,CAAC,CAAC,CAC5BkB,IAAI,CAAC,IAAI,EAAEL,CAAC,CAACiB,MAAM,CAAC,CAAC,CACrBZ,IAAI,CAAC,IAAI,EAAEL,CAAC,CAACiB,MAAM,CAAC,CAAC,CACrBZ,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;MAE1BD,GAAG,CACA3B,SAAS,CAAC,gBAAgB,CAAC,CAC3BL,IAAI,CAAC,CAAC2C,EAAE,EAAEG,EAAE,CAAC,CAAC,CACdG,KAAK,CAAC,CAAC,CACPb,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,IAAI,EAAEe,CAAC,GAAGjC,QAAQ,GAAG,CAAC,CAAC,CAC5BkB,IAAI,CAAC,IAAI,EAAEe,CAAC,GAAGjC,QAAQ,GAAG,CAAC,CAAC,CAC5BkB,IAAI,CAAC,IAAI,EAAGiB,CAAC,IAAKtB,CAAC,CAACsB,CAAC,CAAC,CAAC,CACvBjB,IAAI,CAAC,IAAI,EAAGiB,CAAC,IAAKtB,CAAC,CAACsB,CAAC,CAAC,CAAC,CACvBjB,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;;MAE1B;MACAD,GAAG,CACAI,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,GAAG,EAAEe,CAAC,CAAC,CACZf,IAAI,CAAC,GAAG,EAAEnB,MAAM,GAAGN,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC,CACrCsB,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BkB,IAAI,CAAC/B,OAAO,CAACgC,KAAK,CAAC,CACnBlB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BD,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACAD,GAAG,CACAI,MAAM,CAAC,GAAG,CAAC,CACXH,IAAI,CAAC,WAAW,EAAE,aAAazB,MAAM,CAACI,IAAI,KAAK,CAAC,CAChDyC,IAAI,CAACzD,EAAE,CAAC0D,QAAQ,CAAC1B,CAAC,CAAC,CAAC2B,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CACrCF,IAAI,CAAElB,CAAC,IAAKA,CAAC,CAAChC,MAAM,CAAC,SAAS,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC;;IAE5C;IACA0B,GAAG,CACAI,MAAM,CAAC,GAAG,CAAC,CACXH,IAAI,CAAC,WAAW,EAAE,eAAenB,MAAM,GAAGN,MAAM,CAACG,MAAM,GAAG,CAAC,CAC3D0C,IAAI,CACHzD,EAAE,CAAC4D,UAAU,CACX5D,EAAE,CACCiC,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAAC,CAAC,EAAE9B,IAAI,CAACO,MAAM,CAAC,CAAC,CACxBwB,KAAK,CAAC,CAAC0B,UAAU,EAAExC,UAAU,GAAGyC,WAAW,CAAC,CACjD,CACF,CAAC;EACL,CAAC,EAAE,CAAC1D,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAK6D,GAAG,EAAEzD,MAAO;IAACgC,KAAK,EAAE;MAAErB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvE,CAAC;AAAA9D,EAAA,CAnIKF,OAAO;AAAAiE,EAAA,GAAPjE,OAAO;AAqIb,eAAeA,OAAO;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}