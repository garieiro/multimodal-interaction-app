{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/staticData/charts/TimeLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    const width = 600 - margin.left - margin.right;\n    const height = 200 - margin.top - margin.bottom;\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const parseTime = d3.timeParse('%Y-%m-%d %H:%M:%S.%L');\n    const x = d3.scaleTime().range([0, width]);\n    const y = d3.scaleBand().range([height, 0]);\n    const xAxis = d3.axisBottom(x);\n    const yAxis = d3.axisLeft(y);\n\n    // Mapeia os dados para extrair os valores de 'Start' e 'End' e converter para objetos de data\n    const timeData = data.map(d => ({\n      start: parseTime(d.Start),\n      end: parseTime(d.End)\n    }));\n\n    // Define o domínio dos eixos X e Y\n    x.domain([d3.min(timeData, d => d.start), d3.max(timeData, d => d.end)]);\n    y.domain(timeData.map((d, i) => i)).padding(0.1);\n\n    // Adiciona os eixos X e Y ao SVG\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(xAxis);\n    svg.append('g').attr('class', 'y-axis').call(yAxis);\n\n    // Adiciona os retângulos representando os intervalos de tempo\n    svg.selectAll('.bar').data(timeData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.start)).attr('y', (d, i) => y(i)).attr('width', d => x(d.end) - x(d.start)).attr('height', y.bandwidth()).attr('fill', 'steelblue');\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(TimelineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = TimelineChart;\nexport default TimelineChart;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","TimelineChart","data","_s","svgRef","length","margin","top","right","bottom","left","width","height","svg","select","current","attr","append","parseTime","timeParse","x","scaleTime","range","y","scaleBand","xAxis","axisBottom","yAxis","axisLeft","timeData","map","d","start","Start","end","End","domain","min","max","i","padding","call","selectAll","enter","bandwidth","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/staticData/charts/TimeLineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst TimelineChart = ({ data }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n    const width = 600 - margin.left - margin.right;\n    const height = 200 - margin.top - margin.bottom;\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const parseTime = d3.timeParse('%Y-%m-%d %H:%M:%S.%L');\n\n    const x = d3.scaleTime().range([0, width]);\n    const y = d3.scaleBand().range([height, 0]);\n\n    const xAxis = d3.axisBottom(x);\n    const yAxis = d3.axisLeft(y);\n\n    // Mapeia os dados para extrair os valores de 'Start' e 'End' e converter para objetos de data\n    const timeData = data.map(d => ({\n      start: parseTime(d.Start),\n      end: parseTime(d.End)\n    }));\n\n    // Define o domínio dos eixos X e Y\n    x.domain([\n      d3.min(timeData, d => d.start),\n      d3.max(timeData, d => d.end)\n    ]);\n    y.domain(timeData.map((d, i) => i)).padding(0.1);\n\n    // Adiciona os eixos X e Y ao SVG\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(xAxis);\n    svg.append('g').attr('class', 'y-axis').call(yAxis);\n\n    // Adiciona os retângulos representando os intervalos de tempo\n    svg.selectAll('.bar')\n      .data(timeData)\n      .enter()\n      .append('rect')\n      .attr('class', 'bar')\n      .attr('x', d => x(d.start))\n      .attr('y', (d, i) => y(i))\n      .attr('width', d => x(d.end) - x(d.start))\n      .attr('height', y.bandwidth())\n      .attr('fill', 'steelblue');\n  }, [data]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default TimelineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}