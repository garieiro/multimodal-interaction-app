{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromArrayExpression;\n/**\n * Extractor function for an ArrayExpression type value node.\n * An array expression is an expression with [] syntax.\n *\n * @returns - An array of the extracted elements.\n */\nfunction extractValueFromArrayExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return value.elements.map(function (element) {\n    if (element === null) return undefined;\n    return getValue(element);\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromArrayExpression","getValue","require","elements","map","element","undefined"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/node_modules/jsx-ast-utils/lib/values/expressions/ArrayExpression.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromArrayExpression;\n/**\n * Extractor function for an ArrayExpression type value node.\n * An array expression is an expression with [] syntax.\n *\n * @returns - An array of the extracted elements.\n */\nfunction extractValueFromArrayExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return value.elements.map(function (element) {\n    if (element === null) return undefined;\n    return getValue(element);\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,+BAA+BA,CAACF,KAAK,EAAE;EAC9C;EACA,IAAIG,QAAQ,GAAGC,OAAO,CAAC,GAAG,CAAC,CAACH,OAAO;EACnC,OAAOD,KAAK,CAACK,QAAQ,CAACC,GAAG,CAAC,UAAUC,OAAO,EAAE;IAC3C,IAAIA,OAAO,KAAK,IAAI,EAAE,OAAOC,SAAS;IACtC,OAAOL,QAAQ,CAACI,OAAO,CAAC;EAC1B,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}