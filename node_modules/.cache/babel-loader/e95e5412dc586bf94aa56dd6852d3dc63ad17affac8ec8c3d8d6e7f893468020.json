{"ast":null,"code":"const transformDataToBoxplot = data => {\n  const eventLabels = [];\n\n  // Extract unique event labels\n  Object.values(data).forEach(events => {\n    events.forEach(event => {\n      if (!eventLabels.includes(event.Type)) {\n        eventLabels.push(event.Type);\n      }\n    });\n  });\n\n  // Initialize results array with structure\n  const results = eventLabels.map(label => ({\n    label,\n    values: new Array(Object.keys(data).length).fill(0)\n  }));\n\n  // Fill in the values for each user with the duration of each event type\n  Object.entries(data).forEach(([userId, events], index) => {\n    events.forEach(event => {\n      const labelIndex = eventLabels.indexOf(event.Type);\n      const startTime = new Date(event.Start).getTime();\n      const endTime = new Date(event.End).getTime();\n      const duration = (endTime - startTime) / 1000; // duration in seconds\n      results[labelIndex].values[index] += duration;\n    });\n  });\n  return results;\n};\nexport default transformDataToBoxplot;","map":{"version":3,"names":["transformDataToBoxplot","data","eventLabels","Object","values","forEach","events","event","includes","Type","push","results","map","label","Array","keys","length","fill","entries","userId","index","labelIndex","indexOf","startTime","Date","Start","getTime","endTime","End","duration"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToBoxplot.js"],"sourcesContent":["const transformDataToBoxplot = (data) => {\n  const eventLabels = []\n\n  // Extract unique event labels\n  Object.values(data).forEach((events) => {\n    events.forEach((event) => {\n      if (!eventLabels.includes(event.Type)) {\n        eventLabels.push(event.Type)\n      }\n    })\n  })\n\n  // Initialize results array with structure\n  const results = eventLabels.map((label) => ({\n    label,\n    values: new Array(Object.keys(data).length).fill(0),\n  }))\n\n  // Fill in the values for each user with the duration of each event type\n  Object.entries(data).forEach(([userId, events], index) => {\n    events.forEach((event) => {\n      const labelIndex = eventLabels.indexOf(event.Type)\n      const startTime = new Date(event.Start).getTime()\n      const endTime = new Date(event.End).getTime()\n      const duration = (endTime - startTime) / 1000 // duration in seconds\n      results[labelIndex].values[index] += duration\n    })\n  })\n\n  return results\n}\n\nexport default transformDataToBoxplot\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EACvC,MAAMC,WAAW,GAAG,EAAE;;EAEtB;EACAC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,MAAM,IAAK;IACtCA,MAAM,CAACD,OAAO,CAAEE,KAAK,IAAK;MACxB,IAAI,CAACL,WAAW,CAACM,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;QACrCP,WAAW,CAACQ,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,OAAO,GAAGT,WAAW,CAACU,GAAG,CAAEC,KAAK,KAAM;IAC1CA,KAAK;IACLT,MAAM,EAAE,IAAIU,KAAK,CAACX,MAAM,CAACY,IAAI,CAACd,IAAI,CAAC,CAACe,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC,CAAC;;EAEH;EACAd,MAAM,CAACe,OAAO,CAACjB,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,CAACc,MAAM,EAAEb,MAAM,CAAC,EAAEc,KAAK,KAAK;IACxDd,MAAM,CAACD,OAAO,CAAEE,KAAK,IAAK;MACxB,MAAMc,UAAU,GAAGnB,WAAW,CAACoB,OAAO,CAACf,KAAK,CAACE,IAAI,CAAC;MAClD,MAAMc,SAAS,GAAG,IAAIC,IAAI,CAACjB,KAAK,CAACkB,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC;MACjD,MAAMC,OAAO,GAAG,IAAIH,IAAI,CAACjB,KAAK,CAACqB,GAAG,CAAC,CAACF,OAAO,CAAC,CAAC;MAC7C,MAAMG,QAAQ,GAAG,CAACF,OAAO,GAAGJ,SAAS,IAAI,IAAI,EAAC;MAC9CZ,OAAO,CAACU,UAAU,CAAC,CAACjB,MAAM,CAACgB,KAAK,CAAC,IAAIS,QAAQ;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOlB,OAAO;AAChB,CAAC;AAED,eAAeX,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}