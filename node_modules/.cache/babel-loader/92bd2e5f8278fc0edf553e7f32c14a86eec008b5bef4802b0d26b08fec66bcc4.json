{"ast":null,"code":"const transformDataToSunburst = data => {\n  const hierarchy = {\n    name: 'User',\n    children: []\n  };\n  Object.entries(data).forEach(([userId, events]) => {\n    const userNode = {\n      name: `User ${userId}`,\n      children: []\n    };\n    const eventTypes = {};\n    events.forEach(event => {\n      const {\n        Type,\n        EventType,\n        Start,\n        End\n      } = event;\n      const duration = new Date(End).getTime() - new Date(Start).getTime();\n      if (!eventTypes[Type]) {\n        eventTypes[Type] = {};\n      }\n      if (eventTypes[Type][EventType]) {\n        eventTypes[Type][EventType] += duration;\n      } else {\n        eventTypes[Type][EventType] = duration;\n      }\n    });\n    Object.entries(eventTypes).forEach(([type, typeEvents]) => {\n      const typeNode = {\n        name: type,\n        children: []\n      };\n      Object.entries(typeEvents).forEach(([eventType, duration]) => {\n        typeNode.children.push({\n          name: eventType,\n          value: duration\n        });\n      });\n      userNode.children.push(typeNode);\n    });\n    hierarchy.children.push(userNode);\n  });\n  return hierarchy;\n};\nexport default transformDataToSunburst;","map":{"version":3,"names":["transformDataToSunburst","data","hierarchy","name","children","Object","entries","forEach","userId","events","userNode","eventTypes","event","Type","EventType","Start","End","duration","Date","getTime","type","typeEvents","typeNode","eventType","push","value"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToSunburst.js"],"sourcesContent":["const transformDataToSunburst = (data) => {\n  const hierarchy = {\n    name: 'User',\n    children: [],\n  }\n\n  Object.entries(data).forEach(([userId, events]) => {\n    const userNode = {\n      name: `User ${userId}`,\n      children: [],\n    }\n\n    const eventTypes = {}\n\n    events.forEach((event) => {\n      const { Type, EventType, Start, End } = event\n      const duration = new Date(End).getTime() - new Date(Start).getTime()\n\n      if (!eventTypes[Type]) {\n        eventTypes[Type] = {}\n      }\n      if (eventTypes[Type][EventType]) {\n        eventTypes[Type][EventType] += duration\n      } else {\n        eventTypes[Type][EventType] = duration\n      }\n    })\n\n    Object.entries(eventTypes).forEach(([type, typeEvents]) => {\n      const typeNode = {\n        name: type,\n        children: [],\n      }\n\n      Object.entries(typeEvents).forEach(([eventType, duration]) => {\n        typeNode.children.push({ name: eventType, value: duration })\n      })\n\n      userNode.children.push(typeNode)\n    })\n\n    hierarchy.children.push(userNode)\n  })\n\n  return hierarchy\n}\n\nexport default transformDataToSunburst\n"],"mappings":"AAAA,MAAMA,uBAAuB,GAAIC,IAAI,IAAK;EACxC,MAAMC,SAAS,GAAG;IAChBC,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EAEDC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,KAAK;IACjD,MAAMC,QAAQ,GAAG;MACfP,IAAI,EAAE,QAAQK,MAAM,EAAE;MACtBJ,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMO,UAAU,GAAG,CAAC,CAAC;IAErBF,MAAM,CAACF,OAAO,CAAEK,KAAK,IAAK;MACxB,MAAM;QAAEC,IAAI;QAAEC,SAAS;QAAEC,KAAK;QAAEC;MAAI,CAAC,GAAGJ,KAAK;MAC7C,MAAMK,QAAQ,GAAG,IAAIC,IAAI,CAACF,GAAG,CAAC,CAACG,OAAO,CAAC,CAAC,GAAG,IAAID,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC;MAEpE,IAAI,CAACR,UAAU,CAACE,IAAI,CAAC,EAAE;QACrBF,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;MACvB;MACA,IAAIF,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,EAAE;QAC/BH,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,IAAIG,QAAQ;MACzC,CAAC,MAAM;QACLN,UAAU,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC,GAAGG,QAAQ;MACxC;IACF,CAAC,CAAC;IAEFZ,MAAM,CAACC,OAAO,CAACK,UAAU,CAAC,CAACJ,OAAO,CAAC,CAAC,CAACa,IAAI,EAAEC,UAAU,CAAC,KAAK;MACzD,MAAMC,QAAQ,GAAG;QACfnB,IAAI,EAAEiB,IAAI;QACVhB,QAAQ,EAAE;MACZ,CAAC;MAEDC,MAAM,CAACC,OAAO,CAACe,UAAU,CAAC,CAACd,OAAO,CAAC,CAAC,CAACgB,SAAS,EAAEN,QAAQ,CAAC,KAAK;QAC5DK,QAAQ,CAAClB,QAAQ,CAACoB,IAAI,CAAC;UAAErB,IAAI,EAAEoB,SAAS;UAAEE,KAAK,EAAER;QAAS,CAAC,CAAC;MAC9D,CAAC,CAAC;MAEFP,QAAQ,CAACN,QAAQ,CAACoB,IAAI,CAACF,QAAQ,CAAC;IAClC,CAAC,CAAC;IAEFpB,SAAS,CAACE,QAAQ,CAACoB,IAAI,CAACd,QAAQ,CAAC;EACnC,CAAC,CAAC;EAEF,OAAOR,SAAS;AAClB,CAAC;AAED,eAAeF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}