{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/staticData/charts/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data) return;\n\n    // Configuração do SVG e margens\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 40,\n      left: 40\n    };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    const xScale = d3.scaleTime().domain(data.length > 0 ? [new Date(data[0].start), new Date(data[data.length - 1].end)] : [new Date(), new Date()]) // Intervalo de datas\n    .range([margin.left, innerWidth + margin.left]);\n    const yScale = d3.scaleBand().domain(data.map(d => d.eventType)).range([margin.top, innerHeight + margin.top]).padding(0.1);\n\n    // Criar a linha\n    const line = d3.line().x(d => xScale(new Date(d.start))) // Mapear a data de início para o eixo x\n    .y(d => yScale(d.eventType) + yScale.bandwidth() / 2); // Mapear o nome do evento para o eixo y\n\n    // Desenhar a linha\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // Adicionar os eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    svg.append('g').attr('transform', `translate(0, ${innerHeight + margin.top})`).call(xAxis);\n    svg.append('g').attr('transform', `translate(${margin.left}, 0)`).call(yAxis);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","LineChart","data","_s","svgRef","margin","top","right","bottom","left","width","height","innerWidth","innerHeight","svg","select","current","attr","xScale","scaleTime","domain","length","Date","start","end","range","yScale","scaleBand","map","d","eventType","padding","line","x","y","bandwidth","append","datum","xAxis","axisBottom","yAxis","axisLeft","call","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/staticData/charts/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst LineChart = ({ data }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data) return;\n\n    // Configuração do SVG e margens\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3.select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n      const xScale = d3.scaleTime()\n      .domain(data.length > 0 ? [new Date(data[0].start), new Date(data[data.length - 1].end)] : [new Date(), new Date()]) // Intervalo de datas\n      .range([margin.left, innerWidth + margin.left]);\n    \n\n    const yScale = d3.scaleBand()\n      .domain(data.map(d => d.eventType))\n      .range([margin.top, innerHeight + margin.top])\n      .padding(0.1);\n\n    // Criar a linha\n    const line = d3.line()\n      .x(d => xScale(new Date(d.start))) // Mapear a data de início para o eixo x\n      .y(d => yScale(d.eventType) + yScale.bandwidth() / 2); // Mapear o nome do evento para o eixo y\n\n    // Desenhar a linha\n    svg.append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n\n    // Adicionar os eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    svg.append('g')\n      .attr('transform', `translate(0, ${innerHeight + margin.top})`)\n      .call(xAxis);\n\n    svg.append('g')\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(yAxis);\n  }, [data]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}