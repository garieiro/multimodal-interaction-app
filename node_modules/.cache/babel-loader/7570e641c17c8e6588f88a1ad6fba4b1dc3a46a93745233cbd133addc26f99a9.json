{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/buildCharts/timeLineChart/StaticTimeLine.js\",\n  _s = $RefreshSig$();\nimport TimelineChart from '../../charts/TimeLineChart';\nimport React, { useEffect, useState } from 'react';\nimport { fetchBoxPlotFromAPI, fetchStaticTimeLineFromAPI } from '../../../api/StaticData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticTimeLine = ({\n  onDataReceived,\n  onWordDataReceived,\n  data\n}) => {\n  _s();\n  const [timesData, setTimesData] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    const fetchTimeLine = async () => {\n      try {\n        let fetchTimeLineData = [];\n        if (data) {\n          console.log('xxxxxx');\n          fetchTimeLineData = data;\n        } else {\n          console.log('yyyy ');\n          fetchTimeLineData = await fetchStaticTimeLineFromAPI();\n        }\n        setTimesData(fetchTimeLineData);\n        setDataLoaded(true);\n      } catch (error) {\n        console.error('Error fetching TimeLine data:', error);\n      }\n    };\n    fetchTimeLine().catch(error => console.error('Error fetching TimeLine data:', error));\n  }, [data]);\n  const handleLabelClick = async label => {\n    const experienceId = label.split(' ')[0];\n    const fetchedData = await fetchStaticTimeLineFromAPI(experienceId);\n    setTimesData(fetchedData);\n    setDataLoaded(true);\n  };\n  console.log('Funcionas??', timesData);\n  return dataLoaded && /*#__PURE__*/_jsxDEV(TimelineChart, {\n    data: timesData,\n    handleLabelClick: handleLabelClick,\n    onDataReceived: onDataReceived,\n    onWordDataReceived: onWordDataReceived\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(StaticTimeLine, \"Pl5eitySSsBONblILM6wwDJmq58=\");\n_c = StaticTimeLine;\nexport default StaticTimeLine;\nvar _c;\n$RefreshReg$(_c, \"StaticTimeLine\");","map":{"version":3,"names":["TimelineChart","React","useEffect","useState","fetchBoxPlotFromAPI","fetchStaticTimeLineFromAPI","jsxDEV","_jsxDEV","StaticTimeLine","onDataReceived","onWordDataReceived","data","_s","timesData","setTimesData","dataLoaded","setDataLoaded","fetchTimeLine","fetchTimeLineData","console","log","error","catch","handleLabelClick","label","experienceId","split","fetchedData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/buildCharts/timeLineChart/StaticTimeLine.js"],"sourcesContent":["import TimelineChart from '../../charts/TimeLineChart'\nimport React, { useEffect, useState } from 'react'\nimport {\n  fetchBoxPlotFromAPI,\n  fetchStaticTimeLineFromAPI,\n} from '../../../api/StaticData'\n\nconst StaticTimeLine = ({ onDataReceived, onWordDataReceived, data }) => {\n  const [timesData, setTimesData] = useState([])\n  const [dataLoaded, setDataLoaded] = useState(false)\n\n  useEffect(() => {\n    const fetchTimeLine = async () => {\n      try {\n        let fetchTimeLineData = []\n        if (data) {\n          console.log('xxxxxx')\n          fetchTimeLineData = data\n        } else {\n          console.log('yyyy ')\n          fetchTimeLineData = await fetchStaticTimeLineFromAPI()\n        }\n        setTimesData(fetchTimeLineData)\n        setDataLoaded(true)\n      } catch (error) {\n        console.error('Error fetching TimeLine data:', error)\n      }\n    }\n\n    fetchTimeLine().catch((error) =>\n      console.error('Error fetching TimeLine data:', error)\n    )\n  }, [data])\n\n  const handleLabelClick = async (label) => {\n    const experienceId = label.split(' ')[0]\n    const fetchedData = await fetchStaticTimeLineFromAPI(experienceId)\n    setTimesData(fetchedData)\n    setDataLoaded(true)\n  }\n  console.log('Funcionas??', timesData)\n  return (\n    dataLoaded && (\n      <TimelineChart\n        data={timesData}\n        handleLabelClick={handleLabelClick}\n        onDataReceived={onDataReceived}\n        onWordDataReceived={onWordDataReceived}\n      />\n    )\n  )\n}\n\nexport default StaticTimeLine\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,mBAAmB,EACnBC,0BAA0B,QACrB,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,cAAc;EAAEC,kBAAkB;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,IAAIC,iBAAiB,GAAG,EAAE;QAC1B,IAAIP,IAAI,EAAE;UACRQ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrBF,iBAAiB,GAAGP,IAAI;QAC1B,CAAC,MAAM;UACLQ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UACpBF,iBAAiB,GAAG,MAAMb,0BAA0B,CAAC,CAAC;QACxD;QACAS,YAAY,CAACI,iBAAiB,CAAC;QAC/BF,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC,CAACK,KAAK,CAAED,KAAK,IAC1BF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CACtD,CAAC;EACH,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,MAAMY,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,YAAY,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,MAAMC,WAAW,GAAG,MAAMtB,0BAA0B,CAACoB,YAAY,CAAC;IAClEX,YAAY,CAACa,WAAW,CAAC;IACzBX,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACDG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,SAAS,CAAC;EACrC,OACEE,UAAU,iBACRR,OAAA,CAACP,aAAa;IACZW,IAAI,EAAEE,SAAU;IAChBU,gBAAgB,EAAEA,gBAAiB;IACnCd,cAAc,EAAEA,cAAe;IAC/BC,kBAAkB,EAAEA;EAAmB;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CACF;AAEL,CAAC;AAAAnB,EAAA,CA5CKJ,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AA8CpB,eAAeA,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}