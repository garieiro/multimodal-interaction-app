{"ast":null,"code":"const transformDataToSankeyChart = ({\n  data\n}) => {\n  const nodesSet = new Set();\n  const links = [];\n\n  // Itera sobre as chaves do objeto `data`\n  Object.keys(data).forEach(key => {\n    data[key].forEach(entry => {\n      const {\n        Source,\n        Target,\n        Start,\n        End\n      } = entry;\n\n      // Adiciona os nós\n      nodesSet.add(Source);\n      nodesSet.add(Target);\n\n      // Calcula a duração (em segundos ou em alguma unidade)\n      const duration = (new Date(End) - new Date(Start)) / 1000; // Duração em segundos\n\n      // Adiciona o link\n      links.push({\n        source: Source,\n        target: Target,\n        value: duration\n      });\n    });\n  });\n\n  // Converte o Set de nós em um array\n  const nodes = Array.from(nodesSet).map(name => ({\n    name,\n    category: 'default' // Você pode modificar isso com base na lógica necessária\n  }));\n  return {\n    nodes,\n    links\n  };\n};\nexport default transformDataToSankeyChart;","map":{"version":3,"names":["transformDataToSankeyChart","data","nodesSet","Set","links","Object","keys","forEach","key","entry","Source","Target","Start","End","add","duration","Date","push","source","target","value","nodes","Array","from","map","name","category"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToSankeyChart.js"],"sourcesContent":["const transformDataToSankeyChart = ({ data }) => {\n  const nodesSet = new Set()\n  const links = []\n\n  // Itera sobre as chaves do objeto `data`\n  Object.keys(data).forEach((key) => {\n    data[key].forEach((entry) => {\n      const { Source, Target, Start, End } = entry\n\n      // Adiciona os nós\n      nodesSet.add(Source)\n      nodesSet.add(Target)\n\n      // Calcula a duração (em segundos ou em alguma unidade)\n      const duration = (new Date(End) - new Date(Start)) / 1000 // Duração em segundos\n\n      // Adiciona o link\n      links.push({\n        source: Source,\n        target: Target,\n        value: duration,\n      })\n    })\n  })\n\n  // Converte o Set de nós em um array\n  const nodes = Array.from(nodesSet).map((name) => ({\n    name,\n    category: 'default', // Você pode modificar isso com base na lógica necessária\n  }))\n\n  return { nodes, links }\n}\n\nexport default transformDataToSankeyChart\n"],"mappings":"AAAA,MAAMA,0BAA0B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/C,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B,MAAMC,KAAK,GAAG,EAAE;;EAEhB;EACAC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACM,OAAO,CAAEC,GAAG,IAAK;IACjCP,IAAI,CAACO,GAAG,CAAC,CAACD,OAAO,CAAEE,KAAK,IAAK;MAC3B,MAAM;QAAEC,MAAM;QAAEC,MAAM;QAAEC,KAAK;QAAEC;MAAI,CAAC,GAAGJ,KAAK;;MAE5C;MACAP,QAAQ,CAACY,GAAG,CAACJ,MAAM,CAAC;MACpBR,QAAQ,CAACY,GAAG,CAACH,MAAM,CAAC;;MAEpB;MACA,MAAMI,QAAQ,GAAG,CAAC,IAAIC,IAAI,CAACH,GAAG,CAAC,GAAG,IAAIG,IAAI,CAACJ,KAAK,CAAC,IAAI,IAAI,EAAC;;MAE1D;MACAR,KAAK,CAACa,IAAI,CAAC;QACTC,MAAM,EAAER,MAAM;QACdS,MAAM,EAAER,MAAM;QACdS,KAAK,EAAEL;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMM,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACrB,QAAQ,CAAC,CAACsB,GAAG,CAAEC,IAAI,KAAM;IAChDA,IAAI;IACJC,QAAQ,EAAE,SAAS,CAAE;EACvB,CAAC,CAAC,CAAC;EAEH,OAAO;IAAEL,KAAK;IAAEjB;EAAM,CAAC;AACzB,CAAC;AAED,eAAeJ,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}