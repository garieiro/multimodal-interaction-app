{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    // Define as dimensões do gráfico\n    const width = 2000;\n    const height = 500;\n    const marginTop = 10;\n    const marginRight = 10;\n    const marginBottom = 20;\n    const marginLeft = 40;\n\n    // Agrupa os dados por nome\n    const nestedData = d3.groups(data, d => d.name);\n\n    // Prepara os dados para empilhamento\n    const series = d3.stack().keys(['INPUT', 'OUTPUT']) // Chaves dos tipos\n    .value(([, D], key) => {\n      var _D$find;\n      return ((_D$find = D.find(d => d.type === key)) === null || _D$find === void 0 ? void 0 : _D$find.count) || 0;\n    })(\n    // Obter o valor para cada chave\n    nestedData);\n\n    // Escalas para posicionamento e cor\n    const x = d3.scaleBand().domain(nestedData.map(([name]) => name)).range([marginLeft, width - marginRight]).padding(0.1);\n    const y = d3.scaleLinear().domain([0, d3.max(series, d => d3.max(d, d => d[1]))]).rangeRound([height - marginBottom, marginTop]);\n    const color = d3.scaleOrdinal().domain(series.map(d => d.key)).range(d3.schemeCategory10) // Cores diferentes para INPUT e OUTPUT\n    .unknown('#ccc');\n\n    // Cria o SVG\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).attr('viewBox', [0, 0, width, height]).attr('style', 'max-width: 100%; height: auto;');\n\n    // Remove qualquer conteúdo anterior\n    svg.selectAll('*').remove();\n\n    // Adiciona grupos e retângulos\n    svg.append('g').selectAll('g').data(series).join('g').attr('fill', d => color(d.key)).selectAll('rect').data(D => D.map(d => ({\n      ...d,\n      key: D.key\n    }))).join('rect').attr('x', d => x(d.data[0])) // Nome do grupo (barra)\n    .attr('y', d => y(d[1])) // Posição superior da barra\n    .attr('height', d => y(d[0]) - y(d[1])) // Altura da barra\n    .attr('width', x.bandwidth()) // Largura da barra\n    .append('title') // Tooltip\n    .text(d => {\n      const name = d.data[0]; // Nome do usuário\n      const type = d.key; // Tipo do evento (INPUT, OUTPUT)\n      const count = d[1] - d[0]; // Contagem\n\n      return `User: ${name}\\nType: ${type}\\nCount: ${count}`; // Texto do tooltip\n    });\n\n    // Adiciona os eixos\n    svg.append('g').attr('transform', `translate(0,${height - marginBottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).call(g => g.selectAll('.domain').remove());\n    svg.append('g').attr('transform', `translate(${marginLeft},0)`).call(d3.axisLeft(y).ticks(null, 's')).call(g => g.selectAll('.domain').remove());\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: 'auto',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(StackedBarChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","StackedBarChart","data","_s","svgRef","width","height","marginTop","marginRight","marginBottom","marginLeft","nestedData","groups","d","name","series","stack","keys","value","D","key","_D$find","find","type","count","x","scaleBand","domain","map","range","padding","y","scaleLinear","max","rangeRound","color","scaleOrdinal","schemeCategory10","unknown","svg","select","current","attr","selectAll","remove","append","join","bandwidth","text","call","axisBottom","tickSizeOuter","g","axisLeft","ticks","style","overflowX","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst StackedBarChart = ({ data }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    // Define as dimensões do gráfico\n    const width = 2000\n    const height = 500\n    const marginTop = 10\n    const marginRight = 10\n    const marginBottom = 20\n    const marginLeft = 40\n\n    // Agrupa os dados por nome\n    const nestedData = d3.groups(data, (d) => d.name)\n\n    // Prepara os dados para empilhamento\n    const series = d3\n      .stack()\n      .keys(['INPUT', 'OUTPUT']) // Chaves dos tipos\n      .value(([, D], key) => D.find((d) => d.type === key)?.count || 0)(\n      // Obter o valor para cada chave\n      nestedData\n    )\n\n    // Escalas para posicionamento e cor\n    const x = d3\n      .scaleBand()\n      .domain(nestedData.map(([name]) => name))\n      .range([marginLeft, width - marginRight])\n      .padding(0.1)\n\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(series, (d) => d3.max(d, (d) => d[1]))])\n      .rangeRound([height - marginBottom, marginTop])\n\n    const color = d3\n      .scaleOrdinal()\n      .domain(series.map((d) => d.key))\n      .range(d3.schemeCategory10) // Cores diferentes para INPUT e OUTPUT\n      .unknown('#ccc')\n\n    // Cria o SVG\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height])\n      .attr('style', 'max-width: 100%; height: auto;')\n\n    // Remove qualquer conteúdo anterior\n    svg.selectAll('*').remove()\n\n    // Adiciona grupos e retângulos\n    svg\n      .append('g')\n      .selectAll('g')\n      .data(series)\n      .join('g')\n      .attr('fill', (d) => color(d.key))\n      .selectAll('rect')\n      .data((D) => D.map((d) => ({ ...d, key: D.key })))\n      .join('rect')\n      .attr('x', (d) => x(d.data[0])) // Nome do grupo (barra)\n      .attr('y', (d) => y(d[1])) // Posição superior da barra\n      .attr('height', (d) => y(d[0]) - y(d[1])) // Altura da barra\n      .attr('width', x.bandwidth()) // Largura da barra\n      .append('title') // Tooltip\n      .text((d) => {\n        const name = d.data[0] // Nome do usuário\n        const type = d.key // Tipo do evento (INPUT, OUTPUT)\n        const count = d[1] - d[0] // Contagem\n\n        return `User: ${name}\\nType: ${type}\\nCount: ${count}` // Texto do tooltip\n      })\n\n    // Adiciona os eixos\n    svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .call((g) => g.selectAll('.domain').remove())\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y).ticks(null, 's'))\n      .call((g) => g.selectAll('.domain').remove())\n  }, [data])\n\n  return (\n    <div style={{ overflowX: 'auto', width: '100%' }}>\n      <svg ref={svgRef} />\n    </div>\n  )\n}\n\nexport default StackedBarChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}