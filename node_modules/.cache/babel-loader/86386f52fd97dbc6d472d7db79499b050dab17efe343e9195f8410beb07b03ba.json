{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport ReadDataset from './ReadDataset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChooseDataset = ({\n  title\n}) => {\n  _s();\n  const {\n    dataLoaded,\n    datasetData\n  } = ReadDataset();\n  const [selectedFile, setSelectedFile] = useState('');\n  const handleSelect = eventKey => {\n    setSelectedFile(eventKey);\n    // Enviar a escolha do arquivo para o backend\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`).then(response => response.json()).then(data => {\n      console.log('File set:', data);\n    }).catch(error => {\n      console.error('Error setting file:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      className: 'custom-navbar',\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"navbar-dark-example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"navbar-dark-example\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ms-auto\",\n            children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n              id: \"nav-dropdown-dark-example\",\n              title: \"Choose a Dataset\",\n              onSelect: handleSelect,\n              children: dataLoaded && datasetData.map((file, index) => /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                eventKey: file,\n                children: file\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ChooseDataset, \"VwyuAZk6PI9hLK+dCJV0lUzP4is=\");\n_c = ChooseDataset;\nexport default ChooseDataset;\nvar _c;\n$RefreshReg$(_c, \"ChooseDataset\");","map":{"version":3,"names":["React","useState","Container","Nav","Navbar","NavDropdown","ReadDataset","jsxDEV","_jsxDEV","ChooseDataset","title","_s","dataLoaded","datasetData","selectedFile","setSelectedFile","handleSelect","eventKey","fetch","then","response","json","data","console","log","catch","error","children","expand","className","fluid","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","onSelect","map","file","index","Item","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport ReadDataset from './ReadDataset'\n\nconst ChooseDataset = ({ title }) => {\n  const { dataLoaded, datasetData } = ReadDataset()\n  const [selectedFile, setSelectedFile] = useState('')\n\n  const handleSelect = (eventKey) => {\n    setSelectedFile(eventKey)\n    // Enviar a escolha do arquivo para o backend\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('File set:', data)\n      })\n      .catch((error) => {\n        console.error('Error setting file:', error)\n      })\n  }\n\n  return (\n    <div>\n      <Navbar expand=\"lg\" className={'custom-navbar'}>\n        <Container fluid>\n          <Navbar.Brand href=\"#home\">{title}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n          <Navbar.Collapse id=\"navbar-dark-example\">\n            <Nav className=\"ms-auto\">\n              <NavDropdown\n                id=\"nav-dropdown-dark-example\"\n                title=\"Choose a Dataset\"\n                onSelect={handleSelect}\n              >\n                {dataLoaded &&\n                  datasetData.map((file, index) => (\n                    <NavDropdown.Item key={index} eventKey={file}>\n                      {file}\n                    </NavDropdown.Item>\n                  ))}\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default ChooseDataset\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}