{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/information/Information.js\";\nimport React from 'react';\nimport './../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Information = ({\n  dataset,\n  totalUsers,\n  selectedUsers,\n  eventTypeNum,\n  typesNumber\n}) => {\n  const datasetDuration = totalUsers.reduce((total, user) => total + user.duration, 0);\n  const selectedUsersDuration = selectedUsers.reduce((total, user) => total + user.duration, 0);\n  const formattedTypes = typesNumber.split('\\n').map((type, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: type\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 27\n  }, this));\n  const formattedEventTypes = eventTypeNum.split('\\n').map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: event\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 28\n  }, this));\n  const datasetInfo = [{\n    label: 'Dataset Name',\n    value: dataset\n  }, {\n    label: 'Number of Users',\n    value: `${selectedUsers.length} / ${totalUsers.length}`\n  }, {\n    label: 'Dataset Duration',\n    value: `${datasetDuration} s`\n  }, {\n    label: \"User's Duration\",\n    value: `${selectedUsersDuration} s`\n  }, {\n    label: 'Types Information',\n    value: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"info-list\",\n      children: formattedTypes.length > 0 ? formattedTypes : 'No types available'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Event Types Information',\n    value: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"info-list\",\n      children: formattedEventTypes.length > 0 ? formattedEventTypes : 'No events available'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"information-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: datasetInfo.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [item.label, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), \" \", item.value]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Information;\nexport default Information;\nvar _c;\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Information","dataset","totalUsers","selectedUsers","eventTypeNum","typesNumber","datasetDuration","reduce","total","user","duration","selectedUsersDuration","formattedTypes","split","map","type","index","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedEventTypes","event","datasetInfo","label","value","length","className","item","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/information/Information.js"],"sourcesContent":["import React from 'react'\nimport './../styles.css'\n\nconst Information = ({\n  dataset,\n  totalUsers,\n  selectedUsers,\n  eventTypeNum,\n  typesNumber,\n}) => {\n  const datasetDuration = totalUsers.reduce(\n    (total, user) => total + user.duration,\n    0\n  )\n\n  const selectedUsersDuration = selectedUsers.reduce(\n    (total, user) => total + user.duration,\n    0\n  )\n\n  const formattedTypes = typesNumber\n    .split('\\n')\n    .map((type, index) => <li key={index}>{type}</li>)\n\n  const formattedEventTypes = eventTypeNum\n    .split('\\n')\n    .map((event, index) => <li key={index}>{event}</li>)\n\n  const datasetInfo = [\n    { label: 'Dataset Name', value: dataset },\n    {\n      label: 'Number of Users',\n      value: `${selectedUsers.length} / ${totalUsers.length}`,\n    },\n    { label: 'Dataset Duration', value: `${datasetDuration} s` },\n    { label: \"User's Duration\", value: `${selectedUsersDuration} s` },\n    {\n      label: 'Types Information',\n      value: (\n        <ul className=\"info-list\">\n          {formattedTypes.length > 0 ? formattedTypes : 'No types available'}\n        </ul>\n      ),\n    },\n    {\n      label: 'Event Types Information',\n      value: (\n        <ul className=\"info-list\">\n          {formattedEventTypes.length > 0\n            ? formattedEventTypes\n            : 'No events available'}\n        </ul>\n      ),\n    },\n  ]\n\n  return (\n    <div className=\"information-section\">\n      <div className=\"info-card\">\n        <ul>\n          {datasetInfo.map((item, index) => (\n            <li key={index} className=\"info-item\">\n              <strong>{item.label}:</strong> {item.value}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Information\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}