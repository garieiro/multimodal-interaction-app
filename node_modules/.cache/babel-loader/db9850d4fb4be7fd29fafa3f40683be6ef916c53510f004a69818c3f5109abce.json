{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    // Define as dimensões do gráfico\n    const width = 928;\n    const height = 500;\n    const marginTop = 10;\n    const marginRight = 10;\n    const marginBottom = 20;\n    const marginLeft = 40;\n\n    // Processa os dados para empilhamento\n    const series = d3.stack().keys(['INPUT', 'OUTPUT']) // Chaves dos tipos\n    .value(([, D], key) => {\n      var _D$find;\n      return ((_D$find = D.find(d => d.type === key)) === null || _D$find === void 0 ? void 0 : _D$find.count) || 0;\n    })(\n    // Obter o valor para cada chave\n    d3.group(data, d => d.name));\n\n    // Escalas para posicionamento e cor\n    const x = d3.scaleBand().domain(data.map(d => d.name)).range([marginLeft, width - marginRight]).padding(0.1);\n    const y = d3.scaleLinear().domain([0, d3.max(series, d => d3.max(d, d => d[1]))]).rangeRound([height - marginBottom, marginTop]);\n    const color = d3.scaleOrdinal().domain(series.map(d => d.key)).range(d3.schemeCategory10) // Cores diferentes para INPUT e OUTPUT\n    .unknown('#ccc');\n\n    // Cria o SVG\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).attr('viewBox', [0, 0, width, height]).attr('style', 'max-width: 100%; height: auto;');\n\n    // Adiciona grupos e retângulos\n    svg.selectAll('g').data(series).join('g').attr('fill', d => color(d.key)).selectAll('rect').data(D => D.map(d => ({\n      ...d,\n      key: D.key\n    }))).join('rect').attr('x', d => x(d.data.name)).attr('y', d => y(d[1])).attr('height', d => y(d[0]) - y(d[1])).attr('width', x.bandwidth()).append('title').text(d => `${d.data.name} ${d.key}\\n${d.data.count}`);\n\n    // Adiciona os eixos\n    svg.append('g').attr('transform', `translate(0,${height - marginBottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).call(g => g.selectAll('.domain').remove());\n    svg.append('g').attr('transform', `translate(${marginLeft},0)`).call(d3.axisLeft(y).ticks(null, 's')).call(g => g.selectAll('.domain').remove());\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_s(StackedBarChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","StackedBarChart","data","_s","svgRef","width","height","marginTop","marginRight","marginBottom","marginLeft","series","stack","keys","value","D","key","_D$find","find","d","type","count","group","name","x","scaleBand","domain","map","range","padding","y","scaleLinear","max","rangeRound","color","scaleOrdinal","schemeCategory10","unknown","svg","select","current","attr","selectAll","join","bandwidth","append","text","call","axisBottom","tickSizeOuter","g","remove","axisLeft","ticks","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst StackedBarChart = ({ data }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    // Define as dimensões do gráfico\n    const width = 928\n    const height = 500\n    const marginTop = 10\n    const marginRight = 10\n    const marginBottom = 20\n    const marginLeft = 40\n\n    // Processa os dados para empilhamento\n    const series = d3\n      .stack()\n      .keys(['INPUT', 'OUTPUT']) // Chaves dos tipos\n      .value(([, D], key) => D.find((d) => d.type === key)?.count || 0)(\n      // Obter o valor para cada chave\n      d3.group(data, (d) => d.name)\n    )\n\n    // Escalas para posicionamento e cor\n    const x = d3\n      .scaleBand()\n      .domain(data.map((d) => d.name))\n      .range([marginLeft, width - marginRight])\n      .padding(0.1)\n\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(series, (d) => d3.max(d, (d) => d[1]))])\n      .rangeRound([height - marginBottom, marginTop])\n\n    const color = d3\n      .scaleOrdinal()\n      .domain(series.map((d) => d.key))\n      .range(d3.schemeCategory10) // Cores diferentes para INPUT e OUTPUT\n      .unknown('#ccc')\n\n    // Cria o SVG\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', [0, 0, width, height])\n      .attr('style', 'max-width: 100%; height: auto;')\n\n    // Adiciona grupos e retângulos\n    svg\n      .selectAll('g')\n      .data(series)\n      .join('g')\n      .attr('fill', (d) => color(d.key))\n      .selectAll('rect')\n      .data((D) => D.map((d) => ({ ...d, key: D.key })))\n      .join('rect')\n      .attr('x', (d) => x(d.data.name))\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]))\n      .attr('width', x.bandwidth())\n      .append('title')\n      .text((d) => `${d.data.name} ${d.key}\\n${d.data.count}`)\n\n    // Adiciona os eixos\n    svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .call((g) => g.selectAll('.domain').remove())\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y).ticks(null, 's'))\n      .call((g) => g.selectAll('.domain').remove())\n  }, [data])\n\n  return <svg ref={svgRef} />\n}\n\nexport default StackedBarChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}