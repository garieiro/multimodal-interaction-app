{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [dataset, setDataset] = useState([]);\n  const [selectedDataset, setSelectedDataset] = useState(null);\n  const listRef = useRef([]); // Array para armazenar referências dos itens da lista\n  const [focusIndex, setFocusIndex] = useState(null); // Índice do item com foco\n\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI();\n        setDataset(fetchedDataset);\n      } catch (error) {\n        console.error('Error fetching Dataset:', error);\n      }\n    };\n    fetchDataset().catch(error => console.error('Error fetching Dataset:', error));\n  }, []);\n  const formatDatasetName = filename => {\n    const nameWithoutExtension = filename.replace('.json', '');\n    return nameWithoutExtension.replace(/^dataset/i, 'Dataset').replace(/(\\d+)/, ' $1');\n  };\n  const handleDatasetClick = dataset => {\n    setSelectedDataset(dataset);\n  };\n  const handleKeyDown = event => {\n    if (sortedDataset.length === 0) return;\n    let newIndex = focusIndex;\n    switch (event.key) {\n      case 'ArrowUp':\n        newIndex = (focusIndex - 1 + sortedDataset.length) % sortedDataset.length;\n        break;\n      case 'ArrowDown':\n        newIndex = (focusIndex + 1) % sortedDataset.length;\n        break;\n      case 'Enter':\n        if (focusIndex !== null) {\n          handleDatasetClick(sortedDataset[focusIndex]);\n        }\n        break;\n      default:\n        return;\n    }\n    setFocusIndex(newIndex);\n    if (listRef.current[newIndex]) {\n      listRef.current[newIndex].focus();\n    }\n  };\n  const datasetFile = file => [{\n    label: 'Name',\n    value: file.dataset ? file.dataset : 'No dataset Name'\n  }, {\n    label: 'Number of Users',\n    value: file.users ? file.users : '0'\n  }, {\n    label: 'Dataset Time',\n    value: file.total_duration ? `${file.total_duration} s` : '0 s'\n  }, {\n    label: 'Number of Types',\n    value: file.type_counts ? formatObject(file.type_counts) : 'No data'\n  }, {\n    label: 'Number of Event Types',\n    value: file.event_type_counts ? formatObject(file.event_type_counts) : 'No data'\n  }];\n  const formatObject = obj => {\n    return Object.entries(obj).map(([key, value]) => `${key}: ${value}`).join('\\n');\n  };\n  const sortedDataset = dataset.sort((first, second) => first.dataset.localeCompare(second.dataset));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    tabIndex: 0,\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-text\",\n        children: [\"Visualization and Analysis \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }, this), \" of \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 48\n        }, this), \" Multimodal Interaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: sortedDataset.map((file, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              action: true,\n              tag: \"button\",\n              onClick: () => handleDatasetClick(file),\n              ref: el => listRef.current[index] = el // Adiciona referência ao item\n              ,\n              className: `dataset-list-item ${focusIndex === index ? 'focused' : ''}`,\n              children: formatDatasetName(file.dataset)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: selectedDataset ? /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-4\",\n            children: \"Dataset Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: datasetFile(selectedDataset).map((info, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [info.label, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"text-muted\",\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  margin: '0'\n                },\n                children: info.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a dataset to view its details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"gEySVVgC4WYKSXttvxFO8CTWqbI=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","Container","ListGroup","ListGroupItem","fetchStaticAllFilesFromAPI","jsxDEV","_jsxDEV","MainPage","_s","navigate","dataset","setDataset","selectedDataset","setSelectedDataset","listRef","focusIndex","setFocusIndex","fetchDataset","fetchedDataset","error","console","catch","formatDatasetName","filename","nameWithoutExtension","replace","handleDatasetClick","handleKeyDown","event","sortedDataset","length","newIndex","key","current","focus","datasetFile","file","label","value","users","total_duration","type_counts","formatObject","event_type_counts","obj","Object","entries","map","join","sort","first","second","localeCompare","className","tabIndex","onKeyDown","children","fileName","_jsxFileName","lineNumber","columnNumber","index","action","tag","onClick","ref","el","info","style","whiteSpace","margin","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap'\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData'\n\nconst MainPage = () => {\n  const navigate = useNavigate()\n  const [dataset, setDataset] = useState([])\n  const [selectedDataset, setSelectedDataset] = useState(null)\n  const listRef = useRef([]) // Array para armazenar referências dos itens da lista\n  const [focusIndex, setFocusIndex] = useState(null) // Índice do item com foco\n\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI()\n        setDataset(fetchedDataset)\n      } catch (error) {\n        console.error('Error fetching Dataset:', error)\n      }\n    }\n\n    fetchDataset().catch((error) =>\n      console.error('Error fetching Dataset:', error)\n    )\n  }, [])\n\n  const formatDatasetName = (filename) => {\n    const nameWithoutExtension = filename.replace('.json', '')\n    return nameWithoutExtension\n      .replace(/^dataset/i, 'Dataset')\n      .replace(/(\\d+)/, ' $1')\n  }\n\n  const handleDatasetClick = (dataset) => {\n    setSelectedDataset(dataset)\n  }\n\n  const handleKeyDown = (event) => {\n    if (sortedDataset.length === 0) return\n\n    let newIndex = focusIndex\n\n    switch (event.key) {\n      case 'ArrowUp':\n        newIndex =\n          (focusIndex - 1 + sortedDataset.length) % sortedDataset.length\n        break\n      case 'ArrowDown':\n        newIndex = (focusIndex + 1) % sortedDataset.length\n        break\n      case 'Enter':\n        if (focusIndex !== null) {\n          handleDatasetClick(sortedDataset[focusIndex])\n        }\n        break\n      default:\n        return\n    }\n\n    setFocusIndex(newIndex)\n    if (listRef.current[newIndex]) {\n      listRef.current[newIndex].focus()\n    }\n  }\n\n  const datasetFile = (file) => [\n    {\n      label: 'Name',\n      value: file.dataset ? file.dataset : 'No dataset Name',\n    },\n    {\n      label: 'Number of Users',\n      value: file.users ? file.users : '0',\n    },\n    {\n      label: 'Dataset Time',\n      value: file.total_duration ? `${file.total_duration} s` : '0 s',\n    },\n    {\n      label: 'Number of Types',\n      value: file.type_counts ? formatObject(file.type_counts) : 'No data',\n    },\n    {\n      label: 'Number of Event Types',\n      value: file.event_type_counts\n        ? formatObject(file.event_type_counts)\n        : 'No data',\n    },\n  ]\n\n  const formatObject = (obj) => {\n    return Object.entries(obj)\n      .map(([key, value]) => `${key}: ${value}`)\n      .join('\\n')\n  }\n\n  const sortedDataset = dataset.sort((first, second) =>\n    first.dataset.localeCompare(second.dataset)\n  )\n\n  return (\n    <div className=\"main-container\" tabIndex={0} onKeyDown={handleKeyDown}>\n      <div className=\"title\">\n        <h1 className=\"title-text\">\n          Visualization and Analysis <br /> of <br /> Multimodal Interaction\n        </h1>\n      </div>\n\n      {/* Grid com duas secções */}\n      <div className=\"grid-container\">\n        {/* Primeira secção com a lista de datasets */}\n        <div className=\"grid-item\">\n          <Container>\n            <ListGroup>\n              {sortedDataset.map((file, index) => (\n                <ListGroupItem\n                  key={index}\n                  action\n                  tag=\"button\"\n                  onClick={() => handleDatasetClick(file)}\n                  ref={(el) => (listRef.current[index] = el)} // Adiciona referência ao item\n                  className={`dataset-list-item ${focusIndex === index ? 'focused' : ''}`}\n                >\n                  {formatDatasetName(file.dataset)}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Container>\n        </div>\n\n        <div className=\"grid-item\">\n          {selectedDataset ? (\n            <Container>\n              <h3 className=\"mb-4\">Dataset Information</h3>\n              <ListGroup>\n                {datasetFile(selectedDataset).map((info, index) => (\n                  <ListGroupItem key={index}>\n                    <strong>{info.label}:</strong>\n                    <pre\n                      className=\"text-muted\"\n                      style={{ whiteSpace: 'pre-wrap', margin: '0' }}\n                    >\n                      {info.value}\n                    </pre>\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n            </Container>\n          ) : (\n            <p>Select a dataset to view its details</p>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MainPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}