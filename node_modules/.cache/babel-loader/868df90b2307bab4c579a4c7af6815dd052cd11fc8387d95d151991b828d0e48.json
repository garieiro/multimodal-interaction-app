{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/WordCloud.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordCloud = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const renderCloud = (containerWidth, containerHeight) => {\n      d3.select(svgRef.current).selectAll('*').remove();\n      const words = data.map(word => ({\n        text: word.text,\n        size: word.value\n      }));\n      const fontFamily = 'sans-serif';\n\n      // Ajustando a escala com base no menor valor entre a largura e a altura do container\n      const fontScale = Math.min(containerWidth, containerHeight) / 25;\n      const cloud = d3Cloud().size([containerWidth, containerHeight]).words(words).padding(5).rotate(() => 0).font(fontFamily).fontSize(d => Math.sqrt(d.size) * fontScale) // Usando uma escala dinâmica com base no tamanho do container\n      .on('end', draw);\n      cloud.start();\n      function draw(words) {\n        const svg = d3.select(svgRef.current);\n        svg.attr('viewBox', [0, 0, containerWidth, containerHeight]).attr('width', containerWidth).attr('height', containerHeight).attr('font-family', fontFamily).attr('text-anchor', 'middle').attr('style', 'max-width: 100%; height: auto;').selectAll('text').data(words).enter().append('text').attr('font-size', d => d.size).attr('fill', '#000').attr('transform', d => `translate(${d.x + containerWidth / 2},${d.y + containerHeight / 2})`).text(d => d.text);\n      }\n    };\n\n    // ResizeObserver para monitorar mudanças no tamanho do container\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        renderCloud(width, height);\n      }\n    });\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    // Cleanup do observer ao desmontar o componente\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(WordCloud, \"3KSnylFmZ5aNNvVrAf34KpLSSw8=\");\n_c = WordCloud;\nexport default WordCloud;\nvar _c;\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"names":["React","useEffect","useRef","d3","d3Cloud","jsxDEV","_jsxDEV","WordCloud","data","_s","svgRef","containerRef","renderCloud","containerWidth","containerHeight","select","current","selectAll","remove","words","map","word","text","size","value","fontFamily","fontScale","Math","min","cloud","padding","rotate","font","fontSize","d","sqrt","on","draw","start","svg","attr","enter","append","x","y","resizeObserver","ResizeObserver","entries","entry","width","height","contentRect","observe","unobserve","ref","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/WordCloud.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport d3Cloud from 'd3-cloud'\n\nconst WordCloud = ({ data }) => {\n  const svgRef = useRef(null)\n  const containerRef = useRef(null)\n\n  useEffect(() => {\n    const renderCloud = (containerWidth, containerHeight) => {\n      d3.select(svgRef.current).selectAll('*').remove()\n\n      const words = data.map((word) => ({ text: word.text, size: word.value }))\n\n      const fontFamily = 'sans-serif'\n\n      // Ajustando a escala com base no menor valor entre a largura e a altura do container\n      const fontScale = Math.min(containerWidth, containerHeight) / 25\n\n      const cloud = d3Cloud()\n        .size([containerWidth, containerHeight])\n        .words(words)\n        .padding(5)\n        .rotate(() => 0)\n        .font(fontFamily)\n        .fontSize((d) => Math.sqrt(d.size) * fontScale) // Usando uma escala dinâmica com base no tamanho do container\n        .on('end', draw)\n\n      cloud.start()\n\n      function draw(words) {\n        const svg = d3.select(svgRef.current)\n\n        svg\n          .attr('viewBox', [0, 0, containerWidth, containerHeight])\n          .attr('width', containerWidth)\n          .attr('height', containerHeight)\n          .attr('font-family', fontFamily)\n          .attr('text-anchor', 'middle')\n          .attr('style', 'max-width: 100%; height: auto;')\n          .selectAll('text')\n          .data(words)\n          .enter()\n          .append('text')\n          .attr('font-size', (d) => d.size)\n          .attr('fill', '#000')\n          .attr(\n            'transform',\n            (d) =>\n              `translate(${d.x + containerWidth / 2},${d.y + containerHeight / 2})`\n          )\n          .text((d) => d.text)\n      }\n    }\n\n    // ResizeObserver para monitorar mudanças no tamanho do container\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect\n        renderCloud(width, height)\n      }\n    })\n\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current)\n    }\n\n    // Cleanup do observer ao desmontar o componente\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current)\n      }\n    }\n  }, [data])\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}>\n      <svg ref={svgRef} style={{ width: '100%', height: '100%' }} />\n    </div>\n  )\n}\n\nexport default WordCloud\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}