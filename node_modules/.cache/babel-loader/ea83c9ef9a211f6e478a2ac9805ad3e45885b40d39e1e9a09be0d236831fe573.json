{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Row, Col } from 'reactstrap';\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [dataset, setDataset] = useState([]);\n  const [selectedDataset, setSelectedDataset] = useState(null);\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI();\n        setDataset(fetchedDataset);\n      } catch (error) {\n        console.error('Error fetching Dataset:', error);\n      }\n    };\n    fetchDataset().catch(error => console.error('Error fetching Dataset:', error));\n  }, []);\n  const formatDatasetName = filename => {\n    const nameWithoutExtension = filename.replace('.json', '');\n    return nameWithoutExtension.replace(/^dataset/i, 'Dataset').replace(/(\\d+)/, ' $1');\n  };\n  const handleDatasetClick = dataset => {\n    setSelectedDataset(dataset);\n  };\n  const formatObject = obj => {\n    return Object.entries(obj).map(([key, value]) => `${key}: ${value}`).join('\\n');\n  };\n  const datasetFile = file => [{\n    label: 'Name',\n    value: file.dataset ? file.dataset : 'No dataset Name'\n  }, {\n    label: 'Number of Users',\n    value: file.users ? file.users : '0'\n  }, {\n    label: 'Dataset Time',\n    value: file.total_duration ? `${file.total_duration} s` : '0 s'\n  }, {\n    label: 'Number of Types',\n    value: file.type_counts ? formatObject(file.type_counts) : 'No data'\n  }, {\n    label: 'Number of Event Types',\n    value: file.event_type_counts ? formatObject(file.event_type_counts) : 'No data'\n  }];\n  const sortedDataset = dataset.sort((first, second) => first.dataset.localeCompare(second.dataset));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-text\",\n        children: [\"Visualization and Analysis \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 38\n        }, this), \" of \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 48\n        }, this), \" Multimodal Interaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: sortedDataset.map((file, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              action: true,\n              tag: \"button\",\n              onClick: () => handleDatasetClick(file),\n              className: \"dataset-list-item\",\n              children: formatDatasetName(file.dataset)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: selectedDataset ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: datasetFile(selectedDataset).map((info, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [info.label, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"text-muted\",\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  margin: '0'\n                },\n                children: info.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a dataset to view its details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"UK5flWDJ6Cdn+DqorSSUQtEsgw4=\", false, function () {\n  return [useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Container","ListGroup","ListGroupItem","Row","Col","fetchStaticAllFilesFromAPI","jsxDEV","_jsxDEV","MainPage","_s","navigate","dataset","setDataset","selectedDataset","setSelectedDataset","fetchDataset","fetchedDataset","error","console","catch","formatDatasetName","filename","nameWithoutExtension","replace","handleDatasetClick","formatObject","obj","Object","entries","map","key","value","join","datasetFile","file","label","users","total_duration","type_counts","event_type_counts","sortedDataset","sort","first","second","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","action","tag","onClick","info","style","whiteSpace","margin","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/mainPage/MainPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Container, ListGroup, ListGroupItem, Row, Col } from 'reactstrap'\nimport { fetchStaticAllFilesFromAPI } from '../../api/StaticData'\n\nconst MainPage = () => {\n  const navigate = useNavigate()\n  const [dataset, setDataset] = useState([])\n  const [selectedDataset, setSelectedDataset] = useState(null)\n\n  useEffect(() => {\n    const fetchDataset = async () => {\n      try {\n        const fetchedDataset = await fetchStaticAllFilesFromAPI()\n        setDataset(fetchedDataset)\n      } catch (error) {\n        console.error('Error fetching Dataset:', error)\n      }\n    }\n\n    fetchDataset().catch((error) =>\n      console.error('Error fetching Dataset:', error)\n    )\n  }, [])\n\n  const formatDatasetName = (filename) => {\n    const nameWithoutExtension = filename.replace('.json', '')\n    return nameWithoutExtension\n      .replace(/^dataset/i, 'Dataset')\n      .replace(/(\\d+)/, ' $1')\n  }\n\n  const handleDatasetClick = (dataset) => {\n    setSelectedDataset(dataset)\n  }\n\n  const formatObject = (obj) => {\n    return Object.entries(obj)\n      .map(([key, value]) => `${key}: ${value}`)\n      .join('\\n')\n  }\n\n  const datasetFile = (file) => [\n    {\n      label: 'Name',\n      value: file.dataset ? file.dataset : 'No dataset Name',\n    },\n    {\n      label: 'Number of Users',\n      value: file.users ? file.users : '0',\n    },\n    {\n      label: 'Dataset Time',\n      value: file.total_duration ? `${file.total_duration} s` : '0 s',\n    },\n    {\n      label: 'Number of Types',\n      value: file.type_counts ? formatObject(file.type_counts) : 'No data',\n    },\n    {\n      label: 'Number of Event Types',\n      value: file.event_type_counts\n        ? formatObject(file.event_type_counts)\n        : 'No data',\n    },\n  ]\n\n  const sortedDataset = dataset.sort((first, second) =>\n    first.dataset.localeCompare(second.dataset)\n  )\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"title\">\n        <h1 className=\"title-text\">\n          Visualization and Analysis <br /> of <br /> Multimodal Interaction\n        </h1>\n      </div>\n\n      <div className=\"grid-container\">\n        <div className=\"grid-item\">\n          <Container>\n            <ListGroup>\n              {sortedDataset.map((file, index) => (\n                <ListGroupItem\n                  key={index}\n                  action\n                  tag=\"button\"\n                  onClick={() => handleDatasetClick(file)}\n                  className=\"dataset-list-item\"\n                >\n                  {formatDatasetName(file.dataset)}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Container>\n        </div>\n\n        <div className=\"grid-item\">\n          {selectedDataset ? (\n            <Container>\n              <ListGroup>\n                {datasetFile(selectedDataset).map((info, index) => (\n                  <ListGroupItem key={index}>\n                    <strong>{info.label}:</strong>\n                    <pre\n                      className=\"text-muted\"\n                      style={{ whiteSpace: 'pre-wrap', margin: '0' }}\n                    >\n                      {info.value}\n                    </pre>\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n            </Container>\n          ) : (\n            <p>Select a dataset to view its details</p>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MainPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}