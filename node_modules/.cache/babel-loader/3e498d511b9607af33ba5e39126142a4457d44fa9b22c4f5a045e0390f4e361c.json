{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    const generateChart = data => {\n      if (!data || data.length === 0) {\n        console.error('No data available to generate the chart.');\n        return;\n      }\n      const width = 928;\n      const height = 500;\n      const marginTop = 10;\n      const marginRight = 10;\n      const marginBottom = 20;\n      const marginLeft = 40;\n\n      // Agrupar os dados pelo \"name\"\n      const groupedData = d3.group(data, d => d.name);\n      if (!groupedData || groupedData.size === 0) {\n        console.error('Grouped data is undefined or empty.');\n        return;\n      }\n\n      // Extrair os tipos únicos (INPUT, OUTPUT) do data\n      const allTypes = Array.from(new Set(data.map(d => d.type)));\n      if (!allTypes || allTypes.length === 0) {\n        console.error(\"No valid 'type' found in data.\");\n        return;\n      }\n\n      // Criar as séries empilhadas\n      const series = d3.stack().keys(allTypes).value((group, key) => {\n        const item = group.find(d => d.type === key);\n        return item ? item.count : 0;\n      })(Array.from(groupedData.values()));\n      if (!series || series.length === 0) {\n        console.error('Series data is undefined or empty.');\n        return;\n      }\n\n      // Verificação do domínio do eixo X\n      const xDomain = [...groupedData.keys()];\n      if (!xDomain || xDomain.length === 0) {\n        console.error('xDomain is undefined or empty.');\n        return;\n      }\n\n      // Eixo X\n      const x = d3.scaleBand().domain(xDomain).range([marginLeft, width - marginRight]).padding(0.1);\n\n      // Verificação do domínio Y baseado nos dados empilhados\n      const yMax = d3.max(series, d => d3.max(d, d => d[1]));\n      if (yMax === undefined || yMax === null) {\n        console.error('yMax is undefined or invalid.');\n        return;\n      }\n      const y = d3.scaleLinear().domain([0, yMax]).rangeRound([height - marginBottom, marginTop]);\n\n      // Definir as cores de preenchimento\n      const color = d3.scaleOrdinal().domain(allTypes).range(d3.schemeSpectral[allTypes.length] || ['#ccc']);\n\n      // Criar o SVG\n      const svg = d3.create('svg').attr('width', width).attr('height', height).attr('viewBox', [0, 0, width, height]).attr('style', 'max-width: 100%; height: auto;');\n\n      // Adicionar barras empilhadas\n      svg.append('g').selectAll('g').data(series).join('g').attr('fill', d => color(d.key)) // Usar a chave correta\n      .selectAll('rect').data(d => d).join('rect').attr('x', d => x(d.data.name)) // Acessa o nome do usuário\n      .attr('y', d => y(d[1])).attr('height', d => y(d[0]) - y(d[1])).attr('width', x.bandwidth()).append('title').text(d => {\n        const user = d.data.name; // Acessa o nome do usuário\n        const type = d.data.type; // Acessa o tipo correto\n        const count = d[1] - d[0]; // Calcula a contagem\n        return `User: ${user || 'N/A'}\\nType: ${type || 'N/A'}\\nCount: ${count}`; // Texto do tooltip\n      });\n\n      // Adicionar eixos\n      svg.append('g').attr('transform', `translate(0,${height - marginBottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).call(g => g.selectAll('.domain').remove());\n      svg.append('g').attr('transform', `translate(${marginLeft},0)`).call(d3.axisLeft(y).ticks(null, 's')).call(g => g.selectAll('.domain').remove());\n      return svg.node();\n    };\n    if (data && data.length > 0) {\n      d3.select(ref.current).selectAll('*').remove();\n      const svg = generateChart(data);\n      ref.current.appendChild(svg);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};\n_s(StackedBarChart, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","StackedBarChart","data","_s","ref","generateChart","length","console","error","width","height","marginTop","marginRight","marginBottom","marginLeft","groupedData","group","d","name","size","allTypes","Array","from","Set","map","type","series","stack","keys","value","key","item","find","count","values","xDomain","x","scaleBand","domain","range","padding","yMax","max","undefined","y","scaleLinear","rangeRound","color","scaleOrdinal","schemeSpectral","svg","create","attr","append","selectAll","join","bandwidth","text","user","call","axisBottom","tickSizeOuter","g","remove","axisLeft","ticks","node","select","current","appendChild","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst StackedBarChart = ({ data }) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const generateChart = (data) => {\n      if (!data || data.length === 0) {\n        console.error('No data available to generate the chart.')\n        return\n      }\n\n      const width = 928\n      const height = 500\n      const marginTop = 10\n      const marginRight = 10\n      const marginBottom = 20\n      const marginLeft = 40\n\n      // Agrupar os dados pelo \"name\"\n      const groupedData = d3.group(data, (d) => d.name)\n      if (!groupedData || groupedData.size === 0) {\n        console.error('Grouped data is undefined or empty.')\n        return\n      }\n\n      // Extrair os tipos únicos (INPUT, OUTPUT) do data\n      const allTypes = Array.from(new Set(data.map((d) => d.type)))\n      if (!allTypes || allTypes.length === 0) {\n        console.error(\"No valid 'type' found in data.\")\n        return\n      }\n\n      // Criar as séries empilhadas\n      const series = d3\n        .stack()\n        .keys(allTypes)\n        .value((group, key) => {\n          const item = group.find((d) => d.type === key)\n          return item ? item.count : 0\n        })(Array.from(groupedData.values()))\n\n      if (!series || series.length === 0) {\n        console.error('Series data is undefined or empty.')\n        return\n      }\n\n      // Verificação do domínio do eixo X\n      const xDomain = [...groupedData.keys()]\n      if (!xDomain || xDomain.length === 0) {\n        console.error('xDomain is undefined or empty.')\n        return\n      }\n\n      // Eixo X\n      const x = d3\n        .scaleBand()\n        .domain(xDomain)\n        .range([marginLeft, width - marginRight])\n        .padding(0.1)\n\n      // Verificação do domínio Y baseado nos dados empilhados\n      const yMax = d3.max(series, (d) => d3.max(d, (d) => d[1]))\n      if (yMax === undefined || yMax === null) {\n        console.error('yMax is undefined or invalid.')\n        return\n      }\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, yMax])\n        .rangeRound([height - marginBottom, marginTop])\n\n      // Definir as cores de preenchimento\n      const color = d3\n        .scaleOrdinal()\n        .domain(allTypes)\n        .range(d3.schemeSpectral[allTypes.length] || ['#ccc'])\n\n      // Criar o SVG\n      const svg = d3\n        .create('svg')\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', [0, 0, width, height])\n        .attr('style', 'max-width: 100%; height: auto;')\n\n      // Adicionar barras empilhadas\n      svg\n        .append('g')\n        .selectAll('g')\n        .data(series)\n        .join('g')\n        .attr('fill', (d) => color(d.key)) // Usar a chave correta\n        .selectAll('rect')\n        .data((d) => d)\n        .join('rect')\n        .attr('x', (d) => x(d.data.name)) // Acessa o nome do usuário\n        .attr('y', (d) => y(d[1]))\n        .attr('height', (d) => y(d[0]) - y(d[1]))\n        .attr('width', x.bandwidth())\n        .append('title')\n        .text((d) => {\n          const user = d.data.name // Acessa o nome do usuário\n          const type = d.data.type // Acessa o tipo correto\n          const count = d[1] - d[0] // Calcula a contagem\n          return `User: ${user || 'N/A'}\\nType: ${type || 'N/A'}\\nCount: ${count}` // Texto do tooltip\n        })\n\n      // Adicionar eixos\n      svg\n        .append('g')\n        .attr('transform', `translate(0,${height - marginBottom})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0))\n        .call((g) => g.selectAll('.domain').remove())\n\n      svg\n        .append('g')\n        .attr('transform', `translate(${marginLeft},0)`)\n        .call(d3.axisLeft(y).ticks(null, 's'))\n        .call((g) => g.selectAll('.domain').remove())\n\n      return svg.node()\n    }\n\n    if (data && data.length > 0) {\n      d3.select(ref.current).selectAll('*').remove()\n      const svg = generateChart(data)\n      ref.current.appendChild(svg)\n    }\n  }, [data])\n\n  return <div ref={ref}></div>\n}\n\nexport default StackedBarChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}