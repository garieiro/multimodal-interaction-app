{"ast":null,"code":"import transformDataToHierarchy from './transformDataToSunburst';\nconst transformDataToBoxplot = data => {\n  const eventLabels = [];\n  const eventTypes = [];\n\n  // Extract unique event labels and types\n  Object.values(data).forEach(events => {\n    events.forEach(event => {\n      if (!eventLabels.includes(event.Type)) {\n        eventLabels.push(event.Type);\n      }\n      if (!eventTypes.includes(event.EventType)) {\n        eventTypes.push(event.EventType);\n      }\n    });\n  });\n\n  // Initialize results array with structure\n  const results = eventLabels.map(label => ({\n    label,\n    values: new Array(Object.keys(data).length).fill(0)\n  }));\n\n  // Fill in the values for each user\n  Object.entries(data).forEach(([userId, events], index) => {\n    events.forEach(event => {\n      const labelIndex = eventLabels.indexOf(event.Type);\n      results[labelIndex].values[index]++;\n    });\n  });\n  return results;\n};\nexport default transformDataToBoxplot;","map":{"version":3,"names":["transformDataToHierarchy","transformDataToBoxplot","data","eventLabels","eventTypes","Object","values","forEach","events","event","includes","Type","push","EventType","results","map","label","Array","keys","length","fill","entries","userId","index","labelIndex","indexOf"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToBoxplot.js"],"sourcesContent":["import transformDataToHierarchy from './transformDataToSunburst'\n\nconst transformDataToBoxplot = (data) => {\n  const eventLabels = []\n  const eventTypes = []\n\n  // Extract unique event labels and types\n  Object.values(data).forEach((events) => {\n    events.forEach((event) => {\n      if (!eventLabels.includes(event.Type)) {\n        eventLabels.push(event.Type)\n      }\n      if (!eventTypes.includes(event.EventType)) {\n        eventTypes.push(event.EventType)\n      }\n    })\n  })\n\n  // Initialize results array with structure\n  const results = eventLabels.map((label) => ({\n    label,\n    values: new Array(Object.keys(data).length).fill(0),\n  }))\n\n  // Fill in the values for each user\n  Object.entries(data).forEach(([userId, events], index) => {\n    events.forEach((event) => {\n      const labelIndex = eventLabels.indexOf(event.Type)\n      results[labelIndex].values[index]++\n    })\n  })\n\n  return results\n}\n\nexport default transformDataToBoxplot\n"],"mappings":"AAAA,OAAOA,wBAAwB,MAAM,2BAA2B;AAEhE,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;EACvC,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,UAAU,GAAG,EAAE;;EAErB;EACAC,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAEC,MAAM,IAAK;IACtCA,MAAM,CAACD,OAAO,CAAEE,KAAK,IAAK;MACxB,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;QACrCR,WAAW,CAACS,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC;MAC9B;MACA,IAAI,CAACP,UAAU,CAACM,QAAQ,CAACD,KAAK,CAACI,SAAS,CAAC,EAAE;QACzCT,UAAU,CAACQ,IAAI,CAACH,KAAK,CAACI,SAAS,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMC,OAAO,GAAGX,WAAW,CAACY,GAAG,CAAEC,KAAK,KAAM;IAC1CA,KAAK;IACLV,MAAM,EAAE,IAAIW,KAAK,CAACZ,MAAM,CAACa,IAAI,CAAChB,IAAI,CAAC,CAACiB,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC,CAAC;;EAEH;EACAf,MAAM,CAACgB,OAAO,CAACnB,IAAI,CAAC,CAACK,OAAO,CAAC,CAAC,CAACe,MAAM,EAAEd,MAAM,CAAC,EAAEe,KAAK,KAAK;IACxDf,MAAM,CAACD,OAAO,CAAEE,KAAK,IAAK;MACxB,MAAMe,UAAU,GAAGrB,WAAW,CAACsB,OAAO,CAAChB,KAAK,CAACE,IAAI,CAAC;MAClDG,OAAO,CAACU,UAAU,CAAC,CAAClB,MAAM,CAACiB,KAAK,CAAC,EAAE;IACrC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOT,OAAO;AAChB,CAAC;AAED,eAAeb,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}