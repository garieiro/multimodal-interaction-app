{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromCallExpression;\n/**\n * Extractor function for a CallExpression type value node.\n * A call expression looks like `bar()`\n * This will return `bar` as the value to indicate its existence,\n * since we can not execute the function bar in a static environment.\n *\n * @param - value - AST Value object with type `CallExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromCallExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var args = Array.isArray(value.arguments) ? value.arguments.map(function (x) {\n    return getValue(x);\n  }).join(', ') : '';\n  return '' + getValue(value.callee) + (value.optional ? '?.' : '') + '(' + args + ')';\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromCallExpression","getValue","require","args","Array","isArray","arguments","map","x","join","callee","optional"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/node_modules/jsx-ast-utils/lib/values/expressions/CallExpression.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromCallExpression;\n/**\n * Extractor function for a CallExpression type value node.\n * A call expression looks like `bar()`\n * This will return `bar` as the value to indicate its existence,\n * since we can not execute the function bar in a static environment.\n *\n * @param - value - AST Value object with type `CallExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromCallExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var args = Array.isArray(value.arguments) ? value.arguments.map(function (x) {\n    return getValue(x);\n  }).join(', ') : '';\n  return '' + getValue(value.callee) + (value.optional ? '?.' : '') + '(' + args + ')';\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,8BAA8BA,CAACF,KAAK,EAAE;EAC7C;EACA,IAAIG,QAAQ,GAAGC,OAAO,CAAC,GAAG,CAAC,CAACH,OAAO;EACnC,IAAII,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACP,KAAK,CAACQ,SAAS,CAAC,GAAGR,KAAK,CAACQ,SAAS,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;IAC3E,OAAOP,QAAQ,CAACO,CAAC,CAAC;EACpB,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;EAClB,OAAO,EAAE,GAAGR,QAAQ,CAACH,KAAK,CAACY,MAAM,CAAC,IAAIZ,KAAK,CAACa,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,GAAG,GAAGR,IAAI,GAAG,GAAG;AACtF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}