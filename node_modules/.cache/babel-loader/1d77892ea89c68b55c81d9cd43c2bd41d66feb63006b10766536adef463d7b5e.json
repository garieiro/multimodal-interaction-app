{"ast":null,"code":"const EventDurationRealTime = (receivedData, eventDurations) => {\n  // Verifica se os dados recebidos são um objeto\n  if (typeof receivedData === 'object' && receivedData.data) {\n    const event = JSON.parse(receivedData.data); // Converte a string JSON para objeto JavaScript\n    const eventType = event.EventType;\n    const startTimestamp = new Date(event.Start);\n    const endTimestamp = new Date(event.End);\n    const duration = endTimestamp - startTimestamp;\n\n    // Verifica se o tipo de evento já existe nas durações de evento\n    if (eventType in eventDurations) {\n      // Adiciona a duração ao array de durações do evento\n      eventDurations[eventType] += duration;\n    } else {\n      // Se o tipo de evento ainda não existir nas durações, inicializa-o com um array contendo a duração\n      eventDurations[eventType] = duration;\n    }\n  }\n  return eventDurations;\n};\n_c = EventDurationRealTime;\nexport default EventDurationRealTime;\nvar _c;\n$RefreshReg$(_c, \"EventDurationRealTime\");","map":{"version":3,"names":["EventDurationRealTime","receivedData","eventDurations","data","event","JSON","parse","eventType","EventType","startTimestamp","Date","Start","endTimestamp","End","duration","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/EventDurationRealTime.js"],"sourcesContent":["const EventDurationRealTime = (receivedData, eventDurations) => {\n    // Verifica se os dados recebidos são um objeto\n    if (typeof receivedData === 'object' && receivedData.data) {\n      const event = JSON.parse(receivedData.data); // Converte a string JSON para objeto JavaScript\n      const eventType = event.EventType;\n      const startTimestamp = new Date(event.Start);\n      const endTimestamp = new Date(event.End);\n      const duration = endTimestamp - startTimestamp;\n  \n      // Verifica se o tipo de evento já existe nas durações de evento\n      if (eventType in eventDurations) {\n        // Adiciona a duração ao array de durações do evento\n        eventDurations[eventType] += duration;\n      } else {\n        // Se o tipo de evento ainda não existir nas durações, inicializa-o com um array contendo a duração\n        eventDurations[eventType] = duration;\n      }\n    }\n    return eventDurations;\n  };\n  \nexport default EventDurationRealTime;\n  "],"mappings":"AAAA,MAAMA,qBAAqB,GAAGA,CAACC,YAAY,EAAEC,cAAc,KAAK;EAC5D;EACA,IAAI,OAAOD,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACE,IAAI,EAAE;IACzD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACE,IAAI,CAAC,CAAC,CAAC;IAC7C,MAAMI,SAAS,GAAGH,KAAK,CAACI,SAAS;IACjC,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC;IAC5C,MAAMC,YAAY,GAAG,IAAIF,IAAI,CAACN,KAAK,CAACS,GAAG,CAAC;IACxC,MAAMC,QAAQ,GAAGF,YAAY,GAAGH,cAAc;;IAE9C;IACA,IAAIF,SAAS,IAAIL,cAAc,EAAE;MAC/B;MACAA,cAAc,CAACK,SAAS,CAAC,IAAIO,QAAQ;IACvC,CAAC,MAAM;MACL;MACAZ,cAAc,CAACK,SAAS,CAAC,GAAGO,QAAQ;IACtC;EACF;EACA,OAAOZ,cAAc;AACvB,CAAC;AAACa,EAAA,GAnBEf,qBAAqB;AAqB3B,eAAeA,qBAAqB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}