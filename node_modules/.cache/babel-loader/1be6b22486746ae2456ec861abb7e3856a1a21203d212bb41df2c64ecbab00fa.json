{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/charts/PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiLevelPieChart = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    drawChart();\n  }, []);\n  const drawChart = () => {\n    d3.select('#chart-container').selectAll('*').remove();\n    const width = 1000;\n    const height = 500;\n    const radius = Math.min(width, height) / 2 - 50;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const svg = d3.select('#chart-container').append('svg').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2},${height / 2})`);\n    const partition = d3.partition().size([2 * Math.PI, radius]);\n    const root = d3.hierarchy(data).sum(d => d.value);\n    partition(root);\n    const arc = d3.arc().startAngle(d => d.x0).endAngle(d => d.x1).innerRadius(d => d.y0).outerRadius(d => d.y1);\n    svg.selectAll('path').data(root.descendants().slice(1)).enter().append('path').attr('d', arc).style('stroke', '#fff').style('fill', d => color(d.data.name)).append('title').text(d => {\n      let tooltipText = '';\n      if (d.depth === 1) {\n        // Primeiro nível\n        if (d.data.type) {\n          tooltipText += `Type: ${d.data.type}\\n`;\n        }\n        if (d.data.name) {\n          tooltipText += `Event Type: ${d.data.name}\\n`;\n        }\n        if (d.value) {\n          tooltipText += `Count: ${d.value}`;\n        }\n      } else if (d.depth === 2) {\n        // Segundo nível\n        if (d.data.name) {\n          tooltipText += `Semantic: ${d.data.name}\\n`;\n        }\n        if (d.value) {\n          tooltipText += `Count: ${d.value}`;\n        }\n      }\n      return tooltipText;\n    });\n    const legendRectSize = 18;\n    const legendSpacing = 4;\n    const uniqueLegendData = root.descendants().slice(1).filter((d, i, self) => i === self.findIndex(t => t.data.name === d.data.name && t.data.type === d.data.type));\n    const legend = svg.append('g').selectAll('.legend').data(uniqueLegendData).enter().append('g').attr('class', 'legend').attr('transform', (d, i) => {\n      const height = legendRectSize + legendSpacing;\n      const offset = height * color.domain().length / 2;\n      const horz = radius + 40;\n      const vert = i * height - offset;\n      return `translate(${horz},${vert})`;\n    });\n    legend.append('rect').attr('width', legendRectSize).attr('height', legendRectSize).style('fill', d => color(d.data.name)).style('stroke', d => color(d.data.name));\n    legend.append('text').attr('x', legendRectSize + legendSpacing).attr('y', legendRectSize - legendSpacing).text(d => {\n      let semantic = d.data.name;\n      if (d.depth === 2) {\n        // Segundo nível\n        if (semantic.length > 10) {\n          semantic = semantic.substring(0, 10) + '...';\n        }\n      } else {\n        // Primeiro nível\n        semantic = `${semantic} (${d.data.type})`;\n      }\n      return semantic;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n_s(MultiLevelPieChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MultiLevelPieChart;\nexport default MultiLevelPieChart;\nvar _c;\n$RefreshReg$(_c, \"MultiLevelPieChart\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","MultiLevelPieChart","data","_s","drawChart","select","selectAll","remove","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","svg","append","attr","partition","size","PI","root","hierarchy","sum","d","value","arc","startAngle","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","descendants","slice","enter","style","name","text","tooltipText","depth","type","legendRectSize","legendSpacing","uniqueLegendData","filter","i","self","findIndex","t","legend","offset","domain","length","horz","vert","semantic","substring","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/charts/PieChart.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport * as d3 from 'd3'\n\nconst MultiLevelPieChart = ({ data }) => {\n  useEffect(() => {\n    drawChart()\n  }, [])\n\n  const drawChart = () => {\n    d3.select('#chart-container').selectAll('*').remove()\n\n    const width = 1000\n    const height = 500\n    const radius = Math.min(width, height) / 2 - 50\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    const svg = d3\n      .select('#chart-container')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2},${height / 2})`)\n\n    const partition = d3.partition().size([2 * Math.PI, radius])\n\n    const root = d3.hierarchy(data).sum((d) => d.value)\n\n    partition(root)\n\n    const arc = d3\n      .arc()\n      .startAngle((d) => d.x0)\n      .endAngle((d) => d.x1)\n      .innerRadius((d) => d.y0)\n      .outerRadius((d) => d.y1)\n\n    svg\n      .selectAll('path')\n      .data(root.descendants().slice(1))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .style('stroke', '#fff')\n      .style('fill', (d) => color(d.data.name))\n      .append('title')\n      .text((d) => {\n        let tooltipText = ''\n        if (d.depth === 1) {\n          // Primeiro nível\n          if (d.data.type) {\n            tooltipText += `Type: ${d.data.type}\\n`\n          }\n          if (d.data.name) {\n            tooltipText += `Event Type: ${d.data.name}\\n`\n          }\n          if (d.value) {\n            tooltipText += `Count: ${d.value}`\n          }\n        } else if (d.depth === 2) {\n          // Segundo nível\n          if (d.data.name) {\n            tooltipText += `Semantic: ${d.data.name}\\n`\n          }\n          if (d.value) {\n            tooltipText += `Count: ${d.value}`\n          }\n        }\n        return tooltipText\n      })\n\n    const legendRectSize = 18\n    const legendSpacing = 4\n\n    const uniqueLegendData = root\n      .descendants()\n      .slice(1)\n      .filter(\n        (d, i, self) =>\n          i ===\n          self.findIndex(\n            (t) => t.data.name === d.data.name && t.data.type === d.data.type\n          )\n      )\n\n    const legend = svg\n      .append('g')\n      .selectAll('.legend')\n      .data(uniqueLegendData)\n      .enter()\n      .append('g')\n      .attr('class', 'legend')\n      .attr('transform', (d, i) => {\n        const height = legendRectSize + legendSpacing\n        const offset = (height * color.domain().length) / 2\n        const horz = radius + 40\n        const vert = i * height - offset\n        return `translate(${horz},${vert})`\n      })\n\n    legend\n      .append('rect')\n      .attr('width', legendRectSize)\n      .attr('height', legendRectSize)\n      .style('fill', (d) => color(d.data.name))\n      .style('stroke', (d) => color(d.data.name))\n\n    legend\n      .append('text')\n      .attr('x', legendRectSize + legendSpacing)\n      .attr('y', legendRectSize - legendSpacing)\n      .text((d) => {\n        let semantic = d.data.name\n        if (d.depth === 2) {\n          // Segundo nível\n          if (semantic.length > 10) {\n            semantic = semantic.substring(0, 10) + '...'\n          }\n        } else {\n          // Primeiro nível\n          semantic = `${semantic} (${d.data.type})`\n        }\n        return semantic\n      })\n  }\n\n  return <div id=\"chart-container\"></div>\n}\n\nexport default MultiLevelPieChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}