{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/WordCloud.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordCloud = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  const containerRef = useRef();\n  console.log('data', data);\n  useEffect(() => {\n    const renderCloud = (containerWidth, containerHeight) => {\n      d3.select(svgRef.current).selectAll('*').remove();\n\n      // Mapear os dados para o formato esperado\n      const words = data.map(word => ({\n        text: word.text,\n        size: word.value\n      }));\n\n      // Definindo parâmetros\n      const fontFamily = 'sans-serif';\n      const fontScale = 10; // Ajustando a escala\n      const fill = '#000';\n      const maxFontSize = 40; // Tamanho máximo da fonte\n\n      const cloud = d3Cloud().size([containerWidth, containerHeight]).words(words).padding(5).rotate(() => 0).font(fontFamily).fontSize(d => Math.min(Math.sqrt(d.size) * fontScale, maxFontSize)) // Limita o tamanho máximo da fonte\n      .on('end', draw);\n      cloud.start();\n      function draw(words) {\n        const svg = d3.select(svgRef.current);\n        svg.attr('viewBox', [0, 0, containerWidth, containerHeight]).attr('width', containerWidth).attr('height', containerHeight).attr('font-family', fontFamily).attr('text-anchor', 'middle').selectAll('text').data(words).enter().append('text').attr('font-size', d => d.size).attr('fill', fill).attr('transform', d => `translate(${d.x + containerWidth / 2},${d.y + containerHeight / 2})`).text(d => d.text).on('mouseover', function (event, d) {\n          const format = d3.format(',d');\n          const hierarchyPath = d.ancestors().map(d => d.data.name).reverse().join(' > ');\n          tooltip.html(`Hierarchy: ${hierarchyPath}<br/>Time: ${format(d.value)} seconds`).style('opacity', 1).style('visibility', 'visible').style('position', 'fixed').style('z-index', '9999');\n        }).on('mousemove', event => {\n          d3.select(tooltipRef.current).style('left', `${event.pageX + 10}px`).style('top', `${event.pageY - 30}px`);\n        }).on('mouseout', () => {\n          d3.select(tooltipRef.current).style('opacity', 0);\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        renderCloud(width, height);\n      }\n    });\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n    if (containerRef.current) {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      renderCloud(width, height);\n    }\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(WordCloud, \"3KSnylFmZ5aNNvVrAf34KpLSSw8=\");\n_c = WordCloud;\nexport default WordCloud;\nvar _c;\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"names":["React","useEffect","useRef","d3","d3Cloud","jsxDEV","_jsxDEV","WordCloud","data","_s","svgRef","containerRef","console","log","renderCloud","containerWidth","containerHeight","select","current","selectAll","remove","words","map","word","text","size","value","fontFamily","fontScale","fill","maxFontSize","cloud","padding","rotate","font","fontSize","d","Math","min","sqrt","on","draw","start","svg","attr","enter","append","x","y","event","format","hierarchyPath","ancestors","name","reverse","join","tooltip","html","style","tooltipRef","pageX","pageY","resizeObserver","ResizeObserver","entries","entry","width","height","contentRect","observe","getBoundingClientRect","unobserve","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/WordCloud.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport d3Cloud from 'd3-cloud'\n\nconst WordCloud = ({ data }) => {\n  const svgRef = useRef()\n  const containerRef = useRef()\n\n  console.log('data', data)\n  useEffect(() => {\n    const renderCloud = (containerWidth, containerHeight) => {\n      d3.select(svgRef.current).selectAll('*').remove()\n\n      // Mapear os dados para o formato esperado\n      const words = data.map((word) => ({ text: word.text, size: word.value }))\n\n      // Definindo parâmetros\n      const fontFamily = 'sans-serif'\n      const fontScale = 10 // Ajustando a escala\n      const fill = '#000'\n      const maxFontSize = 40 // Tamanho máximo da fonte\n\n      const cloud = d3Cloud()\n        .size([containerWidth, containerHeight])\n        .words(words)\n        .padding(5)\n        .rotate(() => 0)\n        .font(fontFamily)\n        .fontSize((d) => Math.min(Math.sqrt(d.size) * fontScale, maxFontSize)) // Limita o tamanho máximo da fonte\n        .on('end', draw)\n\n      cloud.start()\n\n      function draw(words) {\n        const svg = d3.select(svgRef.current)\n\n        svg\n          .attr('viewBox', [0, 0, containerWidth, containerHeight])\n          .attr('width', containerWidth)\n          .attr('height', containerHeight)\n          .attr('font-family', fontFamily)\n          .attr('text-anchor', 'middle')\n          .selectAll('text')\n          .data(words)\n          .enter()\n          .append('text')\n          .attr('font-size', (d) => d.size)\n          .attr('fill', fill)\n          .attr(\n            'transform',\n            (d) =>\n              `translate(${d.x + containerWidth / 2},${d.y + containerHeight / 2})`\n          )\n          .text((d) => d.text)\n          .on('mouseover', function (event, d) {\n            const format = d3.format(',d')\n            const hierarchyPath = d\n              .ancestors()\n              .map((d) => d.data.name)\n              .reverse()\n              .join(' > ')\n\n            tooltip\n              .html(\n                `Hierarchy: ${hierarchyPath}<br/>Time: ${format(d.value)} seconds`\n              )\n              .style('opacity', 1)\n              .style('visibility', 'visible')\n              .style('position', 'fixed')\n              .style('z-index', '9999')\n          })\n          .on('mousemove', (event) => {\n            d3.select(tooltipRef.current)\n              .style('left', `${event.pageX + 10}px`)\n              .style('top', `${event.pageY - 30}px`)\n          })\n          .on('mouseout', () => {\n            d3.select(tooltipRef.current).style('opacity', 0)\n          })\n      }\n    }\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect\n        renderCloud(width, height)\n      }\n    })\n\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current)\n    }\n\n    if (containerRef.current) {\n      const { width, height } = containerRef.current.getBoundingClientRect()\n      renderCloud(width, height)\n    }\n\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current)\n      }\n    }\n  }, [data])\n\n  return (\n    <div ref={containerRef} style={{ width: '100%', height: '100%' }}>\n      <svg ref={svgRef} style={{ width: '100%', height: '100%' }} />\n    </div>\n  )\n}\n\nexport default WordCloud\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}