{"ast":null,"code":"const transformDataToErrorPieChart = data => {\n  const outputCounts = {};\n  for (const userId in data) {\n    const events = data[userId];\n    events.forEach(event => {\n      if (event.Type === 'ERROR') {\n        const eventName = event.Semantic.RESULT;\n        const eventType = event.EventType;\n        if (!outputCounts[eventType]) {\n          outputCounts[eventType] = {\n            name: eventType,\n            type: event.Type,\n            children: []\n          };\n        }\n        const existingChild = outputCounts[eventType].children.find(child => child.name === eventName);\n        if (existingChild) {\n          existingChild.value += 1;\n        } else {\n          outputCounts[eventType].children.push({\n            name: eventName,\n            value: 1\n          });\n        }\n      }\n    });\n  }\n  return {\n    children: Object.values(outputCounts)\n  };\n};\nexport default transformDataToErrorPieChart;","map":{"version":3,"names":["transformDataToErrorPieChart","data","outputCounts","userId","events","forEach","event","Type","eventName","Semantic","RESULT","eventType","EventType","name","type","children","existingChild","find","child","value","push","Object","values"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/TransformDate/transformDataToErrorPieChart.js"],"sourcesContent":["const transformDataToErrorPieChart = (data) => {\n  const outputCounts = {}\n\n  for (const userId in data) {\n    const events = data[userId]\n\n    events.forEach((event) => {\n      if (event.Type === 'ERROR') {\n        const eventName = event.Semantic.RESULT\n        const eventType = event.EventType\n\n        if (!outputCounts[eventType]) {\n          outputCounts[eventType] = {\n            name: eventType,\n            type: event.Type,\n            children: [],\n          }\n        }\n\n        const existingChild = outputCounts[eventType].children.find(\n          (child) => child.name === eventName\n        )\n\n        if (existingChild) {\n          existingChild.value += 1\n        } else {\n          outputCounts[eventType].children.push({\n            name: eventName,\n            value: 1,\n          })\n        }\n      }\n    })\n  }\n\n  return {\n    children: Object.values(outputCounts),\n  }\n}\n\nexport default transformDataToErrorPieChart\n"],"mappings":"AAAA,MAAMA,4BAA4B,GAAIC,IAAI,IAAK;EAC7C,MAAMC,YAAY,GAAG,CAAC,CAAC;EAEvB,KAAK,MAAMC,MAAM,IAAIF,IAAI,EAAE;IACzB,MAAMG,MAAM,GAAGH,IAAI,CAACE,MAAM,CAAC;IAE3BC,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;MACxB,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;QAC1B,MAAMC,SAAS,GAAGF,KAAK,CAACG,QAAQ,CAACC,MAAM;QACvC,MAAMC,SAAS,GAAGL,KAAK,CAACM,SAAS;QAEjC,IAAI,CAACV,YAAY,CAACS,SAAS,CAAC,EAAE;UAC5BT,YAAY,CAACS,SAAS,CAAC,GAAG;YACxBE,IAAI,EAAEF,SAAS;YACfG,IAAI,EAAER,KAAK,CAACC,IAAI;YAChBQ,QAAQ,EAAE;UACZ,CAAC;QACH;QAEA,MAAMC,aAAa,GAAGd,YAAY,CAACS,SAAS,CAAC,CAACI,QAAQ,CAACE,IAAI,CACxDC,KAAK,IAAKA,KAAK,CAACL,IAAI,KAAKL,SAC5B,CAAC;QAED,IAAIQ,aAAa,EAAE;UACjBA,aAAa,CAACG,KAAK,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLjB,YAAY,CAACS,SAAS,CAAC,CAACI,QAAQ,CAACK,IAAI,CAAC;YACpCP,IAAI,EAAEL,SAAS;YACfW,KAAK,EAAE;UACT,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;EACJ;EAEA,OAAO;IACLJ,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAACpB,YAAY;EACtC,CAAC;AACH,CAAC;AAED,eAAeF,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}