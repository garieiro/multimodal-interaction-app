{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTemplateLiteral;\nfunction sortStarts(a, b) {\n  return (a.range ? a.range[0] : a.start) - (b.range ? b.range[0] : b.start);\n}\n\n/**\n * Returns the string value of a template literal object.\n * Tries to build it as best as it can based on the passed\n * prop. For instance `This is a ${prop}` will return 'This is a {prop}'.\n *\n * If the template literal builds to undefined (`${undefined}`), then\n * this should return \"undefined\".\n */\nfunction extractValueFromTemplateLiteral(value) {\n  var quasis = value.quasis,\n    expressions = value.expressions;\n  var partitions = quasis.concat(expressions);\n  return partitions.sort(sortStarts).map(function (_ref) {\n    var type = _ref.type,\n      _ref$value = _ref.value;\n    _ref$value = _ref$value === undefined ? {} : _ref$value;\n    var raw = _ref$value.raw,\n      name = _ref.name;\n    if (type === 'TemplateElement') {\n      return raw;\n    }\n    if (type === 'Identifier') {\n      return name === 'undefined' ? name : '{' + name + '}';\n    }\n    if (type.indexOf('Expression') > -1) {\n      return '{' + type + '}';\n    }\n    return '';\n  }).join('');\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromTemplateLiteral","sortStarts","a","b","range","start","quasis","expressions","partitions","concat","sort","map","_ref","type","_ref$value","undefined","raw","name","indexOf","join"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/node_modules/jsx-ast-utils/lib/values/expressions/TemplateLiteral.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTemplateLiteral;\nfunction sortStarts(a, b) {\n  return (a.range ? a.range[0] : a.start) - (b.range ? b.range[0] : b.start);\n}\n\n/**\n * Returns the string value of a template literal object.\n * Tries to build it as best as it can based on the passed\n * prop. For instance `This is a ${prop}` will return 'This is a {prop}'.\n *\n * If the template literal builds to undefined (`${undefined}`), then\n * this should return \"undefined\".\n */\nfunction extractValueFromTemplateLiteral(value) {\n  var quasis = value.quasis,\n      expressions = value.expressions;\n\n  var partitions = quasis.concat(expressions);\n\n  return partitions.sort(sortStarts).map(function (_ref) {\n    var type = _ref.type,\n        _ref$value = _ref.value;\n    _ref$value = _ref$value === undefined ? {} : _ref$value;\n    var raw = _ref$value.raw,\n        name = _ref.name;\n\n    if (type === 'TemplateElement') {\n      return raw;\n    }\n\n    if (type === 'Identifier') {\n      return name === 'undefined' ? name : '{' + name + '}';\n    }\n\n    if (type.indexOf('Expression') > -1) {\n      return '{' + type + '}';\n    }\n\n    return '';\n  }).join('');\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,+BAA+B;AACjD,SAASC,UAAUA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,OAAO,CAACD,CAAC,CAACE,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,KAAKF,CAAC,CAACC,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGD,CAAC,CAACE,KAAK,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,+BAA+BA,CAACF,KAAK,EAAE;EAC9C,IAAIQ,MAAM,GAAGR,KAAK,CAACQ,MAAM;IACrBC,WAAW,GAAGT,KAAK,CAACS,WAAW;EAEnC,IAAIC,UAAU,GAAGF,MAAM,CAACG,MAAM,CAACF,WAAW,CAAC;EAE3C,OAAOC,UAAU,CAACE,IAAI,CAACT,UAAU,CAAC,CAACU,GAAG,CAAC,UAAUC,IAAI,EAAE;IACrD,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;MAChBC,UAAU,GAAGF,IAAI,CAACd,KAAK;IAC3BgB,UAAU,GAAGA,UAAU,KAAKC,SAAS,GAAG,CAAC,CAAC,GAAGD,UAAU;IACvD,IAAIE,GAAG,GAAGF,UAAU,CAACE,GAAG;MACpBC,IAAI,GAAGL,IAAI,CAACK,IAAI;IAEpB,IAAIJ,IAAI,KAAK,iBAAiB,EAAE;MAC9B,OAAOG,GAAG;IACZ;IAEA,IAAIH,IAAI,KAAK,YAAY,EAAE;MACzB,OAAOI,IAAI,KAAK,WAAW,GAAGA,IAAI,GAAG,GAAG,GAAGA,IAAI,GAAG,GAAG;IACvD;IAEA,IAAIJ,IAAI,CAACK,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;MACnC,OAAO,GAAG,GAAGL,IAAI,GAAG,GAAG;IACzB;IAEA,OAAO,EAAE;EACX,CAAC,CAAC,CAACM,IAAI,CAAC,EAAE,CAAC;AACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}