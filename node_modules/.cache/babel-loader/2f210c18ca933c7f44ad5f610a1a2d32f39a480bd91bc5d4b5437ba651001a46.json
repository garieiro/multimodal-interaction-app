{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport ReadDataset from './ReadDataset';\nimport ChartComponent from './ChartComponent';\nimport OverviewPage from '../staticData/OverviewPage'; // Suponha que você tenha um componente de gráfico separado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChooseDataset = ({\n  title\n}) => {\n  _s();\n  const {\n    dataLoaded,\n    datasetData\n  } = ReadDataset();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    // Atualiza os dados do gráfico somente se datasetData for válido\n    if (datasetData && datasetData.length > 0) {\n      setChartData(datasetData);\n    } else {\n      setChartData([]); // Limpa ou redefine os dados do gráfico\n    }\n  }, [datasetData]);\n  const handleSelect = eventKey => {\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        console.log('File set:', data);\n      } else {\n        console.error('Error setting file:', data.message);\n      }\n    }).catch(error => {\n      console.error('Error setting file:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      className: 'custom-navbar',\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"navbar-dark-example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"navbar-dark-example\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ms-auto\",\n            children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n              id: \"nav-dropdown-dark-example\",\n              title: \"Choose a Dataset\",\n              onSelect: handleSelect,\n              children: dataLoaded && datasetData.map((file, index) => /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                eventKey: file,\n                children: file\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverviewPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChooseDataset, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = ChooseDataset;\nexport default ChooseDataset;\nvar _c;\n$RefreshReg$(_c, \"ChooseDataset\");","map":{"version":3,"names":["React","useState","useEffect","Container","Nav","Navbar","NavDropdown","ReadDataset","ChartComponent","OverviewPage","jsxDEV","_jsxDEV","ChooseDataset","title","_s","dataLoaded","datasetData","chartData","setChartData","length","handleSelect","eventKey","fetch","then","response","json","data","status","console","log","error","message","catch","children","expand","className","fluid","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","onSelect","map","file","index","Item","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport ReadDataset from './ReadDataset'\nimport ChartComponent from './ChartComponent'\nimport OverviewPage from '../staticData/OverviewPage' // Suponha que você tenha um componente de gráfico separado\n\nconst ChooseDataset = ({ title }) => {\n  const { dataLoaded, datasetData } = ReadDataset()\n  const [chartData, setChartData] = useState([])\n\n  useEffect(() => {\n    // Atualiza os dados do gráfico somente se datasetData for válido\n    if (datasetData && datasetData.length > 0) {\n      setChartData(datasetData)\n    } else {\n      setChartData([]) // Limpa ou redefine os dados do gráfico\n    }\n  }, [datasetData])\n\n  const handleSelect = (eventKey) => {\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === 'success') {\n          console.log('File set:', data)\n        } else {\n          console.error('Error setting file:', data.message)\n        }\n      })\n      .catch((error) => {\n        console.error('Error setting file:', error)\n      })\n  }\n\n  return (\n    <div>\n      <Navbar expand=\"lg\" className={'custom-navbar'}>\n        <Container fluid>\n          <Navbar.Brand href=\"#home\">{title}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n          <Navbar.Collapse id=\"navbar-dark-example\">\n            <Nav className=\"ms-auto\">\n              <NavDropdown\n                id=\"nav-dropdown-dark-example\"\n                title=\"Choose a Dataset\"\n                onSelect={handleSelect}\n              >\n                {dataLoaded &&\n                  datasetData.map((file, index) => (\n                    <NavDropdown.Item key={index} eventKey={file}>\n                      {file}\n                    </NavDropdown.Item>\n                  ))}\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* Renderiza o componente de gráfico com os dados do estado chartData */}\n      <OverviewPage />\n    </div>\n  )\n}\n\nexport default ChooseDataset\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}