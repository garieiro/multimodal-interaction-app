{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    const generateChart = data => {\n      if (!data || data.length === 0) {\n        console.error('No data available to generate the chart.');\n        return;\n      }\n      const width = 928;\n      const height = 500;\n      const marginTop = 10;\n      const marginRight = 10;\n      const marginBottom = 20;\n      const marginLeft = 40;\n\n      // Agrupar os dados pelo \"name\"\n      const groupedData = d3.group(data, d => d.name);\n      if (!groupedData || groupedData.size === 0) {\n        console.error('Grouped data is undefined or empty.');\n        return;\n      }\n\n      // Extrair os tipos únicos (INPUT, OUTPUT) do data\n      const allTypes = Array.from(d3.union(data.map(d => d.type)));\n      if (!allTypes || allTypes.length === 0) {\n        console.error(\"No valid 'type' found in data.\");\n        return;\n      }\n\n      // Criar as séries empilhadas\n      const series = d3.stack().keys(allTypes) // Chaves são os tipos: INPUT, OUTPUT\n      .value((data, key) => {\n        const item = data.find(d => d.type === key);\n        return item ? item.count : 0;\n      })(d3.groups(data, d => d.name)); // Agrupar por 'name'\n\n      if (!series || series.length === 0) {\n        console.error('Series data is undefined or empty.');\n        return;\n      }\n\n      // Eixos X e Y\n      const x = d3.scaleBand().domain([...groupedData.keys()]).range([marginLeft, width - marginRight]).padding(0.1);\n      const y = d3.scaleLinear().domain([0, d3.max(series, d => d3.max(d, d => d[1]))]).rangeRound([height - marginBottom, marginTop]);\n      const color = d3.scaleOrdinal().domain(allTypes) // Usar todos os tipos como domínio\n      .range(d3.schemeSpectral[allTypes.length]).unknown('#ccc');\n\n      // Criar o SVG\n      const svg = d3.create('svg').attr('width', width).attr('height', height).attr('viewBox', [0, 0, width, height]).attr('style', 'max-width: 100%; height: auto;');\n\n      // Adicionar barras empilhadas\n      svg.append('g').selectAll('g').data(series).join('g').attr('fill', d => color(d.key)).selectAll('rect').data(d => d).join('rect').attr('x', d => x(d.data[0])).attr('y', d => y(d[1])).attr('height', d => y(d[0]) - y(d[1])).attr('width', x.bandwidth()).append('title').text(d => `User: ${d.data[0]}\\nType: ${d.data[1].type}\\nCount: ${d[1] - d[0]}`);\n\n      // Adicionar eixos\n      svg.append('g').attr('transform', `translate(0,${height - marginBottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).call(g => g.selectAll('.domain').remove());\n      svg.append('g').attr('transform', `translate(${marginLeft},0)`).call(d3.axisLeft(y).ticks(null, 's')).call(g => g.selectAll('.domain').remove());\n      return svg.node();\n    };\n    if (data && data.length > 0) {\n      d3.select(ref.current).selectAll('*').remove();\n      console.log('Data:', data);\n      const svg = generateChart(data);\n      ref.current.appendChild(svg);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n_s(StackedBarChart, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","StackedBarChart","data","_s","ref","generateChart","length","console","error","width","height","marginTop","marginRight","marginBottom","marginLeft","groupedData","group","d","name","size","allTypes","Array","from","union","map","type","series","stack","keys","value","key","item","find","count","groups","x","scaleBand","domain","range","padding","y","scaleLinear","max","rangeRound","color","scaleOrdinal","schemeSpectral","unknown","svg","create","attr","append","selectAll","join","bandwidth","text","call","axisBottom","tickSizeOuter","g","remove","axisLeft","ticks","node","select","current","log","appendChild","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst StackedBarChart = ({ data }) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const generateChart = (data) => {\n      if (!data || data.length === 0) {\n        console.error('No data available to generate the chart.')\n        return\n      }\n\n      const width = 928\n      const height = 500\n      const marginTop = 10\n      const marginRight = 10\n      const marginBottom = 20\n      const marginLeft = 40\n\n      // Agrupar os dados pelo \"name\"\n      const groupedData = d3.group(data, (d) => d.name)\n      if (!groupedData || groupedData.size === 0) {\n        console.error('Grouped data is undefined or empty.')\n        return\n      }\n\n      // Extrair os tipos únicos (INPUT, OUTPUT) do data\n      const allTypes = Array.from(d3.union(data.map((d) => d.type)))\n      if (!allTypes || allTypes.length === 0) {\n        console.error(\"No valid 'type' found in data.\")\n        return\n      }\n\n      // Criar as séries empilhadas\n      const series = d3\n        .stack()\n        .keys(allTypes) // Chaves são os tipos: INPUT, OUTPUT\n        .value((data, key) => {\n          const item = data.find((d) => d.type === key)\n          return item ? item.count : 0\n        })(d3.groups(data, (d) => d.name)) // Agrupar por 'name'\n\n      if (!series || series.length === 0) {\n        console.error('Series data is undefined or empty.')\n        return\n      }\n\n      // Eixos X e Y\n      const x = d3\n        .scaleBand()\n        .domain([...groupedData.keys()])\n        .range([marginLeft, width - marginRight])\n        .padding(0.1)\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, d3.max(series, (d) => d3.max(d, (d) => d[1]))])\n        .rangeRound([height - marginBottom, marginTop])\n\n      const color = d3\n        .scaleOrdinal()\n        .domain(allTypes) // Usar todos os tipos como domínio\n        .range(d3.schemeSpectral[allTypes.length])\n        .unknown('#ccc')\n\n      // Criar o SVG\n      const svg = d3\n        .create('svg')\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', [0, 0, width, height])\n        .attr('style', 'max-width: 100%; height: auto;')\n\n      // Adicionar barras empilhadas\n      svg\n        .append('g')\n        .selectAll('g')\n        .data(series)\n        .join('g')\n        .attr('fill', (d) => color(d.key))\n        .selectAll('rect')\n        .data((d) => d)\n        .join('rect')\n        .attr('x', (d) => x(d.data[0]))\n        .attr('y', (d) => y(d[1]))\n        .attr('height', (d) => y(d[0]) - y(d[1]))\n        .attr('width', x.bandwidth())\n        .append('title')\n        .text(\n          (d) =>\n            `User: ${d.data[0]}\\nType: ${d.data[1].type}\\nCount: ${d[1] - d[0]}`\n        )\n\n      // Adicionar eixos\n      svg\n        .append('g')\n        .attr('transform', `translate(0,${height - marginBottom})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0))\n        .call((g) => g.selectAll('.domain').remove())\n\n      svg\n        .append('g')\n        .attr('transform', `translate(${marginLeft},0)`)\n        .call(d3.axisLeft(y).ticks(null, 's'))\n        .call((g) => g.selectAll('.domain').remove())\n\n      return svg.node()\n    }\n\n    if (data && data.length > 0) {\n      d3.select(ref.current).selectAll('*').remove()\n      console.log('Data:', data)\n      const svg = generateChart(data)\n      ref.current.appendChild(svg)\n    }\n  }, [data])\n\n  return <div ref={ref}></div>\n}\n\nexport default StackedBarChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}