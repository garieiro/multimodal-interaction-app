{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport ReadDataset from './ReadDataset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChooseDataset = ({\n  title\n}) => {\n  _s();\n  const {\n    dataLoaded,\n    datasetData\n  } = ReadDataset();\n  const [selectedFile, setSelectedFile] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [fileContent, setFileContent] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0); // Estado para forçar a atualização dos gráficos\n\n  const handleSelect = eventKey => {\n    setSelectedFile(eventKey);\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        console.log('File set:', data);\n        setErrorMessage('');\n        if (data.content.trim()) {\n          setFileContent(data.content);\n          setRefreshKey(prevKey => prevKey + 1); // Atualiza a chave para forçar a renderização\n        } else {\n          setFileContent(null);\n          setErrorMessage('The selected file is empty.');\n        }\n      } else {\n        console.error('Error setting file:', data.message);\n        setFileContent(null);\n        setErrorMessage(data.message);\n      }\n    }).catch(error => {\n      console.error('Error setting file:', error);\n      setFileContent(null);\n      setErrorMessage('An error occurred while setting the file.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      className: 'custom-navbar',\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"navbar-dark-example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"navbar-dark-example\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ms-auto\",\n            children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n              id: \"nav-dropdown-dark-example\",\n              title: \"Choose a Dataset\",\n              onSelect: handleSelect,\n              children: dataLoaded && datasetData.map((file, index) => /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                eventKey: file,\n                children: file\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), fileContent && /*#__PURE__*/_jsxDEV(\"div\", {}, refreshKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChooseDataset, \"4wZtrFQz6T7+Ibv6CU7ojXqdef8=\");\n_c = ChooseDataset;\nexport default ChooseDataset;\nvar _c;\n$RefreshReg$(_c, \"ChooseDataset\");","map":{"version":3,"names":["React","useState","useEffect","Container","Nav","Navbar","NavDropdown","ReadDataset","jsxDEV","_jsxDEV","ChooseDataset","title","_s","dataLoaded","datasetData","selectedFile","setSelectedFile","errorMessage","setErrorMessage","fileContent","setFileContent","refreshKey","setRefreshKey","handleSelect","eventKey","fetch","then","response","json","data","status","console","log","content","trim","prevKey","error","message","catch","children","expand","className","fluid","Brand","href","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","onSelect","map","file","index","Item","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction/src/components/chooseDataset/ChooseDataset.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport ReadDataset from './ReadDataset'\n\nconst ChooseDataset = ({ title }) => {\n  const { dataLoaded, datasetData } = ReadDataset()\n  const [selectedFile, setSelectedFile] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [fileContent, setFileContent] = useState(null)\n  const [refreshKey, setRefreshKey] = useState(0) // Estado para forçar a atualização dos gráficos\n\n  const handleSelect = (eventKey) => {\n    setSelectedFile(eventKey)\n    fetch(`http://127.0.0.1:5000/select-file?file_name=${eventKey}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === 'success') {\n          console.log('File set:', data)\n          setErrorMessage('')\n          if (data.content.trim()) {\n            setFileContent(data.content)\n            setRefreshKey((prevKey) => prevKey + 1) // Atualiza a chave para forçar a renderização\n          } else {\n            setFileContent(null)\n            setErrorMessage('The selected file is empty.')\n          }\n        } else {\n          console.error('Error setting file:', data.message)\n          setFileContent(null)\n          setErrorMessage(data.message)\n        }\n      })\n      .catch((error) => {\n        console.error('Error setting file:', error)\n        setFileContent(null)\n        setErrorMessage('An error occurred while setting the file.')\n      })\n  }\n\n  return (\n    <div>\n      <Navbar expand=\"lg\" className={'custom-navbar'}>\n        <Container fluid>\n          <Navbar.Brand href=\"#home\">{title}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n          <Navbar.Collapse id=\"navbar-dark-example\">\n            <Nav className=\"ms-auto\">\n              <NavDropdown\n                id=\"nav-dropdown-dark-example\"\n                title=\"Choose a Dataset\"\n                onSelect={handleSelect}\n              >\n                {dataLoaded &&\n                  datasetData.map((file, index) => (\n                    <NavDropdown.Item key={index} eventKey={file}>\n                      {file}\n                    </NavDropdown.Item>\n                  ))}\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n      {fileContent && (\n        <div key={refreshKey}>\n          {/* Render your charts here based on the file content */}\n          {/* O valor de `refreshKey` fará com que esse div se atualize sempre que mudar */}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ChooseDataset\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}