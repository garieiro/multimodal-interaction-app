{"ast":null,"code":"// Endpoints já verificados\n\nexport const fetchStaticAllFilesFromAPI = async dataset => {\n  try {\n    const url = dataset ? `http://127.0.0.1:5000/files?dataset=${dataset}` : 'http://127.0.0.1:5000/files';\n    const response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching All files', error);\n    throw error;\n  }\n};\nexport const fetchStaticFilteredDataFromAPI = async (dataset, users) => {\n  try {\n    const response = await fetch(`http://127.0.0.1:5000/submit?dataset=${dataset}&users=${users}`);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching Filtered data:', error);\n  }\n};\n\n// Fim da lista\n\nexport const fetchStaticPiesFromAPI = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/events/pie-chart');\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error);\n  }\n};\nexport const fetchStaticPies2FromAPI = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/events/type-semantic');\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error);\n  }\n};\nexport const fetchStaticTimeLineFromAPI = async (experienceId = null) => {\n  try {\n    const url = experienceId ? `http://127.0.0.1:5000/events/times?exp_id=${experienceId}` : 'http://127.0.0.1:5000/events/times';\n    const response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error);\n  }\n};","map":{"version":3,"names":["fetchStaticAllFilesFromAPI","dataset","url","response","fetch","json","error","console","fetchStaticFilteredDataFromAPI","users","fetchStaticPiesFromAPI","fetchStaticPies2FromAPI","fetchStaticTimeLineFromAPI","experienceId"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/api/StaticData.js"],"sourcesContent":["// Endpoints já verificados\n\nexport const fetchStaticAllFilesFromAPI = async (dataset) => {\n  try {\n    const url = dataset\n      ? `http://127.0.0.1:5000/files?dataset=${dataset}`\n      : 'http://127.0.0.1:5000/files'\n    const response = await fetch(url)\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching All files', error)\n    throw error\n  }\n}\n\nexport const fetchStaticFilteredDataFromAPI = async (dataset, users) => {\n  try {\n    const response = await fetch(\n      `http://127.0.0.1:5000/submit?dataset=${dataset}&users=${users}`\n    )\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching Filtered data:', error)\n  }\n}\n\n// Fim da lista\n\nexport const fetchStaticPiesFromAPI = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/events/pie-chart')\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error)\n  }\n}\n\nexport const fetchStaticPies2FromAPI = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/events/type-semantic')\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error)\n  }\n}\n\nexport const fetchStaticTimeLineFromAPI = async (experienceId = null) => {\n  try {\n    const url = experienceId\n      ? `http://127.0.0.1:5000/events/times?exp_id=${experienceId}`\n      : 'http://127.0.0.1:5000/events/times'\n\n    const response = await fetch(url)\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching Count Experiences:', error)\n  }\n}\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,0BAA0B,GAAG,MAAOC,OAAO,IAAK;EAC3D,IAAI;IACF,MAAMC,GAAG,GAAGD,OAAO,GACf,uCAAuCA,OAAO,EAAE,GAChD,6BAA6B;IACjC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,8BAA8B,GAAG,MAAAA,CAAOP,OAAO,EAAEQ,KAAK,KAAK;EACtE,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wCAAwCH,OAAO,UAAUQ,KAAK,EAChE,CAAC;IACD,OAAO,MAAMN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMI,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;IACtE,OAAO,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;AACF,CAAC;AAED,OAAO,MAAMK,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EACjD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAC1E,OAAO,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;AACF,CAAC;AAED,OAAO,MAAMM,0BAA0B,GAAG,MAAAA,CAAOC,YAAY,GAAG,IAAI,KAAK;EACvE,IAAI;IACF,MAAMX,GAAG,GAAGW,YAAY,GACpB,6CAA6CA,YAAY,EAAE,GAC3D,oCAAoC;IAExC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}