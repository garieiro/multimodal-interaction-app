{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/charts/RealTimeScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeScatterPlot = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data) return;\n\n    // Configuração do SVG e margens\n    const margin = {\n      top: 40,\n      right: 40,\n      bottom: 40,\n      left: 40\n    };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n    // Convertendo os dados para o formato esperado pelo ScatterPlot\n    const convertedData = Object.entries(data).map(([eventType, duration]) => ({\n      x: eventType,\n      y: duration\n    }));\n\n    // Escalas com margens\n    const xScale = d3.scaleBand().domain(convertedData.map(d => d.x)).range([margin.left, innerWidth + margin.left]).padding(0.1);\n    const yScale = d3.scaleLinear().domain([0, d3.max(convertedData, d => d.y)]).range([innerHeight + margin.top, margin.top]);\n\n    // Desenho dos pontos\n    svg.selectAll('circle').data(convertedData).join('circle').attr('cx', d => xScale(d.x) + xScale.bandwidth() / 2).attr('cy', d => yScale(d.y)).attr('r', 5).attr('fill', 'steelblue');\n\n    // Adição dos eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append('g').attr('transform', `translate(0, ${innerHeight + margin.top})`).call(xAxis);\n    svg.append('g').attr('transform', `translate(${margin.left}, 0)`).call(yAxis);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(RealTimeScatterPlot, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = RealTimeScatterPlot;\nexport default RealTimeScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"RealTimeScatterPlot\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","RealTimeScatterPlot","data","_s","svgRef","margin","top","right","bottom","left","width","height","innerWidth","innerHeight","svg","select","current","attr","convertedData","Object","entries","map","eventType","duration","x","y","xScale","scaleBand","domain","d","range","padding","yScale","scaleLinear","max","selectAll","join","bandwidth","xAxis","axisBottom","yAxis","axisLeft","ticks","append","call","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/components/realTimeData/charts/RealTimeScatterPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst RealTimeScatterPlot = ({ data }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data) return;\n\n    // Configuração do SVG e margens\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 };\n    const width = 600;\n    const height = 300;\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Definição do SVG com margens\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    // Convertendo os dados para o formato esperado pelo ScatterPlot\n    const convertedData = Object.entries(data).map(([eventType, duration]) => ({\n      x: eventType,\n      y: duration\n    }));\n\n    // Escalas com margens\n    const xScale = d3\n      .scaleBand()\n      .domain(convertedData.map((d) => d.x))\n      .range([margin.left, innerWidth + margin.left])\n      .padding(0.1);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(convertedData, (d) => d.y)])\n      .range([innerHeight + margin.top, margin.top]);\n\n    // Desenho dos pontos\n    svg\n      .selectAll('circle')\n      .data(convertedData)\n      .join('circle')\n      .attr('cx', (d) => xScale(d.x) + xScale.bandwidth() / 2)\n      .attr('cy', (d) => yScale(d.y))\n      .attr('r', 5)\n      .attr('fill', 'steelblue');\n\n    // Adição dos eixos\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n\n    svg\n      .append('g')\n      .attr('transform', `translate(0, ${innerHeight + margin.top})`)\n      .call(xAxis);\n\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(yAxis);\n  }, [data]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default RealTimeScatterPlot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}