{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/BoxPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxPlot = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    d3.select(svgRef.current).selectAll('*').remove();\n    if (!data || data.length === 0) {\n      return;\n    }\n    const width = 928;\n    const height = 600;\n    const marginTop = 20;\n    const marginRight = 20;\n    const marginBottom = 30;\n    const marginLeft = 40;\n\n    // Bin the data and derive the values (inter-quartile range, outliers…) for each bin.\n    const n = width / 40;\n    const bins = d3.bin().thresholds(n).value(d => d.carat)(data).map(bin => {\n      bin.sort((a, b) => a.values - b.values);\n      const values = bin.map(d => d.values);\n      const min = values[0];\n      const max = values[values.length - 1];\n      const q1 = d3.quantile(values, 0.25);\n      const q2 = d3.quantile(values, 0.5);\n      const q3 = d3.quantile(values, 0.75);\n      const iqr = q3 - q1; // interquartile range\n      const r0 = Math.max(min, q1 - iqr * 1.5);\n      const r1 = Math.min(max, q3 + iqr * 1.5);\n      bin.quartiles = [q1, q2, q3];\n      bin.range = [r0, r1];\n      bin.outliers = bin.filter(v => v.price < r0 || v.price > r1); // TODO\n      return bin;\n    });\n    const boxWidth = 70;\n    const minBoxSpacing = 30;\n    const totalWidth = (boxWidth + minBoxSpacing) * data.length;\n    const minValues = data.map(dataset => d3.min(dataset.values));\n    const maxValues = data.map(dataset => d3.max(dataset.values));\n    const minAll = d3.min(minValues) - 2;\n    const maxAll = d3.max(maxValues) + 2;\n    const y = d3.scaleLinear().domain([minAll, maxAll]).range([height, 0]);\n    const svg = d3.select(svgRef.current).attr('width', '100%').attr('height', '100%').attr('viewBox', `0 0 ${totalWidth + marginLeft + marginRight} ${height + marginTop + marginBottom}`).style('font', '10px sans-serif');\n    const g = svg.append('g').attr('transform', `translate(${marginLeft},${marginTop})`);\n    const datasetWidth = totalWidth / data.length;\n    data.forEach((dataset, index) => {\n      const data_sorted = dataset.values.sort(d3.ascending);\n      const q1 = d3.quantile(data_sorted, 0.25);\n      const median = d3.quantile(data_sorted, 0.5);\n      const q3 = d3.quantile(data_sorted, 0.75);\n      const interQuantileRange = q3 - q1;\n      const min = Math.min(maxAll, q3 + interQuantileRange * 1.5);\n      const max = Math.max(minAll, q1 - interQuantileRange * 1.5);\n      const x = index * datasetWidth + datasetWidth / 2;\n      svg.append('line').attr('x1', x).attr('x2', x).attr('y1', y(min)).attr('y2', y(max)).attr('stroke', 'black');\n      svg.append('rect').attr('x', x - boxWidth / 2).attr('y', y(q3)).attr('height', y(q1) - y(q3)).attr('width', boxWidth).attr('stroke', 'black').style('fill', '#69b3a2');\n      svg.selectAll('line.toto').data([min, median, max]).enter().append('line').attr('x1', x - boxWidth / 2).attr('x2', x + boxWidth / 2).attr('y1', d => y(d)).attr('y2', d => y(d)).attr('stroke', 'black');\n      svg.append('text').attr('x', x).attr('y', height + marginBottom / 2).attr('text-anchor', 'middle').text(dataset.label).style('font-size', '12px').attr('fill', 'black');\n    });\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 10\n  }, this);\n};\n_s(BoxPlot, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = BoxPlot;\nexport default BoxPlot;\nvar _c;\n$RefreshReg$(_c, \"BoxPlot\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","BoxPlot","data","_s","svgRef","select","current","selectAll","remove","length","width","height","marginTop","marginRight","marginBottom","marginLeft","n","bins","bin","thresholds","value","d","carat","map","sort","a","b","values","min","max","q1","quantile","q2","q3","iqr","r0","Math","r1","quartiles","range","outliers","filter","v","price","boxWidth","minBoxSpacing","totalWidth","minValues","dataset","maxValues","minAll","maxAll","y","scaleLinear","domain","svg","attr","style","g","append","datasetWidth","forEach","index","data_sorted","ascending","median","interQuantileRange","x","enter","text","label","call","axisLeft","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/charts/BoxPlot.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nconst BoxPlot = ({ data }) => {\n  const svgRef = useRef()\n\n  useEffect(() => {\n    d3.select(svgRef.current).selectAll('*').remove()\n\n    if (!data || data.length === 0) {\n      return\n    }\n\n    const width = 928\n    const height = 600\n    const marginTop = 20\n    const marginRight = 20\n    const marginBottom = 30\n    const marginLeft = 40\n\n    // Bin the data and derive the values (inter-quartile range, outliers…) for each bin.\n    const n = width / 40\n    const bins = d3\n      .bin()\n      .thresholds(n)\n      .value((d) => d.carat)(data)\n      .map((bin) => {\n        bin.sort((a, b) => a.values - b.values)\n        const values = bin.map((d) => d.values)\n        const min = values[0]\n        const max = values[values.length - 1]\n        const q1 = d3.quantile(values, 0.25)\n        const q2 = d3.quantile(values, 0.5)\n        const q3 = d3.quantile(values, 0.75)\n        const iqr = q3 - q1 // interquartile range\n        const r0 = Math.max(min, q1 - iqr * 1.5)\n        const r1 = Math.min(max, q3 + iqr * 1.5)\n        bin.quartiles = [q1, q2, q3]\n        bin.range = [r0, r1]\n        bin.outliers = bin.filter((v) => v.price < r0 || v.price > r1) // TODO\n        return bin\n      })\n\n    const boxWidth = 70\n    const minBoxSpacing = 30\n    const totalWidth = (boxWidth + minBoxSpacing) * data.length\n\n    const minValues = data.map((dataset) => d3.min(dataset.values))\n    const maxValues = data.map((dataset) => d3.max(dataset.values))\n    const minAll = d3.min(minValues) - 2\n    const maxAll = d3.max(maxValues) + 2\n\n    const y = d3.scaleLinear().domain([minAll, maxAll]).range([height, 0])\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .attr(\n        'viewBox',\n        `0 0 ${totalWidth + marginLeft + marginRight} ${height + marginTop + marginBottom}`\n      )\n      .style('font', '10px sans-serif')\n\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},${marginTop})`)\n\n    const datasetWidth = totalWidth / data.length\n\n    data.forEach((dataset, index) => {\n      const data_sorted = dataset.values.sort(d3.ascending)\n      const q1 = d3.quantile(data_sorted, 0.25)\n      const median = d3.quantile(data_sorted, 0.5)\n      const q3 = d3.quantile(data_sorted, 0.75)\n      const interQuantileRange = q3 - q1\n      const min = Math.min(maxAll, q3 + interQuantileRange * 1.5)\n      const max = Math.max(minAll, q1 - interQuantileRange * 1.5)\n      const x = index * datasetWidth + datasetWidth / 2\n\n      svg\n        .append('line')\n        .attr('x1', x)\n        .attr('x2', x)\n        .attr('y1', y(min))\n        .attr('y2', y(max))\n        .attr('stroke', 'black')\n\n      svg\n        .append('rect')\n        .attr('x', x - boxWidth / 2)\n        .attr('y', y(q3))\n        .attr('height', y(q1) - y(q3))\n        .attr('width', boxWidth)\n        .attr('stroke', 'black')\n        .style('fill', '#69b3a2')\n\n      svg\n        .selectAll('line.toto')\n        .data([min, median, max])\n        .enter()\n        .append('line')\n        .attr('x1', x - boxWidth / 2)\n        .attr('x2', x + boxWidth / 2)\n        .attr('y1', (d) => y(d))\n        .attr('y2', (d) => y(d))\n        .attr('stroke', 'black')\n\n      svg\n        .append('text')\n        .attr('x', x)\n        .attr('y', height + marginBottom / 2)\n        .attr('text-anchor', 'middle')\n        .text(dataset.label)\n        .style('font-size', '12px')\n        .attr('fill', 'black')\n    })\n\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y))\n  }, [data])\n\n  return <svg ref={svgRef} style={{ width: '100%', height: '100%' }} />\n}\n\nexport default BoxPlot\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}