{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchStaticDataFromAPI from './api/StaticData';\nimport './App.css';\nimport BarChart from './components/charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedData = await fetchStaticDataFromAPI();\n        setData(fetchedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Função para contar o número de eventos em cada array de dados\n  const processEventData = dataArray => {\n    const eventCounts = {};\n    const eventDurations = {};\n    dataArray.forEach(events => {\n      events.forEach(event => {\n        const eventType = event.EventType;\n        if (eventType in eventCounts) {\n          eventCounts[eventType]++;\n        } else {\n          eventCounts[eventType] = 1;\n        }\n\n        // Cálculo da duração\n        const timestamp = new Date(event.TimeStamp);\n        if (event.ID in eventDurations) {\n          const duration = timestamp - eventDurations[event.ID].start;\n          eventDurations[event.ID].duration = duration;\n        } else {\n          eventDurations[event.ID] = {\n            start: timestamp\n          };\n        }\n      });\n    });\n    return eventCounts;\n  };\n\n  // Contagem de eventos\n  const eventDataCounts = processEventData(data);\n\n  // Conversão de contagens de eventos em um array de objetos para o gráfico de barras\n  const eventDataForChart = Object.entries(eventDataCounts).map(([eventType, count]) => ({\n    name: eventType,\n    value: count\n  }));\n  console.log('dados do gráfico:', eventDataForChart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: eventDataForChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchStaticDataFromAPI","BarChart","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","fetchedData","error","console","processEventData","dataArray","eventCounts","eventDurations","forEach","events","event","eventType","EventType","timestamp","Date","TimeStamp","ID","duration","start","eventDataCounts","eventDataForChart","Object","entries","map","count","name","value","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetchStaticDataFromAPI from './api/StaticData';\nimport './App.css';\nimport BarChart from './components/charts/BarChart';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedData = await fetchStaticDataFromAPI();\n        setData(fetchedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Função para contar o número de eventos em cada array de dados\n  const processEventData = (dataArray) => {\n    const eventCounts = {};\n    const eventDurations = {};\n\n    dataArray.forEach((events) => {\n      events.forEach((event) => {\n        const eventType = event.EventType;\n        if (eventType in eventCounts) {\n          eventCounts[eventType]++;\n        } else {\n          eventCounts[eventType] = 1;\n        }\n\n        // Cálculo da duração\n      const timestamp = new Date(event.TimeStamp);\n      if (event.ID in eventDurations) {\n        const duration = timestamp - eventDurations[event.ID].start;\n        eventDurations[event.ID].duration = duration;\n      } else {\n        eventDurations[event.ID] = { start: timestamp };\n      }\n      \n      });\n    });\n\n    return eventCounts;\n  };\n\n  // Contagem de eventos\n  const eventDataCounts = processEventData(data);\n\n  // Conversão de contagens de eventos em um array de objetos para o gráfico de barras\n  const eventDataForChart = Object.entries(eventDataCounts).map(([eventType, count]) => ({\n    name: eventType,\n    value: count,\n  }));\n\n  console.log('dados do gráfico:', eventDataForChart);\n\n  return (\n    <div>\n      <h1>Bar Chart</h1>\n      <BarChart data={eventDataForChart} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,sBAAsB,MAAM,kBAAkB;AACrD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMT,sBAAsB,CAAC,CAAC;QAClDO,OAAO,CAACE,WAAW,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,WAAW,GAAG,CAAC,CAAC;IACtB,MAAMC,cAAc,GAAG,CAAC,CAAC;IAEzBF,SAAS,CAACG,OAAO,CAAEC,MAAM,IAAK;MAC5BA,MAAM,CAACD,OAAO,CAAEE,KAAK,IAAK;QACxB,MAAMC,SAAS,GAAGD,KAAK,CAACE,SAAS;QACjC,IAAID,SAAS,IAAIL,WAAW,EAAE;UAC5BA,WAAW,CAACK,SAAS,CAAC,EAAE;QAC1B,CAAC,MAAM;UACLL,WAAW,CAACK,SAAS,CAAC,GAAG,CAAC;QAC5B;;QAEA;QACF,MAAME,SAAS,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAACK,SAAS,CAAC;QAC3C,IAAIL,KAAK,CAACM,EAAE,IAAIT,cAAc,EAAE;UAC9B,MAAMU,QAAQ,GAAGJ,SAAS,GAAGN,cAAc,CAACG,KAAK,CAACM,EAAE,CAAC,CAACE,KAAK;UAC3DX,cAAc,CAACG,KAAK,CAACM,EAAE,CAAC,CAACC,QAAQ,GAAGA,QAAQ;QAC9C,CAAC,MAAM;UACLV,cAAc,CAACG,KAAK,CAACM,EAAE,CAAC,GAAG;YAAEE,KAAK,EAAEL;UAAU,CAAC;QACjD;MAEA,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOP,WAAW;EACpB,CAAC;;EAED;EACA,MAAMa,eAAe,GAAGf,gBAAgB,CAACN,IAAI,CAAC;;EAE9C;EACA,MAAMsB,iBAAiB,GAAGC,MAAM,CAACC,OAAO,CAACH,eAAe,CAAC,CAACI,GAAG,CAAC,CAAC,CAACZ,SAAS,EAAEa,KAAK,CAAC,MAAM;IACrFC,IAAI,EAAEd,SAAS;IACfe,KAAK,EAAEF;EACT,CAAC,CAAC,CAAC;EAEHrB,OAAO,CAACwB,GAAG,CAAC,mBAAmB,EAAEP,iBAAiB,CAAC;EAEnD,oBACEzB,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrC,OAAA,CAACF,QAAQ;MAACK,IAAI,EAAEsB;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACnC,EAAA,CA9DQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}