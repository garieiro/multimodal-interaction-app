{"ast":null,"code":"var _jsxFileName = \"/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/buildCharts/sunBurstChart/StaticSunBurst.js\";\nimport React from 'react';\nimport SunBurst from '../../charts/SunBurst';\n\n// Função para transformar os dados fornecidos em uma hierarquia\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transformDataToHierarchy = data => {\n  const hierarchy = {\n    name: 'Root',\n    children: []\n  };\n  Object.entries(data).forEach(([session, events]) => {\n    const sessionNode = {\n      name: `Session ${session}`,\n      children: []\n    };\n    events.forEach(event => {\n      const eventNode = {\n        name: event.EventType,\n        children: []\n      };\n      Object.entries(event).forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null) {\n          const semanticNode = {\n            name: key,\n            children: Object.entries(value).map(([k, v]) => ({\n              name: k,\n              value: v\n            }))\n          };\n          eventNode.children.push(semanticNode);\n        } else {\n          // Para os outros campos\n          eventNode.children.push({\n            name: key,\n            value: value\n          });\n        }\n      });\n      sessionNode.children.push(eventNode);\n    });\n    hierarchy.children.push(sessionNode);\n  });\n  return hierarchy;\n};\nconst StaticSunBurst = ({\n  data\n}) => {\n  const transformedData = transformDataToHierarchy(data);\n  console.log('SunburstData:', transformedData);\n  return /*#__PURE__*/_jsxDEV(SunBurst, {\n    data: transformedData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_c = StaticSunBurst;\nexport default StaticSunBurst;\nvar _c;\n$RefreshReg$(_c, \"StaticSunBurst\");","map":{"version":3,"names":["React","SunBurst","jsxDEV","_jsxDEV","transformDataToHierarchy","data","hierarchy","name","children","Object","entries","forEach","session","events","sessionNode","event","eventNode","EventType","key","value","semanticNode","map","k","v","push","StaticSunBurst","transformedData","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/src/components/buildCharts/sunBurstChart/StaticSunBurst.js"],"sourcesContent":["import React from 'react'\nimport SunBurst from '../../charts/SunBurst'\n\n// Função para transformar os dados fornecidos em uma hierarquia\nconst transformDataToHierarchy = (data) => {\n  const hierarchy = {\n    name: 'Root',\n    children: [],\n  }\n\n  Object.entries(data).forEach(([session, events]) => {\n    const sessionNode = {\n      name: `Session ${session}`,\n      children: [],\n    }\n\n    events.forEach((event) => {\n      const eventNode = {\n        name: event.EventType,\n        children: [],\n      }\n\n      Object.entries(event).forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null) {\n          const semanticNode = {\n            name: key,\n            children: Object.entries(value).map(([k, v]) => ({\n              name: k,\n              value: v,\n            })),\n          }\n          eventNode.children.push(semanticNode)\n        } else {\n          // Para os outros campos\n          eventNode.children.push({\n            name: key,\n            value: value,\n          })\n        }\n      })\n\n      sessionNode.children.push(eventNode)\n    })\n\n    hierarchy.children.push(sessionNode)\n  })\n\n  return hierarchy\n}\n\nconst StaticSunBurst = ({ data }) => {\n  const transformedData = transformDataToHierarchy(data)\n  console.log('SunburstData:', transformedData)\n  return <SunBurst data={transformedData} />\n}\n\nexport default StaticSunBurst\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,wBAAwB,GAAIC,IAAI,IAAK;EACzC,MAAMC,SAAS,GAAG;IAChBC,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EAEDC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,OAAO,EAAEC,MAAM,CAAC,KAAK;IAClD,MAAMC,WAAW,GAAG;MAClBP,IAAI,EAAE,WAAWK,OAAO,EAAE;MAC1BJ,QAAQ,EAAE;IACZ,CAAC;IAEDK,MAAM,CAACF,OAAO,CAAEI,KAAK,IAAK;MACxB,MAAMC,SAAS,GAAG;QAChBT,IAAI,EAAEQ,KAAK,CAACE,SAAS;QACrBT,QAAQ,EAAE;MACZ,CAAC;MAEDC,MAAM,CAACC,OAAO,CAACK,KAAK,CAAC,CAACJ,OAAO,CAAC,CAAC,CAACO,GAAG,EAAEC,KAAK,CAAC,KAAK;QAC9C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;UAC/C,MAAMC,YAAY,GAAG;YACnBb,IAAI,EAAEW,GAAG;YACTV,QAAQ,EAAEC,MAAM,CAACC,OAAO,CAACS,KAAK,CAAC,CAACE,GAAG,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,MAAM;cAC/ChB,IAAI,EAAEe,CAAC;cACPH,KAAK,EAAEI;YACT,CAAC,CAAC;UACJ,CAAC;UACDP,SAAS,CAACR,QAAQ,CAACgB,IAAI,CAACJ,YAAY,CAAC;QACvC,CAAC,MAAM;UACL;UACAJ,SAAS,CAACR,QAAQ,CAACgB,IAAI,CAAC;YACtBjB,IAAI,EAAEW,GAAG;YACTC,KAAK,EAAEA;UACT,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEFL,WAAW,CAACN,QAAQ,CAACgB,IAAI,CAACR,SAAS,CAAC;IACtC,CAAC,CAAC;IAEFV,SAAS,CAACE,QAAQ,CAACgB,IAAI,CAACV,WAAW,CAAC;EACtC,CAAC,CAAC;EAEF,OAAOR,SAAS;AAClB,CAAC;AAED,MAAMmB,cAAc,GAAGA,CAAC;EAAEpB;AAAK,CAAC,KAAK;EACnC,MAAMqB,eAAe,GAAGtB,wBAAwB,CAACC,IAAI,CAAC;EACtDsB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,eAAe,CAAC;EAC7C,oBAAOvB,OAAA,CAACF,QAAQ;IAACI,IAAI,EAAEqB;EAAgB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C,CAAC;AAAAC,EAAA,GAJKR,cAAc;AAMpB,eAAeA,cAAc;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}