{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromUpdateExpression;\n/**\n * Extractor function for an UpdateExpression type value node.\n * An update expression is an expression with an update operator.\n * For example, foo++ will evaluate to foo + 1.\n *\n * @param - value - AST Value object with type `UpdateExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromUpdateExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n    argument = value.argument,\n    prefix = value.prefix;\n  var val = getValue(argument);\n  switch (operator) {\n    case '++':\n      return prefix ? ++val : val++;\n    // eslint-disable-line no-plusplus\n    case '--':\n      return prefix ? --val : val--;\n    // eslint-disable-line no-plusplus\n    default:\n      return undefined;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromUpdateExpression","getValue","require","operator","argument","prefix","val","undefined"],"sources":["/Users/goncaloarieiro/thesis/multimodal-interaction-app/node_modules/jsx-ast-utils/lib/values/expressions/UpdateExpression.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromUpdateExpression;\n/**\n * Extractor function for an UpdateExpression type value node.\n * An update expression is an expression with an update operator.\n * For example, foo++ will evaluate to foo + 1.\n *\n * @param - value - AST Value object with type `UpdateExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromUpdateExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      argument = value.argument,\n      prefix = value.prefix;\n\n\n  var val = getValue(argument);\n\n  switch (operator) {\n    case '++':\n      return prefix ? ++val : val++; // eslint-disable-line no-plusplus\n    case '--':\n      return prefix ? --val : val--; // eslint-disable-line no-plusplus\n    default:\n      return undefined;\n  }\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,gCAAgC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gCAAgCA,CAACF,KAAK,EAAE;EAC/C;EACA,IAAIG,QAAQ,GAAGC,OAAO,CAAC,GAAG,CAAC,CAACH,OAAO;EACnC,IAAII,QAAQ,GAAGL,KAAK,CAACK,QAAQ;IACzBC,QAAQ,GAAGN,KAAK,CAACM,QAAQ;IACzBC,MAAM,GAAGP,KAAK,CAACO,MAAM;EAGzB,IAAIC,GAAG,GAAGL,QAAQ,CAACG,QAAQ,CAAC;EAE5B,QAAQD,QAAQ;IACd,KAAK,IAAI;MACP,OAAOE,MAAM,GAAG,EAAEC,GAAG,GAAGA,GAAG,EAAE;IAAE;IACjC,KAAK,IAAI;MACP,OAAOD,MAAM,GAAG,EAAEC,GAAG,GAAGA,GAAG,EAAE;IAAE;IACjC;MACE,OAAOC,SAAS;EACpB;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}