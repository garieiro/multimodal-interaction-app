{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fetchStaticDataFromAPI from './api/StaticData';\nimport './App.css';\nimport BarChart from './components/charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedData = await fetchStaticDataFromAPI();\n        setData(fetchedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Função para contar o número de eventos em cada array de dados\n  const countEventTypes = dataArray => {\n    const eventCounts = {};\n    dataArray.forEach(events => {\n      events.forEach(event => {\n        const eventType = event.EventType;\n        if (eventType in eventCounts) {\n          eventCounts[eventType]++;\n        } else {\n          eventCounts[eventType] = 1;\n        }\n      });\n    });\n    return {\n      eventCounts,\n      eventDurations\n    };\n  };\n  const calculateEventDurations = dataArray => {\n    const eventDurations = {};\n    dataArray.forEach(events => {\n      events.forEach(event => {\n        const eventType = event.EventType;\n        const timestamp = new Date(event.TimeStamp);\n        if (eventType in eventDurations) {\n          eventDurations[eventType] += timestamp - eventDurations[eventType].start;\n        } else {\n          eventDurations[eventType] = timestamp;\n        }\n      });\n    });\n    return eventDurations;\n  };\n\n  // Processamento dos dados\n  const eventDataForCountChart = countEventTypes(data);\n  const eventDurations = calculateEventDurations(data);\n  console.log('Contagem de eventos:', eventDataForCountChart);\n  console.log('Duração dos eventos:', eventDurations);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contagem de Eventos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        data: Object.entries(eventDataForCountChart).map(([eventType, count]) => ({\n          name: eventType,\n          value: count\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dura\\xE7\\xE3o de Eventos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        data: Object.entries(eventDurations).map(([eventType, duration]) => ({\n          name: eventType,\n          value: duration\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchStaticDataFromAPI","BarChart","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","fetchedData","error","console","countEventTypes","dataArray","eventCounts","forEach","events","event","eventType","EventType","eventDurations","calculateEventDurations","timestamp","Date","TimeStamp","start","eventDataForCountChart","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","count","name","value","duration","_c","$RefreshReg$"],"sources":["/home/arieiro/Private/thesis/multimodalApp/multimodal-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetchStaticDataFromAPI from './api/StaticData';\nimport './App.css';\nimport BarChart from './components/charts/BarChart';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedData = await fetchStaticDataFromAPI();\n        setData(fetchedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Função para contar o número de eventos em cada array de dados\n  const countEventTypes = (dataArray) => {\n    const eventCounts = {};\n\n    dataArray.forEach((events) => {\n      events.forEach((event) => {\n        const eventType = event.EventType;\n        if (eventType in eventCounts) {\n          eventCounts[eventType]++;\n        } else {\n          eventCounts[eventType] = 1;\n        }\n      });\n    });\n\n    return {eventCounts, eventDurations};\n  };\n\n  const calculateEventDurations = (dataArray) => {\n    const eventDurations = {};\n\n    dataArray.forEach((events) => {\n      events.forEach((event) => {\n        const eventType = event.EventType;\n        const timestamp = new Date(event.TimeStamp);\n\n        if (eventType in eventDurations) {\n          eventDurations[eventType] += timestamp - eventDurations[eventType].start;\n        } else {\n          eventDurations[eventType] = timestamp;\n        }\n      });\n    });\n\n    return eventDurations;\n  };\n\n  // Processamento dos dados\n  const eventDataForCountChart = countEventTypes(data);\n  const eventDurations = calculateEventDurations(data);\n\n\n  console.log('Contagem de eventos:', eventDataForCountChart);\n  console.log('Duração dos eventos:', eventDurations);\n\n  return (\n    <div>\n      <h1>Bar Charts</h1>\n      <div>\n        <h2>Contagem de Eventos</h2>\n        <BarChart data={Object.entries(eventDataForCountChart).map(([eventType, count]) => ({ name: eventType, value: count }))} />\n      </div>\n      <div>\n        <h2>Duração de Eventos</h2>\n        <BarChart data={Object.entries(eventDurations).map(([eventType, duration]) => ({ name: eventType, value: duration }))} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}